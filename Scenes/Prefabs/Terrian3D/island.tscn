[gd_scene load_steps=95 format=4 uid="uid://daboi1jlu17kv"]

[ext_resource type="Script" uid="uid://bp4oxg1rwuhha" path="res://Scenes/Worlds/vegetation_controller.gd" id="1_5goeu"]
[ext_resource type="Script" uid="uid://c3nblwmdbngjd" path="res://Scenes/Prefabs/Terrian3D/camera_reflection_script.gd" id="2_xamh6"]
[ext_resource type="Texture2D" uid="uid://gwmftebchbe2" path="res://Assets/Textures/Terrian/rockChannelPack.dds" id="3_1fbo2"]
[ext_resource type="PackedScene" uid="uid://b02uboce77q78" path="res://Scenes/player.tscn" id="3_ixfdx"]
[ext_resource type="Script" uid="uid://d3007jjj3ysum" path="res://addons/proton_scatter/src/scatter.gd" id="3_xibtk"]
[ext_resource type="Script" uid="uid://ca8pisaxtcocg" path="res://addons/proton_scatter/src/stack/modifier_stack.gd" id="4_5goeu"]
[ext_resource type="Texture2D" uid="uid://drnvkn4smbfde" path="res://Assets/Textures/Terrian/rockNMChannelPack.dds" id="4_81a5s"]
[ext_resource type="Script" uid="uid://cp3jx1mrtkcjb" path="res://Scenes/Prefabs/Terrian3D/lighthouse_test.gd" id="4_qdxfb"]
[ext_resource type="Script" uid="uid://bgs671o5k8jlx" path="res://addons/proton_scatter/src/modifiers/base_modifier.gd" id="5_2pxrh"]
[ext_resource type="Shader" uid="uid://djbvyop2hlcny" path="res://Scenes/Prefabs/Terrian3D/reflection_mirror.tres" id="5_hw0cs"]
[ext_resource type="Texture2D" uid="uid://0a4p8ttgrxst" path="res://Assets/Textures/Terrian/groundChannelpack.dds" id="6_5goeu"]
[ext_resource type="Texture2D" uid="uid://c4q2bmujmanc6" path="res://addons/proton_scatter/masks/wave.png" id="6_50t84"]
[ext_resource type="Script" uid="uid://ct05k3a6y5hyo" path="res://addons/proton_scatter/src/modifiers/create_inside_random.gd" id="6_qdxfb"]
[ext_resource type="Texture2D" uid="uid://cyrgusgi6mtf7" path="res://Assets/Textures/Terrian/brown_mud_ro.dds" id="6_su5jx"]
[ext_resource type="Script" uid="uid://db6la44jbj7vg" path="res://addons/proton_scatter/src/modifiers/randomize_transforms.gd" id="7_2urbo"]
[ext_resource type="Texture2D" uid="uid://de5f6fg30eanj" path="res://Assets/Textures/Terrian/white_rocky_path_alb.dds" id="7_ofyio"]
[ext_resource type="Texture2D" uid="uid://6mpij246t75a" path="res://Assets/SkyHDRIs/overcast_soil_puresky_4k.exr" id="7_qyqh0"]
[ext_resource type="PackedScene" uid="uid://blmtegf3uucdb" path="res://Scenes/Prefabs/StaticObjects/water.tscn" id="8_ofyio"]
[ext_resource type="Texture2D" uid="uid://kkw7tj0wmfcg" path="res://Assets/Textures/Terrian/white_rocky_path_ro.dds" id="8_su5jx"]
[ext_resource type="Script" uid="uid://c5ejxc8gumioa" path="res://addons/proton_scatter/src/modifiers/relax.gd" id="8_xamh6"]
[ext_resource type="Script" uid="uid://dgnxbxfae5q7s" path="res://addons/proton_scatter/src/modifiers/project_on_geometry.gd" id="9_hw0cs"]
[ext_resource type="PackedScene" uid="uid://u0uxftghqh6o" path="res://Scenes/Prefabs/MoveableObjects/boat_rigidbody.tscn" id="9_ofyio"]
[ext_resource type="Script" uid="uid://gsis7aynvgt6" path="res://addons/proton_scatter/src/scatter_item.gd" id="10_50t84"]
[ext_resource type="Script" uid="uid://y2mtkg4bl7bd" path="res://addons/proton_scatter/src/scatter_shape.gd" id="11_bs2qi"]
[ext_resource type="PackedScene" uid="uid://c58mf4eo44edj" path="res://Scenes/Prefabs/Vegetation/PineTree1.tscn" id="19_8d1kf"]
[ext_resource type="Script" uid="uid://cuhw5q8rxmo56" path="res://addons/proton_scatter/src/shapes/box_shape.gd" id="21_5goeu"]
[ext_resource type="PackedScene" uid="uid://ydaaplfdio8w" path="res://Scenes/Prefabs/Vegetation/Tree1Dead.tscn" id="22_2pxrh"]
[ext_resource type="PackedScene" uid="uid://ddtrcmyhg12ct" path="res://Scenes/Prefabs/Bird/bird.tscn" id="24_2urbo"]
[ext_resource type="Texture2D" uid="uid://c3lj8f8mueaef" path="res://Assets/Textures/Terrian/brown_mud_alb.dds" id="24_bs2qi"]
[ext_resource type="Texture2D" uid="uid://bwl0w52g37pwi" path="res://Assets/Textures/FinanceTemp.png" id="25_xamh6"]
[ext_resource type="PackedScene" uid="uid://d3sr0a7dxfkr8" path="res://addons/terrain_3d/extras/particle_example/Terrain3DParticles.tscn" id="29_g6jtk"]
[ext_resource type="Script" uid="uid://bwivfyhesnmls" path="res://Scripts/GUI/FPSMeter.gd" id="32_4oj3f"]
[ext_resource type="Texture2D" uid="uid://bijijbpn4pjms" path="res://Assets/Models/Barn/textures/T_Fence.png" id="63_qadhd"]
[ext_resource type="Texture2D" uid="uid://cv10q45wtqjxs" path="res://Assets/Models/Barn/textures/T_Fence_MRO.png" id="64_buov7"]

[sub_resource type="PrismMesh" id="PrismMesh_xamh6"]

[sub_resource type="QuadMesh" id="QuadMesh_m7j6o"]
resource_local_to_scene = true
subdivide_width = 200
subdivide_depth = 200
orientation = 1

[sub_resource type="ViewportTexture" id="ViewportTexture_bpwbf"]
viewport_path = NodePath("SubViewport")

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_giyt4"]
resource_local_to_scene = true
transparency = 1
shading_mode = 0
albedo_texture = SubResource("ViewportTexture_bpwbf")

[sub_resource type="ViewportTexture" id="ViewportTexture_bs2qi"]
viewport_path = NodePath("SubViewport")

[sub_resource type="FastNoiseLite" id="FastNoiseLite_hw0cs"]
noise_type = 3

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_50t84"]
seamless = true
noise = SubResource("FastNoiseLite_hw0cs")

[sub_resource type="FastNoiseLite" id="FastNoiseLite_bs2qi"]
noise_type = 3

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_g6jtk"]
seamless = true
noise = SubResource("FastNoiseLite_bs2qi")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_xamh6"]
resource_local_to_scene = true
render_priority = 0
shader = ExtResource("5_hw0cs")
shader_parameter/refl_tx = SubResource("ViewportTexture_bs2qi")
shader_parameter/color_shallow = Color(0.281975, 0.367985, 0.462022, 1)
shader_parameter/color_deep = Color(0.110007, 0.167586, 0.228087, 1)
shader_parameter/transparency = 0.0
shader_parameter/metallic = 0.0
shader_parameter/roughness = 0.42
shader_parameter/max_visible_depth = 8.1
shader_parameter/wave_a = SubResource("NoiseTexture2D_50t84")
shader_parameter/wave_b = SubResource("NoiseTexture2D_g6jtk")
shader_parameter/wave_move_direction_a = Vector2(-1, 0)
shader_parameter/wave_move_direction_b = Vector2(0, 1)
shader_parameter/wave_noise_scale_a = 15.0
shader_parameter/wave_noise_scale_b = 15.0
shader_parameter/wave_time_scale_a = 0.15
shader_parameter/wave_time_scale_b = 0.15
shader_parameter/wave_height_scale = 1.0
shader_parameter/wave_normal_flatness = 50.0
shader_parameter/surface_normals_a = ExtResource("6_50t84")
shader_parameter/surface_normals_move_direction_a = Vector2(-1, 0.2)
shader_parameter/surface_normals_move_direction_b = Vector2(0.2, 1)
shader_parameter/surface_texture_roughness = 0.15
shader_parameter/surface_texture_scale = 0.1
shader_parameter/surface_texture_time_scale = 0.06
shader_parameter/ssr_resolution = 1.0
shader_parameter/ssr_max_travel = 30.0
shader_parameter/ssr_max_diff = 4.0
shader_parameter/ssr_mix_strength = 0.7
shader_parameter/ssr_screen_border_fadeout = 0.3
shader_parameter/refraction_intensity = 0.4
shader_parameter/border_color = Color(0.36871, 0.368669, 0.345564, 1)
shader_parameter/border_scale = 0.0
shader_parameter/border_near = 1.71
shader_parameter/border_far = 300.0
shader_parameter/cut_out_x = 0.0
shader_parameter/cut_out_z = 0.0

[sub_resource type="ViewportTexture" id="ViewportTexture_hw0cs"]
viewport_path = NodePath("SubViewport")

[sub_resource type="PanoramaSkyMaterial" id="PanoramaSkyMaterial_8d1kf"]
panorama = ExtResource("7_qyqh0")
energy_multiplier = 0.2

[sub_resource type="Sky" id="Sky_4eyav"]
sky_material = SubResource("PanoramaSkyMaterial_8d1kf")

[sub_resource type="Environment" id="Environment_ofyio"]
background_mode = 2
background_energy_multiplier = 1.14
sky = SubResource("Sky_4eyav")
sky_rotation = Vector3(0, 3.25504, 0)
ambient_light_source = 3
ambient_light_color = Color(1, 1, 1, 1)
tonemap_mode = 2
tonemap_white = 6.15
ssr_depth_tolerance = 0.01
ssil_enabled = true
glow_normalized = true
glow_intensity = 8.0
glow_strength = 1.51
fog_light_color = Color(0.340533, 0.360442, 0.31598, 1)
fog_light_energy = 1.39
fog_density = 0.0
fog_depth_curve = 0.48297
volumetric_fog_enabled = true
volumetric_fog_density = 0.0175
volumetric_fog_albedo = Color(0.426016, 0.459534, 0.409195, 1)
volumetric_fog_emission_energy = 0.0
volumetric_fog_gi_inject = 0.25
volumetric_fog_anisotropy = 0.71
volumetric_fog_length = 54.36
volumetric_fog_ambient_inject = 1.7
volumetric_fog_temporal_reprojection_enabled = false
volumetric_fog_temporal_reprojection_amount = 0.767

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_2pxrh"]
albedo_color = Color(0.284646, 0.516123, 0.647613, 1)
emission_enabled = true
emission = Color(0.841338, 0.760811, 0.674904, 1)
emission_energy_multiplier = 16.0

[sub_resource type="SphereMesh" id="SphereMesh_qdxfb"]
material = SubResource("StandardMaterial3D_2pxrh")

[sub_resource type="Resource" id="Resource_0nt5j"]
script = ExtResource("6_qdxfb")
amount = 400
enabled = true
override_global_seed = false
custom_seed = 0
restrict_height = true
reference_frame = 1

[sub_resource type="Resource" id="Resource_5pv16"]
script = ExtResource("7_2urbo")
position = Vector3(0.15, 0.15, 0.15)
rotation = Vector3(0, 360, 0)
scale = Vector3(0.1, 0.1, 0.1)
enabled = true
override_global_seed = false
custom_seed = 0
restrict_height = false
reference_frame = 2

[sub_resource type="Resource" id="Resource_igrxm"]
script = ExtResource("8_xamh6")
iterations = 3
offset_step = 0.2
consecutive_step_multiplier = 0.75
use_computeshader = true
enabled = true
override_global_seed = false
custom_seed = 0
restrict_height = true
reference_frame = 0

[sub_resource type="Resource" id="Resource_e0c4p"]
script = ExtResource("9_hw0cs")
ray_direction = Vector3(0, -1, 0)
ray_length = 7.0
ray_offset = 5.0
remove_points_on_miss = true
align_with_collision_normal = false
max_slope = 90.0
collision_mask = 1
exclude_mask = 0
enabled = true
override_global_seed = false
custom_seed = 0
restrict_height = false
reference_frame = 0

[sub_resource type="Resource" id="Resource_3okr3"]
script = ExtResource("4_5goeu")
stack = Array[ExtResource("5_2pxrh")]([SubResource("Resource_0nt5j"), SubResource("Resource_5pv16"), SubResource("Resource_igrxm"), SubResource("Resource_e0c4p")])

[sub_resource type="Resource" id="Resource_ynw5p"]
script = ExtResource("21_5goeu")
size = Vector3(144.303, 19.9462, 141.412)

[sub_resource type="Resource" id="Resource_01rrv"]
script = ExtResource("6_qdxfb")
amount = 800
enabled = true
override_global_seed = false
custom_seed = 0
restrict_height = true
reference_frame = 1

[sub_resource type="Resource" id="Resource_wuihy"]
script = ExtResource("7_2urbo")
position = Vector3(0.15, 0.15, 0.15)
rotation = Vector3(0, 360, 0)
scale = Vector3(0.1, 0.1, 0.1)
enabled = true
override_global_seed = false
custom_seed = 0
restrict_height = false
reference_frame = 2

[sub_resource type="Resource" id="Resource_qj21e"]
script = ExtResource("8_xamh6")
iterations = 3
offset_step = 0.2
consecutive_step_multiplier = 0.75
use_computeshader = true
enabled = true
override_global_seed = false
custom_seed = 0
restrict_height = true
reference_frame = 0

[sub_resource type="Resource" id="Resource_l707q"]
script = ExtResource("9_hw0cs")
ray_direction = Vector3(0, -1, 0)
ray_length = 9.0
ray_offset = 45.0
remove_points_on_miss = true
align_with_collision_normal = false
max_slope = 90.0
collision_mask = 1
exclude_mask = 0
enabled = true
override_global_seed = false
custom_seed = 0
restrict_height = false
reference_frame = 0

[sub_resource type="Resource" id="Resource_0scib"]
script = ExtResource("4_5goeu")
stack = Array[ExtResource("5_2pxrh")]([SubResource("Resource_01rrv"), SubResource("Resource_wuihy"), SubResource("Resource_qj21e"), SubResource("Resource_l707q")])

[sub_resource type="Resource" id="Resource_giyt4"]
script = ExtResource("21_5goeu")
size = Vector3(111.525, 46.2597, 235.604)

[sub_resource type="Resource" id="Resource_iqehx"]
script = ExtResource("6_qdxfb")
amount = 800
enabled = true
override_global_seed = false
custom_seed = 0
restrict_height = true
reference_frame = 1

[sub_resource type="Resource" id="Resource_pk54t"]
script = ExtResource("7_2urbo")
position = Vector3(0.15, 0.15, 0.15)
rotation = Vector3(0, 360, 0)
scale = Vector3(0.1, 0.1, 0.1)
enabled = true
override_global_seed = false
custom_seed = 0
restrict_height = false
reference_frame = 2

[sub_resource type="Resource" id="Resource_8scoo"]
script = ExtResource("8_xamh6")
iterations = 3
offset_step = 0.2
consecutive_step_multiplier = 0.75
use_computeshader = true
enabled = true
override_global_seed = false
custom_seed = 0
restrict_height = true
reference_frame = 0

[sub_resource type="Resource" id="Resource_3ru7h"]
script = ExtResource("9_hw0cs")
ray_direction = Vector3(0, -1, 0)
ray_length = 9.0
ray_offset = 45.0
remove_points_on_miss = true
align_with_collision_normal = false
max_slope = 90.0
collision_mask = 1
exclude_mask = 0
enabled = true
override_global_seed = false
custom_seed = 0
restrict_height = false
reference_frame = 0

[sub_resource type="Resource" id="Resource_ywoo1"]
script = ExtResource("4_5goeu")
stack = Array[ExtResource("5_2pxrh")]([SubResource("Resource_iqehx"), SubResource("Resource_pk54t"), SubResource("Resource_8scoo"), SubResource("Resource_3ru7h")])

[sub_resource type="Resource" id="Resource_gqvl0"]
script = ExtResource("21_5goeu")
size = Vector3(144.303, 46.2597, 274.132)

[sub_resource type="Resource" id="Resource_825w7"]
script = ExtResource("6_qdxfb")
amount = 400
enabled = true
override_global_seed = false
custom_seed = 0
restrict_height = true
reference_frame = 1

[sub_resource type="Resource" id="Resource_obfdc"]
script = ExtResource("7_2urbo")
position = Vector3(0.15, 0.15, 0.15)
rotation = Vector3(0, 360, 0)
scale = Vector3(0.1, 0.1, 0.1)
enabled = true
override_global_seed = false
custom_seed = 0
restrict_height = false
reference_frame = 2

[sub_resource type="Resource" id="Resource_8c0q4"]
script = ExtResource("8_xamh6")
iterations = 3
offset_step = 0.2
consecutive_step_multiplier = 0.75
use_computeshader = true
enabled = true
override_global_seed = false
custom_seed = 0
restrict_height = true
reference_frame = 0

[sub_resource type="Resource" id="Resource_kpu2b"]
script = ExtResource("9_hw0cs")
ray_direction = Vector3(0, -1, 0)
ray_length = 7.0
ray_offset = 5.0
remove_points_on_miss = true
align_with_collision_normal = false
max_slope = 90.0
collision_mask = 1
exclude_mask = 0
enabled = true
override_global_seed = false
custom_seed = 0
restrict_height = false
reference_frame = 0

[sub_resource type="Resource" id="Resource_3abxa"]
script = ExtResource("4_5goeu")
stack = Array[ExtResource("5_2pxrh")]([SubResource("Resource_825w7"), SubResource("Resource_obfdc"), SubResource("Resource_8c0q4"), SubResource("Resource_kpu2b")])

[sub_resource type="Resource" id="Resource_u2ymd"]
script = ExtResource("21_5goeu")
size = Vector3(144.303, 19.9462, 141.412)

[sub_resource type="Gradient" id="Gradient_fc8pc"]
offsets = PackedFloat32Array(0.2, 1)
colors = PackedColorArray(1, 1, 1, 1, 0, 0, 0, 1)

[sub_resource type="FastNoiseLite" id="FastNoiseLite_ixfdx"]
noise_type = 2
frequency = 0.03
cellular_jitter = 3.0
cellular_return_type = 0
domain_warp_enabled = true
domain_warp_type = 1
domain_warp_amplitude = 50.0
domain_warp_fractal_type = 2
domain_warp_fractal_lacunarity = 1.5
domain_warp_fractal_gain = 1.0

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_ceh45"]
seamless = true
color_ramp = SubResource("Gradient_fc8pc")
noise = SubResource("FastNoiseLite_ixfdx")

[sub_resource type="Shader" id="Shader_qyqh0"]
code = "shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx,skip_vertex_transform;

/* The terrain depends on this shader to function. Don't change most things in vertex() or 
 * terrain normal calculations in fragment(). You probably only want to customize the 
 * material calculation and PBR application in fragment().
 *
 * Uniforms that begin with _ are private and will not display in the inspector. However, 
 * you can set them via code. You are welcome to create more of your own hidden uniforms.
 *
 * This system only supports albedo, height, normal, roughness. Most textures don't need the other
 * PBR channels. Height can be used as an approximation for AO. For the rare textures do need
 * additional channels, you can add maps for that one texture. e.g. an emissive map for lava.
 *
 */

// Defined Constants
#define SKIP_PASS 0
#define VERTEX_PASS 1
#define FRAGMENT_PASS 2

#if CURRENT_RENDERER == RENDERER_COMPATIBILITY
    #define fma(a, b, c) ((a) * (b) + (c))
    #define dFdxCoarse(a) dFdx(a)
    #define dFdyCoarse(a) dFdy(a)
#endif

// Private uniforms
uniform vec3 _camera_pos = vec3(0.f);
uniform float _mesh_size = 48.f;
uniform uint _background_mode = 1u; // NONE = 0, FLAT = 1, NOISE = 2
uniform uint _mouse_layer = 0x80000000u; // Layer 32
uniform float _vertex_spacing = 1.0;
uniform float _vertex_density = 1.0; // = 1/_vertex_spacing
uniform float _region_size = 1024.0;
uniform float _region_texel_size = 0.0009765625; // = 1/1024
uniform int _region_map_size = 32;
uniform int _region_map[1024];
uniform vec2 _region_locations[1024];
uniform float _texture_normal_depth_array[32];
uniform float _texture_ao_strength_array[32];
uniform float _texture_roughness_mod_array[32];
uniform float _texture_uv_scale_array[32];
uniform vec2 _texture_detile_array[32];
uniform vec4 _texture_color_array[32];
uniform highp sampler2DArray _height_maps : repeat_disable;
uniform highp sampler2DArray _control_maps : repeat_disable;
#define FILTER_NEAREST
uniform highp sampler2DArray _color_maps : source_color, filter_nearest_mipmap_anisotropic, repeat_disable;
uniform highp sampler2DArray _texture_array_albedo : source_color, filter_nearest_mipmap_anisotropic, repeat_enable;
uniform highp sampler2DArray _texture_array_normal : hint_normal, filter_nearest_mipmap_anisotropic, repeat_enable;


// Public uniforms
uniform float auto_slope : hint_range(0, 10) = 1.0;
uniform float auto_height_reduction : hint_range(0, 1) = 0.1;
uniform int auto_base_texture : hint_range(0, 31) = 0;
uniform int auto_overlay_texture : hint_range(0, 31) = 1;

uniform bool height_blending = true;
uniform bool world_space_normal_blend = true;
uniform float blend_sharpness : hint_range(0, 1) = 0.87;

uniform bool enable_projection = true;
uniform float projection_threshold : hint_range(0.0, 0.99, 0.01) = 0.8;
uniform float projection_angular_division : hint_range(1.0, 16.0, 0.001) = 2.0;

uniform float mipmap_bias : hint_range(0.5, 1.5, 0.01) = 1.0;
uniform float depth_blur : hint_range(0.0, 35.0, 0.1) = 0.0;
uniform float bias_distance : hint_range(0.0, 16384.0, 0.1) = 512.0;

uniform bool enable_macro_variation = true;
uniform vec3 macro_variation1 : source_color = vec3(1.);
uniform vec3 macro_variation2 : source_color = vec3(1.);
uniform float macro_variation_slope : hint_range(0., 1.)  = 0.333;

// Generic noise at 3 scales, which can be used for anything 
uniform highp sampler2D noise_texture : source_color, filter_nearest_mipmap_anisotropic, repeat_enable;

uniform float noise1_scale : hint_range(0.001, 1.) = 0.04; // Used for macro variation 1. Scaled up 10x
uniform float noise1_angle : hint_range(0, 6.283) = 0.;
uniform vec2 noise1_offset = vec2(0.5);
uniform float noise2_scale : hint_range(0.001, 1.) = 0.076;	// Used for macro variation 2. Scaled up 10x
uniform float noise3_scale : hint_range(0.001, 1.) = 0.225; // Used for texture blending edge

// Varyings & Types

struct Material {
	vec4 alb_ht;
	vec4 nrm_rg;
	int base;
	int over;
	float blend;
	float nrm_depth;
	float ao_str;
};


varying float v_vertex_xz_dist;
varying vec3 v_vertex;

////////////////////////
// Vertex
////////////////////////

// Takes in world space XZ (UV) coordinates & search depth (only applicable for background mode none)
// Returns ivec3 with:
// XY: (0 to _region_size - 1) coordinates within a region
// Z: layer index used for texturearrays, -1 if not in a region
ivec3 get_index_coord(const vec2 uv, const int search) {
	vec2 r_uv = round(uv);
	vec2 o_uv = mod(r_uv,_region_size);
	ivec2 pos;
	int bounds, layer_index = -1;
	for (int i = -1; i < clamp(search, SKIP_PASS, FRAGMENT_PASS); i++) {
		if ((layer_index == -1 && _background_mode == 0u ) || i < 0) {
			r_uv -= i == -1 ? vec2(0.0) : vec2(float(o_uv.x <= o_uv.y), float(o_uv.y <= o_uv.x));
			pos = ivec2(floor((r_uv) * _region_texel_size)) + (_region_map_size / 2);
			bounds = int(uint(pos.x | pos.y) < uint(_region_map_size));
			layer_index = (_region_map[ pos.y * _region_map_size + pos.x ] * bounds - 1);
		}
	}
	return ivec3(ivec2(mod(r_uv,_region_size)), layer_index);
}

// Takes in descaled (world_space / region_size) world to region space XZ (UV2) coordinates, returns vec3 with:
// XY: (0. to 1.) coordinates within a region
// Z: layer index used for texturearrays, -1 if not in a region
vec3 get_index_uv(const vec2 uv2) {
	ivec2 pos = ivec2(floor(uv2)) + (_region_map_size / 2);
	int bounds = int(uint(pos.x | pos.y) < uint(_region_map_size));
	int layer_index = _region_map[ pos.y * _region_map_size + pos.x ] * bounds - 1;
	return vec3(uv2 - _region_locations[layer_index], float(layer_index));
}

void vertex() {
	// Get vertex of flat plane in world coordinates and set world UV
	v_vertex = (MODEL_MATRIX * vec4(VERTEX, 1.0)).xyz;

	// Camera distance to vertex on flat plane
	v_vertex_xz_dist = length(v_vertex.xz - _camera_pos.xz);

	// Geomorph vertex, set end and start for linear height interpolate
	float scale = MODEL_MATRIX[0][0];
	float vertex_lerp = smoothstep(0.55, 0.95, (v_vertex_xz_dist / scale - _mesh_size - 4.0) / (_mesh_size - 2.0));
	vec2 v_fract = fract(VERTEX.xz * 0.5) * 2.0;
	// For LOD0 morph from a regular grid to an alternating grid to align with LOD1+
	vec2 shift = (scale < _vertex_spacing + 1e-6) ? // LOD0 or not
		// Shift from regular to symetric
		mix(v_fract, vec2(v_fract.x, -v_fract.y),
			round(fract(round(mod(v_vertex.z * _vertex_density, 4.0)) *
			round(mod(v_vertex.x * _vertex_density, 4.0)) * 0.25))
			) :
		// Symetric shift
		v_fract * round((fract(v_vertex.xz * 0.25 / scale) - 0.5) * 4.0);
	vec2 start_pos = v_vertex.xz * _vertex_density;
	vec2 end_pos = (v_vertex.xz - shift * scale) * _vertex_density;
	v_vertex.xz -= shift * scale * vertex_lerp;

	// UV coordinates in world space. Values are 0 to _region_size within regions
	UV = v_vertex.xz * _vertex_density;

	// UV coordinates in region space + texel offset. Values are 0 to 1 within regions
	UV2 = fma(UV, vec2(_region_texel_size), vec2(0.5 * _region_texel_size));

	// Discard vertices for Holes. 1 lookup
	ivec3 v_region = get_index_coord(start_pos, VERTEX_PASS);
	uint control = floatBitsToUint(texelFetch(_control_maps, v_region, 0)).r;
	bool hole = bool(control >>2u & 0x1u);

	// Show holes to all cameras except mouse camera (on exactly 1 layer)
	if ( !(CAMERA_VISIBLE_LAYERS == _mouse_layer) && 
			(hole || (_background_mode == 0u && v_region.z == -1))) {
		v_vertex.x = 0. / 0.;
	} else {		
		// Set final vertex height & calculate vertex normals. 3 lookups
		ivec3 coord_a = get_index_coord(start_pos, VERTEX_PASS);
		ivec3 coord_b = get_index_coord(end_pos, VERTEX_PASS);
		float h = mix(texelFetch(_height_maps, coord_a, 0).r,texelFetch(_height_maps, coord_b, 0).r,vertex_lerp);
		v_vertex.y = h;
	}

	// Convert model space to view space w/ skip_vertex_transform render mode
	VERTEX = (VIEW_MATRIX * vec4(v_vertex, 1.0)).xyz;
	NORMAL = normalize((MODELVIEW_MATRIX * vec4(NORMAL, 0.0)).xyz);
	BINORMAL = normalize((MODELVIEW_MATRIX * vec4(BINORMAL, 0.0)).xyz);
	TANGENT = normalize((MODELVIEW_MATRIX * vec4(TANGENT, 0.0)).xyz);
}

////////////////////////
// Fragment
////////////////////////

vec3 unpack_normal(vec4 rgba) {
	return fma(rgba.xzy, vec3(2.0), vec3(-1.0));
}

vec3 pack_normal(vec3 n) {
	return fma(normalize(n.xzy), vec3(0.5), vec3(0.5));
}

float random(in vec2 xy) {
	return fract(sin(dot(xy, vec2(12.9898, 78.233))) * 43758.5453);
}

vec2 rotate(vec2 v, float cosa, float sina) {
	return vec2(fma(cosa, v.x, - sina * v.y), fma(sina, v.x, cosa * v.y));
}

// Moves a point around a pivot point.
vec2 rotate_around(vec2 point, vec2 pivot, float angle){
	float x = pivot.x + (point.x - pivot.x) * cos(angle) - (point.y - pivot.y) * sin(angle);
	float y = pivot.y + (point.x - pivot.x) * sin(angle) + (point.y - pivot.y) * cos(angle);
	return vec2(x, y);
}

vec4 height_blend4(vec4 a_value, float a_height, vec4 b_value, float b_height, float blend) {
	if(height_blending) {
		float ma = max(a_height + (1.0 - blend), b_height + blend) - (1.001 - blend_sharpness);
	    float b1 = max(a_height + (1.0 - blend) - ma, 0.0);
	    float b2 = max(b_height + blend - ma, 0.0);
	    return (a_value * b1 + b_value * b2) / (b1 + b2);
	} else {
		float contrast = 1.0 - blend_sharpness;
		float factor = (blend - contrast) / contrast;
		return mix(a_value, b_value, clamp(factor, 0.0, 1.0));
	}
}

float height_blend1(float a_value, float a_height, float b_value, float b_height, float blend) {
	if(height_blending) {
		float ma = max(a_height + (1.0 - blend), b_height + blend) - (1.001 - blend_sharpness);
	    float b1 = max(a_height + (1.0 - blend) - ma, 0.0);
	    float b2 = max(b_height + blend - ma, 0.0);
	    return (a_value * b1 + b_value * b2) / (b1 + b2);
	} else {
		float contrast = 1.0 - blend_sharpness;
		float factor = (blend - contrast) / contrast;
		return mix(a_value, b_value, clamp(factor, 0.0, 1.0));
	}
}

vec2 detiling(vec2 uv, vec2 uv_center, int mat_id, inout float normal_rotation){
	if ((_texture_detile_array[mat_id].x + _texture_detile_array[mat_id].y) >= 0.001){
		uv_center = floor(uv_center) + 0.5;
		float detile = fma(random(uv_center), 2.0, -1.0) * TAU; // -180deg to 180deg
		// Rotation
		float rotation = detile * _texture_detile_array[mat_id].x;
		uv = rotate_around(uv, uv_center, rotation);
		// Accumulate total rotation for normal rotation
		normal_rotation += rotation;
		// Shift
		uv += rotate(vec2(_texture_detile_array[mat_id].y * detile), cos(detile), sin(detile));
	}
	return uv;
}

vec2 rotate_plane(vec2 plane, float angle) {
	float new_x = dot(vec2(cos(angle), sin(angle)), plane);
	angle = fma(PI, 0.5, angle);
	float new_y = dot(vec2(cos(angle), sin(angle)), plane);
	return vec2(new_x, new_y);
}

// 2-4 lookups ( 2-6 with dual scaling )
void get_material(vec3 i_normal, float i_height, vec4 ddxy, uint control, ivec3 index, mat3 TANGENT_WORLD_MATRIX, out Material out_mat) {
	out_mat = Material(vec4(0.), vec4(0.), 0, 0, 0.0, 0.0, 0.0);
	vec2 index_pos = vec2(index.xy);
	int region = index.z;
	
	// Translate index position to world space.
	index_pos += _region_locations[region] * _region_size;
	index_pos *= _vertex_spacing;
	
	vec2 base_uv;
	float p_angle = 0.0;
	
	if (i_normal.y >= projection_threshold || !enable_projection) {
		base_uv = v_vertex.xz;
	} else {
		// Project UVs and determine surface normal angle
		// Quantize the normal otherwise textures lose continuity across domains
		// Avoid potential singularitys for unit length normal, usually worst case would be
		// sqrt(3.0)/2.0, however as we are nullifying y component and renormalizing, 
		// we can use sqrt(2.0)/2.0, as a lower bound.
		#define SQRT2_HALF 0.7071067811865476
		vec3 p_normal = normalize(vec3(i_normal.x, 0., i_normal.z));
		p_normal = normalize(round(p_normal * SQRT2_HALF * projection_angular_division));
		vec3 p_tangent = normalize(cross(p_normal, vec3(0., 1., 0.)));
		vec3 p_binormal = normalize(cross(p_tangent, p_normal));
		p_angle = atan(-i_normal.x, -i_normal.z);
		base_uv = vec2(dot(v_vertex, p_tangent), dot(v_vertex, p_binormal));
		// Project uv_center for detiling
		vec3 i_pos = vec3(index_pos.x, i_height, index_pos.y);
		index_pos = vec2(dot(i_pos, p_tangent), dot(i_pos, p_binormal));
	}

	// Enable Autoshader if outside regions or painted in regions, otherwise manual painted
	bool auto_shader = region < 0 || bool(control & 0x1u);
	out_mat.base = int(auto_shader) * auto_base_texture + int(!auto_shader) * int(control >>27u & 0x1Fu);
	out_mat.over = int(auto_shader) * auto_overlay_texture + int(!auto_shader) * int(control >> 22u & 0x1Fu);
	out_mat.blend = float(auto_shader) * clamp(
			(auto_slope * 2. * ( TANGENT_WORLD_MATRIX[1].y - 1.) + 1.)
			- auto_height_reduction * .01 * v_vertex.y // Reduce as vertices get higher
			, 0., 1.) + 
			 float(!auto_shader) * float(control >>14u & 0xFFu) * 0.003921568627450; // 1./255.0		

	out_mat.nrm_depth = _texture_normal_depth_array[out_mat.base];
	out_mat.ao_str = _texture_ao_strength_array[out_mat.base];

	// Control map scale & rotation, apply to both base and uv_center.
	// Define base scale from control map value as array index. 0.5 as baseline.
	float[8] scale_array = { 0.5, 0.4, 0.3, 0.2, 0.1, 0.8, 0.7, 0.6};
	float control_scale = scale_array[(control >>7u & 0x7u)];
	base_uv *= control_scale;
	index_pos *=  control_scale;
	ddxy *= control_scale;

	// Apply global uv rotation from control map
	float uv_rotation = float(control >>10u & 0xFu) / 16. * TAU;
	base_uv = rotate_around(base_uv, vec2(0), uv_rotation);
	index_pos = rotate_around(index_pos, vec2(0), uv_rotation);

	vec2 matUV = base_uv;
	vec4 albedo_ht = vec4(0.);
	vec4 normal_rg = vec4(0.5, 0.5, 1.0, 1.0);
	vec4 albedo_far = vec4(0.);
	vec4 normal_far = vec4(0.5, 0.5, 1.0, 1.0);
	float mat_scale = _texture_uv_scale_array[out_mat.base];
	float normal_angle = uv_rotation + p_angle;
	vec4 dd1 = ddxy;
	
	if (out_mat.blend < 1.0) {
		// 2 lookups
		matUV = detiling(base_uv * mat_scale, index_pos * mat_scale, out_mat.base, normal_angle);
		dd1.xy = rotate_plane(ddxy.xy, -normal_angle);
		dd1.zw = rotate_plane(ddxy.zw, -normal_angle);
		dd1 *= mat_scale;
		albedo_ht = textureGrad(_texture_array_albedo, vec3(matUV, float(out_mat.base)), dd1.xy, dd1.zw);
		normal_rg = textureGrad(_texture_array_normal, vec3(matUV, float(out_mat.base)), dd1.xy, dd1.zw);

		// Unpack & rotate base normal for blending
		normal_rg.xyz = unpack_normal(normal_rg).xyz;
		normal_rg.xz = rotate_plane(normal_rg.xz, -normal_angle);
	}

	// Apply color to base
	albedo_ht.rgb *= _texture_color_array[out_mat.base].rgb;

	// Apply Roughness modifier to base
	normal_rg.a = clamp(normal_rg.a + _texture_roughness_mod_array[out_mat.base], 0., 1.);

	out_mat.alb_ht = albedo_ht;
	out_mat.nrm_rg = normal_rg;

	if (out_mat.blend > 0.) {
		// 2 lookups
		// Setup overlay texture to blend
		float mat_scale2 = _texture_uv_scale_array[out_mat.over];
		float normal_angle2 = uv_rotation + p_angle;
		vec2 matUV2 = detiling(base_uv * mat_scale2, index_pos * mat_scale2, out_mat.over, normal_angle2);
		vec4 dd2 = ddxy * mat_scale2;
		dd2.xy = rotate_plane(dd2.xy, -normal_angle2);
		dd2.zw = rotate_plane(dd2.zw, -normal_angle2);
		vec4 albedo_ht2 = textureGrad(_texture_array_albedo, vec3(matUV2, float(out_mat.over)), dd2.xy, dd2.zw);
		vec4 normal_rg2 = textureGrad(_texture_array_normal, vec3(matUV2, float(out_mat.over)), dd2.xy, dd2.zw);

		// Unpack & rotate overlay normal for blending
		normal_rg2.xyz = unpack_normal(normal_rg2);
		normal_rg2.xz = rotate_plane(normal_rg2.xz, -normal_angle2);

		// Apply color to overlay
		albedo_ht2.rgb *= _texture_color_array[out_mat.over].rgb;

		// Apply Roughness modifier to overlay
		normal_rg2.a = clamp(normal_rg2.a + _texture_roughness_mod_array[out_mat.over], 0., 1.);

		// apply world space normal weighting from base, to overlay layer
		float over_blend = albedo_ht2.a; // dont modify actual height value
		if (world_space_normal_blend) {
			over_blend *= bool(control >>3u & 0x1u) ? 1.0 : clamp((TANGENT_WORLD_MATRIX * normal_rg.xyz).y, 0.0, 1.0);
		}

		// Blend overlay and base
		out_mat.alb_ht = height_blend4(albedo_ht, albedo_ht.a, albedo_ht2, over_blend, out_mat.blend);
		out_mat.nrm_rg = height_blend4(normal_rg, albedo_ht.a, normal_rg2, over_blend, out_mat.blend);
		out_mat.nrm_depth = height_blend1(_texture_normal_depth_array[out_mat.base], albedo_ht.a,
			_texture_normal_depth_array[out_mat.over], over_blend, out_mat.blend);
		out_mat.ao_str = height_blend1(_texture_ao_strength_array[out_mat.base], albedo_ht.a,
			_texture_ao_strength_array[out_mat.over], over_blend, out_mat.blend);
	}
	return;
}

float blend_weights(float weight, float detail) {
	weight = smoothstep(0.0, 1.0, weight);
	weight = sqrt(weight * 0.5);
	float result = max(0.1 * weight, fma(10.0, (weight + detail), 1.0f - (detail + 10.0)));
	return result;
}

void fragment() {
	// Recover UVs
	vec2 uv = UV;
	vec2 uv2 = UV2;
	
	// Lookup offsets, ID and blend weight
	const vec3 offsets = vec3(0, 1, 2);
	vec2 index_id = floor(uv);
	vec2 weight = fract(uv);
	vec2 invert = 1.0 - weight;
	vec4 weights = vec4(
		invert.x * weight.y, // 0
		weight.x * weight.y, // 1
		weight.x * invert.y, // 2
		invert.x * invert.y  // 3
	);
	
	vec3 base_ddx = dFdxCoarse(v_vertex);
	vec3 base_ddy = dFdyCoarse(v_vertex);
	vec4 base_derivatives = vec4(base_ddx.xz, base_ddy.xz);
	// Calculate the effective mipmap for regionspace, and when less than 0,
	// skip all extra lookups required for bilinear blend.
	float region_mip = log2(max(length(base_ddx.xz), length(base_ddy.xz)) * _vertex_density);
	bool bilerp = region_mip < 0.0;

	ivec3 index[4];
	// control map lookups, used for some normal lookups as well
	index[0] = get_index_coord(index_id + offsets.xy, FRAGMENT_PASS);
	index[1] = get_index_coord(index_id + offsets.yy, FRAGMENT_PASS);
	index[2] = get_index_coord(index_id + offsets.yx, FRAGMENT_PASS);
	index[3] = get_index_coord(index_id + offsets.xx, FRAGMENT_PASS);
	
	// Terrain normals
	vec3 index_normal[4];
	float h[8];
	// allows additional derivatives, eg world noise, brush previews etc
	float u = 0.0;
	float v = 0.0;
	
	// Re-use index[] for the first lookups, skipping some math. 3 lookups
	h[3] = texelFetch(_height_maps, index[3], 0).r; // 0 (0,0)
	h[2] = texelFetch(_height_maps, index[2], 0).r; // 1 (1,0)
	h[0] = texelFetch(_height_maps, index[0], 0).r; // 2 (0,1)
	index_normal[3] = normalize(vec3(h[3] - h[2] + u, _vertex_spacing, h[3] - h[0] + v));

	// Set flat world normal - overriden if bilerp is true
	vec3 w_normal = index_normal[3];

	// Setting this here, instead of after the branch appears to be ~10% faster.
	// Likley as flat derivatives seem more cache friendly for texture lookups.
	if (enable_projection && w_normal.y < projection_threshold) {
		vec3 p_tangent = normalize(cross(w_normal, vec3(0.0, 0.0, 1.0)));
		vec3 p_binormal = normalize(cross(p_tangent, w_normal));
		base_derivatives.xy = vec2(dot(base_ddx, p_tangent), dot(base_ddx, p_binormal));
		base_derivatives.zw = vec2(dot(base_ddy, p_tangent), dot(base_ddy, p_binormal));
	}
	
	// Adjust derivatives for mipmap bias and depth blur effect
	base_derivatives *=  mix(mipmap_bias,
		depth_blur + 1.,
		smoothstep(0.0, 1.0, (v_vertex_xz_dist - bias_distance) / bias_distance));

	// Colormap. 1 - 4 lookups
	#define COLOR_MAP vec4(1.0, 1.0, 1.0, 0.5)
	vec4 color_map;
	vec3 region_uv = get_index_uv(uv2);
	color_map = region_uv.z > -1.0 && !bilerp ? textureLod(_color_maps, region_uv, region_mip) : COLOR_MAP;

	// Branching smooth normals and interpolated color map must be done seperatley with unmodified weights.
	if (bilerp) {
		vec4 col_map[4];
		col_map[3] = index[3].z > -1 ? texelFetch(_color_maps, index[3], 0) : COLOR_MAP;
		color_map = col_map[3];
		#ifdef FILTER_LINEAR
		col_map[0] = index[0].z > -1 ? texelFetch(_color_maps, index[0], 0) : COLOR_MAP;
		col_map[1] = index[1].z > -1 ? texelFetch(_color_maps, index[1], 0) : COLOR_MAP;
		col_map[2] = index[2].z > -1 ? texelFetch(_color_maps, index[2], 0) : COLOR_MAP;
		
		color_map = 
			col_map[0] * weights[0] +
			col_map[1] * weights[1] +
			col_map[2] * weights[2] +
			col_map[3] * weights[3] ;
		#endif

		// 5 lookups
		// Fetch the additional required height values for smooth normals
		h[1] = texelFetch(_height_maps, index[1], 0).r; // 3 (1,1)
		h[4] = texelFetch(_height_maps, get_index_coord(index_id + offsets.yz, FRAGMENT_PASS), 0).r; // 4 (1,2)
		h[5] = texelFetch(_height_maps, get_index_coord(index_id + offsets.zy, FRAGMENT_PASS), 0).r; // 5 (2,1)
		h[6] = texelFetch(_height_maps, get_index_coord(index_id + offsets.zx, FRAGMENT_PASS), 0).r; // 6 (2,0)
		h[7] = texelFetch(_height_maps, get_index_coord(index_id + offsets.xz, FRAGMENT_PASS), 0).r; // 7 (0,2)

		// Calculate the normal for the remaining index ids.
		index_normal[0] = normalize(vec3(h[0] - h[1] + u, _vertex_spacing, h[0] - h[7] + v));
		index_normal[1] = normalize(vec3(h[1] - h[5] + u, _vertex_spacing, h[1] - h[4] + v));
		index_normal[2] = normalize(vec3(h[2] - h[6] + u, _vertex_spacing, h[2] - h[1] + v));

		// Set interpolated world normal
		w_normal = 
			index_normal[0] * weights[0] +
			index_normal[1] * weights[1] +
			index_normal[2] * weights[2] +
			index_normal[3] * weights[3] ;
	}
		
	// Apply terrain normals
	vec3 w_tangent = normalize(cross(w_normal, vec3(0.0, 0.0, 1.0)));
	vec3 w_binormal = normalize(cross(w_normal, w_tangent));
	NORMAL = mat3(VIEW_MATRIX) * w_normal;
	TANGENT = mat3(VIEW_MATRIX) * w_tangent;
	BINORMAL = mat3(VIEW_MATRIX) * w_binormal;
	
	// Used for material world space normal map blending
	mat3 TANGENT_WORLD_MATRIX = mat3(w_tangent, w_normal, w_binormal);

	// Get last index
	// 1 lookup + get_material() = 3-7 total
	uint control[4];
	control[3] = floatBitsToUint(texelFetch(_control_maps, index[3], 0)).r;

	Material mat[4];
	get_material(index_normal[3], h[3], base_derivatives, control[3], index[3], TANGENT_WORLD_MATRIX, mat[3]);

	vec4 albedo_height = mat[3].alb_ht;
	vec4 normal_rough = mat[3].nrm_rg;
	float normal_map_depth = mat[3].nrm_depth;
	float ao_strength = mat[3].ao_str;

	// Otherwise do full bilinear interpolation
	if (bilerp) {
		// 4 lookups + 3x get_material() = 10-22 total
		control[0] = floatBitsToUint(texelFetch(_control_maps, index[0], 0)).r;
		control[1] = floatBitsToUint(texelFetch(_control_maps, index[1], 0)).r;
		control[2] = floatBitsToUint(texelFetch(_control_maps, index[2], 0)).r;

		get_material(index_normal[0], h[0], base_derivatives, control[0], index[0], TANGENT_WORLD_MATRIX, mat[0]);
		get_material(index_normal[1], h[1], base_derivatives, control[1], index[1], TANGENT_WORLD_MATRIX, mat[1]);
		get_material(index_normal[2], h[2], base_derivatives, control[2], index[2], TANGENT_WORLD_MATRIX, mat[2]);

		// rebuild weights for detail and noise blending
		float noise3 = texture(noise_texture, uv * noise3_scale).r * blend_sharpness;
		#define PARABOLA(x) (4.0 * x * (1.0 - x))
		weights = smoothstep(0, 1, weights);
		weights = vec4(
			blend_weights(weights.x + PARABOLA(weights.x) * noise3, mat[0].alb_ht.a),
			blend_weights(weights.y + PARABOLA(weights.y) * noise3, mat[1].alb_ht.a),
			blend_weights(weights.z + PARABOLA(weights.z) * noise3, mat[2].alb_ht.a),
			blend_weights(weights.w + PARABOLA(weights.w) * noise3, mat[3].alb_ht.a)
		);
		#undef PARABOLA
		// renormalize weights
		weights *= 1.0 / (weights.x + weights.y + weights.z + weights.w);
	
		// Interpolate Albedo/Height/Normal/Roughness
		albedo_height = 
			mat[0].alb_ht * weights[0] +
			mat[1].alb_ht * weights[1] +
			mat[2].alb_ht * weights[2] +
			mat[3].alb_ht * weights[3] ;
	
		normal_rough = 
			mat[0].nrm_rg * weights[0] +
			mat[1].nrm_rg * weights[1] +
			mat[2].nrm_rg * weights[2] +
			mat[3].nrm_rg * weights[3] ;

		normal_map_depth = 
			mat[0].nrm_depth * weights[0] +
			mat[1].nrm_depth * weights[1] +
			mat[2].nrm_depth * weights[2] +
			mat[3].nrm_depth * weights[3] ;
		
		ao_strength = 
			mat[0].ao_str * weights[0] +
			mat[1].ao_str * weights[1] +
			mat[2].ao_str * weights[2] +
			mat[3].ao_str * weights[3] ;
	}
	
	// Macro variation. 2 lookups
	vec3 macrov = vec3(1.);
	if (enable_macro_variation) {
		float noise1 = texture(noise_texture, rotate(uv * noise1_scale * .1, cos(noise1_angle), sin(noise1_angle)) + noise1_offset).r;
		float noise2 = texture(noise_texture, uv * noise2_scale * .1).r;
		macrov = mix(macro_variation1, vec3(1.), noise1);
		macrov *= mix(macro_variation2, vec3(1.), noise2);
		macrov = mix(vec3(1.0), macrov, clamp(w_normal.y + macro_variation_slope, 0., 1.));
	}
	
	// Wetness/roughness modifier, converting 0 - 1 range to -1 to 1 range
	float roughness = fma(color_map.a - 0.5, 2.0, normal_rough.a);
	
	// Apply PBR
	ALBEDO = albedo_height.rgb * color_map.rgb * macrov;
	ROUGHNESS = roughness;
	SPECULAR = 1. - normal_rough.a;
	NORMAL_MAP = pack_normal(normal_rough.rgb);
	NORMAL_MAP_DEPTH = normal_map_depth;

	// Higher and/or facing up, less occluded.
	float ao = (1. - (albedo_height.a * log(2.1 - ao_strength))) * (1. - normal_rough.y);
	AO = clamp(1. - ao * ao_strength, albedo_height.a, 1.0);
	AO_LIGHT_AFFECT = 1. - albedo_height.a;

}

"

[sub_resource type="Terrain3DMaterial" id="Terrain3DMaterial_0bgc3"]
_shader_parameters = {
&"auto_base_texture": 0,
&"auto_height_reduction": 0.1,
&"auto_overlay_texture": 1,
&"auto_slope": 1.0,
&"bias_distance": 512.0,
&"blend_sharpness": 0.933,
&"depth_blur": 0.0,
&"enable_macro_variation": true,
&"enable_projection": true,
&"height_blending": true,
&"macro_variation1": Color(0.791999, 0.791999, 0.791999, 1),
&"macro_variation2": Color(0.783523, 0.783523, 0.783523, 1),
&"macro_variation_slope": 0.322,
&"mipmap_bias": 1.0,
&"noise1_angle": 0.0,
&"noise1_offset": Vector2(0.5, 0.5),
&"noise1_scale": 0.084,
&"noise2_scale": 0.087,
&"noise3_scale": 0.225,
&"noise_texture": SubResource("NoiseTexture2D_ceh45"),
&"projection_angular_division": 2.0,
&"projection_threshold": 0.8,
&"world_space_normal_blend": true
}
world_background = 0
texture_filtering = 1
auto_shader = true
shader_override = SubResource("Shader_qyqh0")

[sub_resource type="Terrain3DMeshAsset" id="Terrain3DMeshAsset_4oj3f"]
name = "PineTree1"
scene_file = ExtResource("19_8d1kf")
density = 0.017058
last_lod = 4
last_shadow_lod = 4

[sub_resource type="Terrain3DTextureAsset" id="Terrain3DTextureAsset_gpul6"]
name = "sparse_grass_AB"
albedo_texture = ExtResource("3_1fbo2")
normal_texture = ExtResource("4_81a5s")
roughness = 0.132
uv_scale = 0.127
detiling_rotation = 0.652
detiling_shift = 0.424

[sub_resource type="Terrain3DTextureAsset" id="Terrain3DTextureAsset_6quqy"]
name = "brown_mud_alb"
id = 1
albedo_texture = ExtResource("6_5goeu")
normal_texture = ExtResource("6_su5jx")

[sub_resource type="Terrain3DTextureAsset" id="Terrain3DTextureAsset_2x4oq"]
name = "white_rocky_path_alb"
id = 2
albedo_texture = ExtResource("7_ofyio")
normal_texture = ExtResource("8_su5jx")

[sub_resource type="Terrain3DTextureAsset" id="Terrain3DTextureAsset_pcelo"]
name = "T_Soil"
id = 3
albedo_texture = ExtResource("24_bs2qi")
normal_texture = ExtResource("6_su5jx")

[sub_resource type="Terrain3DAssets" id="Terrain3DAssets_81a5s"]
mesh_list = Array[Terrain3DMeshAsset]([SubResource("Terrain3DMeshAsset_4oj3f")])
texture_list = Array[Terrain3DTextureAsset]([SubResource("Terrain3DTextureAsset_gpul6"), SubResource("Terrain3DTextureAsset_6quqy"), SubResource("Terrain3DTextureAsset_2x4oq"), SubResource("Terrain3DTextureAsset_pcelo")])

[sub_resource type="ArrayOccluder3D" id="ArrayOccluder3D_8d1kf"]
vertices = PackedVector3Array(-64, 0, 16, -48, 0, 32, -64, 0, 32, -48, 0, 16, -32, 0, 32, -32, 0, 16, -16, 0, 32, -16, 0, 16, 0, -3.12277, 32, 0, -2.5367, 16, -48, 0, 48, -64, 0, 48, -32, 0, 48, -16, 0, 48, 0, -3.40561, 48, -48, 0, 64, -64, 0, 64, -32, 0, 64, -16, 0, 64, 0, -2.3078, 64, -48, 0, 80, -64, 0, 80, -32, 0, 80, -16, 0.266082, 80, 0, -1.78739, 80, -48, 0, 96, -64, 0, 96, -32, 0.0292747, 96, -16, 1.12524, 96, 0, 6.31284, 96, -48, 0, 112, -64, 0, 112, -32, 0.275142, 112, -16, 3.44818, 112, 0, 10.8022, 112, -48, 0, 128, -64, 0, 128, -32, 0.55519, 128, -16, 6.02452, 128, 0, 15.0252, 128, -48, 0.0194405, 144, -64, 0, 144, -32, 1.54367, 144, -16, 8.76075, 144, 0, 20.6446, 144, -48, 0.0582162, 160, -64, 0, 160, -32, 2.18538, 160, -16, 10.7722, 160, 0, 22.0615, 160, -48, 0.124209, 176, -64, 0, 176, -32, 2.96303, 176, -16, 12.3119, 176, 0, 20.8612, 176, -48, 0.252992, 192, -64, 0, 192, -32, 3.41558, 192, -16, 14.5898, 192, 0, 21.9871, 192, -48, 0.396788, 208, -64, 0, 208, -32, 4.09635, 208, -16, 12.6763, 208, 0, 23.4208, 208, -48, 0.504903, 224, -64, 0, 224, -32, 3.85218, 224, -16, 12.2696, 224, 0, 16.6736, 224, -48, 0.281712, 240, -64, 0, 240, -32, 3.37677, 240, -16, 9.95967, 240, 0, 14.9325, 240, -48, 0.0326319, 256, -64, 0, 256, -32, 2.29115, 256, -16, 6.52366, 256, 0, 8.96893, 256, -48, 0, 272, -64, 0, 272, -32, 1.09484, 272, -16, 4.04075, 272, 0, 3.15616, 272, -48, 0, 288, -64, 0, 288, -32, 0.121976, 288, -16, 2.3189, 288, 0, -1.00428, 288, -48, 0, 304, -64, 0, 304, -32, 0, 304, -16, 1.00128, 304, 0, -5.83494, 304, -48, 0, 320, -64, 0, 320, -32, 0, 320, -16, 0.0284004, 320, 0, -10.6963, 320, -48, 0, 336, -64, 0, 336, -32, 0, 336, -16, 0, 336, 0, -12.8929, 336, -48, 0, 352, -64, 0, 352, -32, 0, 352, -16, 0, 352, 0, -12.6051, 352, -48, 0, 368, -64, 0, 368, -32, 0, 368, -16, 0, 368, 0, -9.87104, 368, -48, -9.98827, 384, -64, -9.9168, 384, -32, -9.99999, 384, -16, -9.99999, 384, 0, -9.99999, 384, -48, -9.99507, 400, -64, -9.965, 400, -32, -9.99999, 400, -16, -9.99999, 400, 0, -9.99999, 400, -48, -9.99891, 416, -64, -9.95273, 416, -32, -9.99999, 416, -16, -9.99999, 416, 0, -9.99991, 416, -48, -9.99969, 432, -64, -9.83249, 432, -32, -9.99999, 432, -16, -9.99999, 432, 0, -9.95778, 432, -48, -9.99946, 448, -64, -9.69303, 448, -32, -9.99999, 448, -16, -9.99999, 448, 0, -9.88952, 448, -128, 0, 128, -112, 0, 144, -128, 0, 144, -112, 0, 128, -96, 0, 144, -96, 0, 128, -80, 0, 144, -80, 0, 128, -112, 0, 160, -128, 0, 160, -96, 0, 160, -80, 0, 160, -112, 0, 176, -128, 0, 176, -96, 0, 176, -80, 0, 176, -112, 0, 192, -128, 0, 192, -96, 0, 192, -80, 0, 192, -112, 0, 208, -128, 0, 208, -96, 0, 208, -80, 0, 208, -112, 0, 224, -128, 0, 224, -96, 0, 224, -80, 0, 224, -112, 0, 240, -128, 0, 240, -96, 0, 240, -80, 0, 240, -112, 0, 256, -128, 0, 256, -96, 0, 256, -80, 0, 256, -112, 0, 272, -128, 0, 272, -96, 0, 272, -80, 0, 272, -112, 0, 288, -128, 0, 288, -96, 0, 288, -80, 0, 288, -112, 0, 304, -128, 0, 304, -96, 0, 304, -80, 0, 304, -112, 0, 320, -128, 0, 320, -96, 0, 320, -80, 0, 320, 16, -4.87583, -64, 32, -4.84856, -48, 16, -4.87898, -48, 32, -4.84706, -64, 48, -4.31517, -48, 48, -4.06395, -64, 64, -4.94814, -48, 64, -4.87387, -64, 32, -4.65431, -32, 16, -4.94558, -32, 48, -4.82459, -32, 64, -4.95239, -32, 32, -4.7356, -16, 16, -4.96753, -16, 48, -4.99933, -16, 64, -4.99941, -16, 32, -3.48438, 0, 16, -3.41954, 0, 48, -4.96896, 0, 64, -4.99602, 0, 32, 10.7085, 16, 16, 1.75715, 16, 48, -3.08727, 16, 64, -4.83444, 16, 16, 3.28723, 32, 32, 14.966, 32, 48, 2.73495, 32, 64, -4.18233, 32, 16, -2.4991, 48, 32, 4.69122, 48, 48, -0.464994, 48, 64, -4.27384, 48, 16, -2.28113, 64, 32, 2.98328, 64, 48, -0.995419, 64, 64, -2.1148, 64, 16, 0.222467, 80, 32, 5.56697, 80, 48, 9.40358, 80, 64, 7.49603, 80, 16, 7.87889, 96, 32, 15.8871, 96, 48, 15.8716, 96, 64, 10.9532, 96, 16, 19.1402, 112, 32, 18.7567, 112, 48, 13.0931, 112, 64, 5.54838, 112, 16, 24.3462, 128, 32, 18.9111, 128, 48, 11.1957, 128, 64, 1.67298, 128, 16, 24.8168, 144, 32, 17.7232, 144, 48, 7.64157, 144, 64, -0.364311, 144, 16, 29.7653, 160, 32, 17.1851, 160, 48, 4.75972, 160, 64, -0.517063, 160, 16, 22.7364, 176, 32, 18.1909, 176, 48, 4.42803, 176, 64, -0.514384, 176, 16, 24.0904, 192, 32, 19.782, 192, 48, 5.5917, 192, 64, -0.918255, 192, 16, 25.1558, 208, 32, 21.3898, 208, 48, 6.68953, 208, 64, -0.932817, 208, 16, 23.6567, 224, 32, 23.0792, 224, 48, 9.01386, 224, 64, 0.294298, 224, 16, 21.3992, 240, 32, 23.0862, 240, 48, 12.668, 240, 64, 2.8586, 240, 16, 15.3271, 256, 32, 20.1768, 256, 48, 20.6499, 256, 64, 9.35696, 256, 16, 10.8716, 272, 32, 19.0602, 272, 48, 21.7102, 272, 64, 20.1275, 272, 16, 5.25496, 288, 32, 20.8484, 288, 48, 22.6803, 288, 64, 20.0709, 288, 16, 0.395817, 304, 32, 9.16119, 304, 48, 18.2759, 304, 64, 18.6371, 304, 16, -9.2234, 320, 32, -3.39843, 320, 48, 1.42416, 320, 64, 16.261, 320, 16, -12.3753, 336, 32, -11.803, 336, 48, -11.9766, 336, 64, -1.15158, 336, 16, -12.8832, 352, 32, -14.2871, 352, 48, -14.7816, 352, 64, -14.688, 352, 16, -13.2228, 368, 32, -14.7579, 368, 48, -14.9998, 368, 64, -14.9999, 368, 16, -9.55555, 384, 32, 0.693089, 384, 48, -7.96946, 384, 64, -13.8805, 384, 16, -7.9994, 400, 32, -0.291489, 400, 48, -6.93322, 400, 64, -7.06284, 400, 16, -1.79437, 416, 32, -4.68153, 416, 48, -6.74759, 416, 64, -4.90199, 416, 16, -1.03263, 432, 32, -3.03323, 432, 48, 0.263294, 432, 64, 5.90409, 432, 16, -3.56061, 448, 32, -3.2956, 448, 48, 5.38566, 448, 64, 8.8697, 448, 16, -6.95465, 464, 0, 0, 464, 32, -7.59104, 464, 48, 4.2703, 464, 64, 7.00341, 464, 16, -6.81441, 480, 0, 0, 480, 32, -8.03476, 480, 48, -6.5355, 480, 64, 0.176891, 480, 16, -0.202324, 496, 0, 0, 496, 32, -7.70665, 496, 48, -6.90871, 496, 64, -5.37253, 496, 16, -9.96972, 512, 0, 0, 512, 32, -9.92053, 512, 48, -9.46571, 512, 64, -8.67959, 512, 32, -9.99999, 528, 16, -9.99999, 528, 48, -9.99999, 528, 64, -9.99999, 528, 32, -9.99999, 544, 16, -9.99999, 544, 48, -9.99999, 544, 64, -9.99999, 544, 32, -9.99999, 560, 16, -9.99999, 560, 48, -9.99999, 560, 64, -9.99999, 560, 32, -9.99987, 576, 16, -9.99996, 576, 48, -9.99911, 576, 64, -9.99908, 576, 80, -4.93694, -48, 80, -4.87247, -64, 96, -4.99713, -48, 96, -4.99096, -64, 112, -4.97074, -48, 112, -4.98294, -64, 128, -4.97889, -48, 128, -4.98657, -64, 80, -4.946, -32, 96, -4.99911, -32, 112, -4.89821, -32, 128, -4.44157, -32, 80, -4.96324, -16, 96, -4.9991, -16, 112, -4.8993, -16, 128, -4.70375, -16, 80, -4.9697, 0, 96, -4.89801, 0, 112, -4.77931, 0, 128, -4.89913, 0, 64, -4.63352, -128, 80, -4.9499, -112, 64, -4.78512, -112, 80, -4.90665, -128, 96, -4.95842, -112, 96, -4.90365, -128, 112, -4.87, -112, 112, -4.58613, -128, 128, -4.96637, -112, 128, -4.95998, -128, 80, -4.95492, -96, 64, -4.91534, -96, 96, -4.99595, -96, 112, -4.98398, -96, 128, -4.96611, -96, 80, -4.96736, -80, 64, -4.97797, -80, 96, -4.99598, -80, 112, -4.97655, -80, 128, -4.96947, -80, 80, -4.83406, 16, 96, -4.83691, 16, 112, -4.89822, 16, 128, -4.89839, 16, 80, -4.4295, 32, 96, -4.71491, 32, 112, -4.96815, 32, 128, -4.96702, 32, 80, -4.47399, 48, 96, -4.56602, 48, 112, -4.90504, 48, 128, -4.96683, 48, 80, -1.50387, 64, 96, -1.65434, 64, 112, -3.48026, 64, 128, -4.62837, 64, 80, 4.65995, 80, 96, 1.04867, 80, 112, -3.65471, 80, 128, -6.05895, 80, 80, 4.08812, 96, 96, -3.07875, 96, 112, -4.01288, 96, 128, -5.40995, 96, 80, -1.67895, 112, 96, -7.2967, 112, 112, -7.82164, 112, 128, -5.47158, 112, 80, -5.05627, 128, 96, -7.29096, 128, 112, -7.7782, 128, 128, -8.88247, 128, 80, -5.35196, 144, 96, -6.34615, 144, 112, -7.65657, 144, 128, -11.9082, 144, 80, -6.67977, 160, 96, -13.335, 160, 112, -16.4789, 160, 128, -17.5732, 160, 80, -6.85328, 176, 96, -21.0382, 176, 112, -21.0022, 176, 128, -22.8497, 176, 80, -10.3276, 192, 96, -21.5338, 192, 112, -22.7647, 192, 128, -20.9011, 192, 80, -16.0701, 208, 96, -23.471, 208, 112, -22.7085, 208, 128, -24.4226, 208, 80, -15.9731, 224, 96, -27.2322, 224, 112, -29.2264, 224, 128, -29.6868, 224, 80, -15.04, 240, 96, -22.8534, 240, 112, -30.1849, 240, 128, -28.7786, 240, 80, -1.37312, 256, 96, -8.66128, 256, 112, -17.5166, 256, 128, -17.4809, 256, 80, 8.21275, 272, 96, 2.08705, 272, 112, 0.49272, 272, 128, 1.45083, 272, 80, 12.1448, 288, 96, 3.01148, 288, 112, 1.3354, 288, 128, 2.18795, 288, 80, 13.5657, 304, 96, 8.35874, 304, 112, 7.04056, 304, 128, 7.50375, 304, 80, 15.3676, 320, 96, 13.2018, 320, 112, 12.2987, 320, 128, 12.5242, 320, 80, 12.0428, 336, 96, 14.1083, 336, 112, 13.9244, 336, 128, 15.1634, 336, 80, -6.25651, 352, 96, 0.633051, 352, 112, 6.31745, 352, 128, 1.77119, 352, 80, -15, 368, 96, -14.998, 368, 112, -14.9684, 368, 128, -15, 368, 80, -14.8307, 384, 96, -14.9513, 384, 112, -14.9542, 384, 128, -14.9967, 384, 80, -7.66007, 400, 96, -9.43491, 400, 112, -9.32003, 400, 128, -8.6165, 400, 80, -6.09306, 416, 96, -8.86032, 416, 112, -9.24069, 416, 128, -9.8314, 416, 80, 1.32576, 432, 96, 0.99979, 432, 112, 1.02338, 432, 128, -6.89704, 432, 80, 1.34703, 448, 96, 1.1061, 448, 112, 1.02027, 448, 128, 0.346269, 448, 80, 1.42723, 464, 96, 1.20359, 464, 112, 1.15889, 464, 128, -2.11661, 464, 80, 0.747828, 480, 96, 1.21344, 480, 112, -1.46324, 480, 128, -9.78306, 480, 80, -5.86664, 496, 96, -8.06353, 496, 112, -9.66195, 496, 128, -9.91226, 496, 80, -9.46784, 512, 96, -9.50516, 512, 112, -9.23631, 512, 128, -8.20266, 512, 80, -9.99999, 528, 96, -9.99999, 528, 112, -9.99999, 528, 128, -9.99999, 528, 80, -9.99999, 544, 96, -9.99999, 544, 112, -9.99999, 544, 128, -9.99999, 544, 80, -9.99999, 560, 96, -9.99999, 560, 112, -9.99999, 560, 128, -9.99999, 560, 80, -9.99995, 576, 96, -9.99999, 576, 112, -9.99999, 576, 128, -9.99998, 576, 144, -4.8944, -48, 144, -4.98636, -64, 160, -4.5769, -48, 160, -4.876, -64, 176, -3.99478, -48, 176, -4.90687, -64, 192, -4.50998, -48, 192, -4.89078, -64, 144, -4.57474, -32, 160, -4.5756, -32, 176, -4.67726, -32, 192, -4.64906, -32, 144, -4.65776, -16, 160, -4.58761, -16, 176, -4.79933, -16, 192, -4.8269, -16, 144, -4.89061, 0, 160, -4.2881, 0, 176, -4.73974, 0, 192, -4.80412, 0, 144, -4.95151, -112, 144, -4.94648, -128, 160, -4.85371, -112, 160, -4.42733, -128, 176, -4.96315, -112, 176, -4.71767, -128, 192, -4.3925, -112, 192, -3.7414, -128, 144, -4.57772, -96, 160, -4.77747, -96, 176, -4.94337, -96, 192, -4.94911, -96, 144, -4.98537, -80, 160, -4.87836, -80, 176, -4.94377, -80, 192, -4.94521, -80, 144, -4.89323, 16, 160, -4.54879, 16, 176, -4.07389, 16, 192, -4.19475, 16, 144, -4.80286, 32, 160, -4.51654, 32, 176, -4.44008, 32, 192, -4.74409, 32, 144, -4.9675, 48, 160, -4.73101, 48, 176, -4.69334, 48, 192, -4.62766, 48, 144, -4.45186, 64, 160, -3.63375, 64, 176, -3.88097, 64, 192, -3.76097, 64, 144, -6.26379, 80, 160, -4.8043, 80, 176, -3.54099, 80, 192, -3.60455, 80, 144, -5.99608, 96, 160, -4.96149, 96, 176, -1.72186, 96, 192, -4.11401, 96, 144, -1.58386, 112, 160, 4.34549, 112, 176, 4.08451, 112, 192, -4.21491, 112, 144, -7.31508, 128, 160, -1.14371, 128, 176, 6.2802, 128, 192, 6.7494, 128, 144, -11.9216, 144, 160, -5.94692, 144, 176, 4.35993, 144, 192, 10.1399, 144, 144, -19.9276, 160, 160, -9.91222, 160, 176, 1.42716, 160, 192, 11.7066, 160, 144, -23.1832, 176, 160, -12.3579, 176, 176, -0.510883, 176, 192, 11.5038, 176, 144, -15.9405, 192, 160, -12.2492, 192, 176, -0.721176, 192, 192, 10.9301, 192, 144, -18.8107, 208, 160, -8.33632, 208, 176, -0.202597, 208, 192, 9.15948, 208, 144, -24.7962, 224, 160, -6.64515, 224, 176, 0.361069, 224, 192, 9.18725, 224, 144, -20.0322, 240, 160, -6.21853, 240, 176, 2.34299, 240, 192, 14.2262, 240, 144, -8.61289, 256, 160, 2.39304, 256, 176, 9.43095, 256, 192, 20.302, 256, 144, 6.46929, 272, 160, 14.8767, 272, 176, 16.4793, 272, 192, 21.4605, 272, 144, 8.84311, 288, 160, 18.2064, 288, 176, 20.7398, 288, 192, 21.6561, 288, 144, 10.6457, 304, 160, 19.4183, 304, 176, 22.7531, 304, 192, 15.2133, 304, 144, 14.3488, 320, 160, 21.7877, 320, 176, 9.93058, 320, 192, -1.0414, 320, 144, 15.883, 336, 160, 0.557403, 336, 176, -10.0939, 336, 192, -12.0366, 336, 144, -3.5652, 352, 160, -12.66, 352, 176, -13.7872, 352, 192, -13.9256, 352, 144, -14.741, 368, 160, -14.9895, 368, 176, -14.9563, 368, 192, -14.9573, 368, 144, -12.6409, 384, 160, -14.4377, 384, 176, -14.9536, 384, 192, -14.9485, 384, 144, -6.78629, 400, 160, -5.31157, 400, 176, -0.846458, 400, 192, -8.1577, 400, 144, -9.86917, 416, 160, -9.25334, 416, 176, -0.909893, 416, 192, -5.56642, 416, 144, -9.99773, 432, 160, -9.99918, 432, 176, -9.72215, 432, 192, -5.69563, 432, 144, -14.9999, 448, 160, -15, 448, 176, -10.0044, 448, 192, -14.9999, 448, 144, -15, 464, 160, -15, 464, 176, -15, 464, 192, -15, 464, 144, -14.8579, 480, 160, -14.9997, 480, 176, -14.8713, 480, 192, -14.3514, 480, 144, -9.05826, 496, 160, -4.46321, 496, 176, -7.94632, 496, 192, -9.33219, 496, 144, -3.09065, 512, 160, -7.90895, 512, 176, -9.99998, 512, 192, -9.99999, 512, 144, -9.99999, 528, 160, -9.99999, 528, 176, -9.99999, 528, 192, -9.99999, 528, 144, -9.99999, 544, 160, -9.99999, 544, 176, -9.99999, 544, 192, -9.99999, 544, 144, -9.99999, 560, 160, -9.99999, 560, 176, -9.99999, 560, 192, -9.99999, 560, 144, -9.99997, 576, 160, -9.99999, 576, 176, -9.99999, 576, 192, -9.99999, 576, 208, -4.51391, -48, 208, -4.84083, -64, 224, -4.84929, -48, 224, -4.9527, -64, 240, -4.5361, -48, 240, -4.63421, -64, 256, -2.80129, -48, 256, -4.23157, -64, 208, -4.47604, -32, 224, -1.20807, -32, 240, 1.93243, -32, 256, 4.48768, -32, 208, -2.85484, -16, 224, 4.70367, -16, 240, 8.96635, -16, 256, 9.94049, -16, 208, -2.01907, 0, 224, 6.92364, 0, 240, 9.97889, 0, 256, 10, 0, 208, -4.48937, -112, 208, -2.90373, -128, 224, -3.86827, -112, 224, -3.84335, -128, 240, -4.1381, -112, 240, -4.04018, -128, 256, -4.03837, -112, 256, -3.87188, -128, 208, -4.818, -96, 224, -4.36571, -96, 240, -4.82016, -96, 256, -4.69273, -96, 208, -4.83137, -80, 224, -4.91148, -80, 240, -4.80318, -80, 256, -4.59114, -80, 208, -3.32759, 16, 224, 3.12241, 16, 240, 8.55595, 16, 256, 9.77723, 16, 208, -4.67449, 32, 224, -2.74295, 32, 240, 1.69744, 32, 256, 5.17778, 32, 208, -4.52021, 48, 224, -3.56051, 48, 240, -3.28592, 48, 256, -1.74829, 48, 208, -4.16212, 64, 224, -4.1655, 64, 240, -5.03653, 64, 256, -5.77734, 64, 208, -3.95772, 80, 224, -3.97094, 80, 240, -8.17587, 80, 256, -9.82895, 80, 208, -4.73701, 96, 224, -5.0925, 96, 240, -9.12138, 96, 256, -9.89461, 96, 208, -4.67427, 112, 224, -6.21959, 112, 240, -9.24885, 112, 256, -9.78374, 112, 208, -2.92967, 128, 224, -5.97163, 128, 240, -9.21869, 128, 256, -9.4371, 128, 208, 0.342785, 144, 224, -4.84365, 144, 240, -8.49177, 144, 256, -9.07516, 144, 208, 10.784, 160, 224, -2.67695, 160, 240, -8.03088, 160, 256, -8.17215, 160, 208, 13.4613, 176, 224, -0.440014, 176, 240, -8.02299, 176, 256, -9.90571, 176, 208, 14.1021, 192, 224, 4.93569, 192, 240, -7.88457, 192, 256, -9.9989, 192, 208, 10.9022, 208, 224, 9.81393, 208, 240, -6.99348, 208, 256, -9.99895, 208, 208, 11.0278, 224, 224, 10.5579, 224, 240, -5.99766, 224, 256, -9.93434, 224, 208, 14.9637, 240, 224, 7.50711, 240, 240, -7.45002, 240, 256, -9.97168, 240, 208, 15.0284, 256, 224, 5.51789, 256, 240, -8.63054, 256, 256, -9.99179, 256, 208, 13.7038, 272, 224, 0.867166, 272, 240, -9.19208, 272, 256, -9.9905, 272, 208, 3.93582, 288, 224, -5.05634, 288, 240, -9.88329, 288, 256, -9.97008, 288, 208, -1.90227, 304, 224, -8.87428, 304, 240, -9.98468, 304, 256, -9.98585, 304, 208, -7.7722, 320, 224, -9.89648, 320, 240, -9.99402, 320, 256, -9.99445, 320, 208, -9.68427, 336, 224, -9.90202, 336, 240, -9.99388, 336, 256, -9.9953, 336, 208, -9.89548, 352, 224, -9.81418, 352, 240, -9.98764, 352, 256, -9.99522, 352, 208, -9.9641, 368, 224, -9.96612, 368, 240, -9.95624, 368, 256, -9.98313, 368, 208, -9.96342, 384, 224, -9.96549, 384, 240, -9.83665, 384, 256, -9.59844, 384, 208, -9.74236, 400, 224, -9.79229, 400, 240, -9.30103, 400, 256, -14.1511, 400, 208, -8.86861, 416, 224, -9.37728, 416, 240, -9.40941, 416, 256, -14.9282, 416, 208, -7.40586, 432, 224, -8.07369, 432, 240, -8.96894, 432, 256, -14.7247, 432, 208, -15, 448, 224, -15, 448, 240, -15, 448, 256, -15, 448, 208, -15, 464, 224, -15, 464, 240, -15, 464, 256, -15, 464, 208, -3.7649, 480, 224, -5.89711, 480, 240, -14.2006, 480, 256, -14.2474, 480, 208, -9.12681, 496, 224, -6.59718, 496, 240, -14.9525, 496, 256, -14.3951, 496, 208, -9.9614, 512, 224, -14.134, 512, 240, -14.9982, 512, 256, -14.3951, 512, 272, -3.80752, -48, 272, -4.53863, -64, 288, -3.70388, -48, 288, -4.76855, -64, 304, -4.16442, -48, 304, -4.94105, -64, 320, -4.54982, -48, 320, -4.95781, -64, 272, 3.24106, -32, 288, 1.01136, -32, 304, -1.4741, -32, 320, -4.00706, -32, 272, 9.99262, -16, 288, 9.2878, -16, 304, 5.33162, -16, 320, -1.9104, -16, 272, 10, 0, 288, 9.99973, 0, 304, 8.37462, 0, 320, 0.274797, 0, 272, -3.70361, -112, 272, -3.37787, -128, 288, -4.18435, -112, 288, -3.31837, -128, 304, -4.42651, -112, 304, -3.21521, -128, 320, -3.35616, -112, 320, -2.72212, -128, 272, -4.67325, -96, 288, -4.35737, -96, 304, -4.93805, -96, 320, -4.9219, -96, 272, -4.50873, -80, 288, -4.77709, -80, 304, -4.97609, -80, 320, -4.97689, -80, 272, 9.9758, 16, 288, 9.98223, 16, 304, 8.69584, 16, 320, 2.32475, 16, 272, 7.54154, 32, 288, 8.60598, 32, 304, 5.07575, 32, 320, -3.02451, 32, 272, 1.01731, 48, 288, 3.13157, 48, 304, -2.03888, 48, 320, -9.32042, 48, 272, -5.61928, 64, 288, -5.17071, 64, 304, -7.03059, 64, 320, -9.99367, 64, 272, -9.93186, 80, 288, -9.914, 80, 304, -9.48304, 80, 320, -9.99324, 80, 272, -9.96504, 96, 288, -9.95186, 96, 304, -9.58002, 96, 320, -9.80627, 96, 272, -9.84914, 112, 288, -9.77231, 112, 304, -8.52101, 112, 320, -8.19551, 112, 272, -8.52521, 128, 288, -8.29225, 128, 304, -7.76791, 128, 320, -8.19631, 128, 272, -8.45495, 144, 288, -8.2261, 144, 304, -7.81676, 144, 320, -8.52074, 144, 272, -8.18262, 160, 288, -9.43147, 160, 304, -9.75115, 160, 320, -9.78851, 160, 272, -9.97642, 176, 288, -9.97323, 176, 304, -9.90095, 176, 320, -9.83603, 176, 272, -9.99923, 192, 288, -9.99578, 192, 304, -9.89085, 192, 320, -9.34918, 192, 272, -9.99923, 208, 288, -9.991, 208, 304, -8.48182, 208, 320, -0.782953, 208, 272, -9.93103, 224, 288, -8.85761, 224, 304, 0.78337, 224, 320, 7.9584, 224, 272, -9.90026, 240, 288, -3.65761, 240, 304, 8.41603, 240, 320, 0.629329, 240, 272, -9.9315, 256, 288, -3.66649, 256, 304, 10.7382, 256, 320, -47.7943, 256, 272, -9.90139, 272, 288, 0.00866108, 272, 304, 10.3017, 272, 320, -49.5803, 272, 272, -9.57116, 288, 288, 0.594429, 288, 304, 1.00272, 288, 320, -41.2904, 288, 272, -9.43556, 304, 288, 0.366023, 304, 304, 1.00025, 304, 320, -12.9582, 304, 272, -9.86596, 320, 288, -3.96412, 320, 304, 5.20389, 320, 320, 7.18694, 320, 272, -9.99105, 336, 288, -9.90523, 336, 304, -6.12581, 336, 320, 11.1676, 336, 272, -9.99434, 352, 288, -9.97907, 352, 304, -9.60023, 352, 320, -6.98471, 352, 272, -9.97894, 368, 288, -9.92967, 368, 304, -9.86975, 368, 320, -9.85925, 368, 272, -9.80454, 384, 288, -9.80697, 384, 304, -9.93962, 384, 320, -9.94019, 384, 272, -14.6134, 400, 288, -9.81677, 400, 304, -9.87244, 400, 320, -9.89468, 400, 272, -14.9843, 416, 288, -9.15977, 416, 304, -9.27953, 416, 320, -9.67811, 416, 272, -14.6346, 432, 288, -6.64626, 432, 304, -8.85832, 432, 320, -9.59591, 432, 272, -13.3099, 448, 288, -7.37062, 448, 304, -7.768, 448, 320, -8.30867, 448, 336, -4.62947, -48, 336, -3.49867, -64, 352, -4.04843, -48, 352, -3.96906, -64, 368, -3.73977, -48, 368, -3.31368, -64, 384, -3.72269, -48, 384, -3.06417, -64, 336, -7.4509, -32, 352, -7.48143, -32, 368, -4.81404, -32, 384, -4.72454, -32, 336, -9.1671, -16, 352, -9.67856, -16, 368, -9.66297, -16, 384, -6.93369, -16, 336, -7.76743, 0, 352, -9.68322, 0, 368, -9.81025, 0, 384, -8.36948, 0, 336, -4.9925, 16, 352, -9.3873, 16, 368, -9.85285, 16, 384, -9.09731, 16, 336, -8.8856, 32, 352, -9.91791, 32, 368, -9.97641, 32, 384, -9.509, 32, 336, -9.99913, 48, 352, -9.9999, 48, 368, -9.98795, 48, 384, -9.54503, 48, 336, -9.99997, 64, 352, -9.99997, 64, 368, -9.98938, 64, 384, -9.94048, 64, 336, -9.99995, 80, 352, -9.99994, 80, 368, -9.99453, 80, 384, -9.98749, 80, 336, -9.97895, 96, 352, -9.98271, 96, 368, -9.98413, 96, 384, -9.97808, 96, 336, -8.01156, 112, 352, -7.50091, 112, 368, -8.93456, 112, 384, -9.01182, 112, 336, -8.01849, 128, 352, -5.98218, 128, 368, -8.80715, 128, 384, -9.2631, 128, 336, -8.94376, 144, 352, -9.65308, 144, 368, -9.96014, 144, 384, -9.97126, 144, 336, -9.76686, 160, 352, -9.89807, 160, 368, -9.98078, 160, 384, -9.9836, 160, 336, -9.77204, 176, 352, -9.77907, 176, 368, -9.89442, 176, 384, -9.89994, 176, 336, -7.71026, 192, 352, -5.27759, 192, 368, -3.16657, 192, 384, -3.56793, 192, 336, 3.66838, 208, 352, 4.91288, 208, 368, 7.25153, 208, 384, 1.83265, 208, 336, 8.54384, 224, 352, 7.33782, 224, 368, 7.34278, 224, 384, 7.05439, 224, 336, -45.3977, 240, 352, -47.4284, 240, 368, -47.604, 240, 384, 7.54835, 240, 336, -41.1255, 256, 352, -37.0358, 256, 368, -39.3303, 256, 384, -33.252, 256, 336, -2.85465, 272, 352, 0.353956, 272, 368, -38.4457, 272, 384, -34.9433, 272, 336, 0.305145, 288, 352, 0.519624, 288, 368, -38.5146, 288, 384, -37.6498, 288, 336, -34.0908, 304, 352, -36.8983, 304, 368, -13.3042, 304, 384, 0.43015, 304, 336, -4.36961, 320, 352, -7.85199, 320, 368, 5.27777, 320, 384, 1.1381, 320, 336, 10.8856, 336, 352, 7.2186, 336, 368, 4.41566, 336, 384, -2.39063, 336, 336, -1.12412, 352, 352, -0.999449, 352, 368, -7.28021, 352, 384, -9.00044, 352, 336, -9.34017, 368, 352, -9.77015, 368, 368, -9.99962, 368, 384, -9.99986, 368, 336, -9.88174, 384, 352, -9.98325, 384, 368, -9.99997, 384, 384, -9.99998, 384, 336, -9.87085, 400, 352, -9.96133, 400, 368, -9.99979, 400, 384, -9.99989, 400, 336, -9.83495, 416, 352, -9.94951, 416, 368, -9.96434, 416, 384, -9.97687, 416, 336, -9.78674, 432, 352, -9.95217, 432, 368, -9.97396, 432, 384, -9.97572, 432, 336, -8.81394, 448, 352, -9.84772, 448, 368, -9.91569, 448, 384, -9.92237, 448, 400, -9.34579, 80, 400, -8.77297, 64, 416, -7.81257, 80, 416, -7.4023, 64, 432, -7.57188, 80, 432, -6.84523, 64, 448, -4.54224, 80, 448, -1.92324, 64, 400, -9.28007, 96, 416, -7.45439, 96, 432, -7.37294, 96, 448, -6.18959, 96, 400, -9.17673, 112, 416, -8.90168, 112, 432, -6.82956, 112, 448, -6.53605, 112, 400, -9.29199, 128, 416, -9.13415, 128, 432, -7.8805, 128, 448, -6.48089, 128, 400, -9.13357, 144, 416, -9.08411, 144, 432, -8.15918, 144, 448, -5.46487, 144, 400, -7.98658, 160, 416, -8.32742, 160, 432, -8.28328, 160, 448, -4.0709, 160, 400, -5.6728, 176, 416, -8.65255, 176, 432, -8.66341, 176, 448, -5.37183, 176, 400, -9.83876, 192, 416, -9.99915, 192, 432, -9.9992, 192, 448, -9.9464, 192, 400, -9.10932, 208, 416, -9.99368, 208, 432, -9.9956, 208, 448, -9.92375, 208, 400, -1.42242, 224, 416, -9.84875, 224, 432, -9.98294, 224, 448, -9.95508, 224, 400, -0.00541491, 240, 416, -9.83795, 240, 432, -9.98285, 240, 448, -9.95934, 240, 400, 0.680786, 256, 416, -9.21863, 256, 432, -9.90557, 256, 448, -9.87194, 256, 400, -0.613837, 272, 416, -9.9004, 272, 432, -9.99445, 272, 448, -9.98793, 272, 400, -0.59635, 288, 416, -9.92515, 288, 432, -9.99624, 288, 448, -9.9916, 288, 400, -5.96169, 304, 416, -9.96499, 304, 432, -9.99438, 304, 448, -9.98636, 304, 400, -8.45345, 320, 416, -9.97684, 320, 432, -9.99024, 320, 448, -9.95768, 320, 400, -9.85114, 336, 416, -9.99025, 336, 432, -9.98457, 336, 448, -9.81939, 336, 400, -9.99564, 352, 416, -9.99949, 352, 432, -9.99687, 352, 448, -9.64433, 352, 400, -9.99637, 368, 416, -9.99951, 368, 432, -9.99668, 368, 448, -9.47826, 368, 400, -9.99884, 384, 416, -9.99013, 384, 432, -9.94669, 384, 448, -8.62001, 384, 400, -9.99753, 400, 416, -9.8543, 400, 432, -9.84332, 400, 448, -8.91765, 400, 400, -9.96255, 416, 416, -9.97275, 416, 432, -9.97346, 416, 448, -9.67138, 416, 400, -9.9468, 432, 416, -9.97628, 432, 432, -9.97883, 432, 448, -9.81138, 432, 400, -9.79657, 448, 416, -9.91307, 448, 432, -9.95273, 448, 448, -9.71542, 448, -240, 0, 16, -224, 0, 32, -240, 0, 32, -224, 0, 16, -208, 0, 32, -208, 0, 16, -192, 0, 32, -192, 0, 16, -224, 0, 48, -240, 0, 48, -208, 0, 48, -192, 0, 48, -224, 0, 64, -240, 0, 64, -208, 0, 64, -192, 0, 64, -176, 0, 32, -176, 0, 16, -160, 0, 32, -160, 0, 16, -144, 0, 32, -144, 0, 16, -128, 0, 32, -128, 0, 16, -176, 0, 48, -160, 0, 48, -144, 0, 48, -128, 0, 48, -176, 0, 64, -160, 0, 64, -144, 0, 64, -128, 0, 64, -112, 0, 32, -112, 0, 16, -96, 0, 32, -96, 0, 16, -80, 0, 32, -80, 0, 16, -112, 0, 48, -96, 0, 48, -80, 0, 48, -112, 0, 64, -96, 0, 64, -80, 0, 64, -224, 0, 80, -240, 0, 80, -208, 0, 80, -192, 0, 80, -224, 0, 96, -240, 0, 96, -208, 0, 96, -192, 0, 96, -224, 0, 112, -240, 0, 112, -208, 0, 112, -192, 0, 112, -224, 0, 128, -240, 0, 128, -208, 0, 128, -192, 0, 128, -176, 0, 80, -160, 0, 80, -144, 0, 80, -128, 0, 80, -176, 0, 96, -160, 0, 96, -144, 0, 96, -128, 0, 96, -176, 0, 112, -160, 0, 112, -144, 0, 112, -128, 0, 112, -176, 0, 128, -160, 0, 128, -144, 0, 128, -112, 0, 80, -96, 0, 80, -80, 0, 80, -112, 0, 96, -96, 0, 96, -80, 0, 96, -112, 0, 112, -96, 0, 112, -80, 0, 112, -224, 0, 144, -240, 0, 144, -208, 0, 144, -192, 0, 144, -224, 0, 160, -240, 0, 160, -208, 0, 160, -192, 0, 160, -224, 0, 176, -240, 0, 176, -208, 0, 176, -192, 0, 176, -224, 0, 192, -240, 0, 192, -208, 0, 192, -192, 0, 192, -176, 0, 144, -160, 0, 144, -144, 0, 144, -176, 0, 160, -160, 0, 160, -144, 0, 160, -176, 0, 176, -160, 0, 176, -144, 0, 176, -176, 0, 192, -160, 0, 192, -144, 0, 192, -224, 0, 208, -240, 0, 208, -208, 0, 208, -192, 0, 208, -224, 0, 224, -240, 0, 224, -208, 0, 224, -192, 0, 224, -224, 0, 240, -240, 0, 240, -208, 0, 240, -192, 0, 240, -224, 0, 256, -240, 0, 256, -208, 0, 256, -192, 0, 256, -176, 0, 208, -160, 0, 208, -144, 0, 208, -176, 0, 224, -160, 0, 224, -144, 0, 224, -176, 0, 240, -160, 0, 240, -144, 0, 240, -176, 0, 256, -160, 0, 256, -144, 0, 256, -224, 0, 272, -240, 0, 272, -208, 0, 272, -192, 0, 272, -224, 0, 288, -240, 0, 288, -208, 0, 288, -192, 0, 288, -224, 0, 304, -240, 0, 304, -208, 0, 304, -192, 0, 304, -224, 0, 320, -240, 0, 320, -208, 0, 320, -192, 0, 320, -176, 0, 272, -160, 0, 272, -144, 0, 272, -176, 0, 288, -160, 0, 288, -144, 0, 288, -176, 0, 304, -160, 0, 304, -144, 0, 304, -176, 0, 320, -160, 0, 320, -144, 0, 320, -224, 0, 336, -240, 0, 336, -208, 0, 336, -192, 0, 336, -224, 0, 352, -240, 0, 352, -208, 0, 352, -192, 0, 352, -224, 0, 368, -240, 0, 368, -208, 0, 368, -192, 0, 368, -224, 0, 384, -240, 0, 384, -208, 0, 384, -192, 0, 384, -176, 0, 336, -160, 0, 336, -144, 0, 336, -128, 0, 336, -176, 0, 352, -160, 0, 352, -144, 0, 352, -128, 0, 352, -176, 0, 368, -160, 0, 368, -144, 0, 368, -128, 0, 368, -176, 0, 384, -160, 0, 384, -144, 0, 384, -128, 0, 384, -112, 0, 336, -96, 0, 336, -80, 0, 336, -112, 0, 352, -96, 0, 352, -80, 0, 352, -112, 0, 368, -96, 0, 368, -80, 0, 368, -112, 0, 384, -96, 0, 384, -80, 0, 384, -224, 0, 400, -240, 0, 400, -208, 0, 400, -192, 0, 400, -224, 0, 416, -240, 0, 416, -208, 0, 416, -192, 0, 416, -224, 0, 432, -240, 0, 432, -208, 0, 432, -192, 0, 432, -224, 0, 448, -240, 0, 448, -208, 0, 448, -192, 0, 448, -176, 0, 400, -160, 0, 400, -144, 0, 400, -128, 0, 400, -176, 0, 416, -160, 0, 416, -144, 0, 416, -128, 0, 416, -176, 0, 432, -160, 0, 432, -144, 0, 432, -128, 0, 432, -176, 0, 448, -160, 0, 448, -144, 0, 448, -128, 0, 448, -112, 0, 400, -96, 0, 400, -80, 0, 400, -112, 0, 416, -96, 0, 416, -80, 0, 416, -112, 0, 432, -96, 0, 432, -80, 0, 432, -112, 0, 448, -96, 0, 448, -80, 0, 448, -224, 0, 464, -240, 0, 464, -208, 0, 464, -192, 0, 464, -224, 0, 480, -240, 0, 480, -208, 0, 480, -192, 0, 480, -224, 0, 496, -240, 0, 496, -208, 0, 496, -192, 0, 496, -224, 0, 512, -240, 0, 512, -208, 0, 512, -192, 0, 512, -176, 0, 464, -160, 0, 464, -144, 0, 464, -128, 0, 464, -176, 0, 480, -160, 0, 480, -144, 0, 480, -128, 0, 480, -176, 0, 496, -160, 0, 496, -144, 0, 496, -128, 0, 496, -176, 0, 512, -160, 0, 512, -144, 0, 512, -128, 0, 512, -112, 0, 464, -96, 0, 464, -80, 0, 464, -64, 0, 464, -112, 0, 480, -96, 0, 480, -80, 0, 480, -64, 0, 480, -112, 0, 496, -96, 0, 496, -80, 0, 496, -64, 0, 496, -112, 0, 512, -96, 0, 512, -80, 0, 512, -64, 0, 512, -48, 0, 464, -32, 0, 464, -16, 0, 464, -48, 0, 480, -32, 0, 480, -16, 0, 480, -48, 0, 496, -32, 0, 496, -16, 0, 496, -48, 0, 512, -32, 0, 512, -16, 0, 512, 16, 0, -240, 32, 0, -224, 16, 0, -224, 32, 0, -240, 48, 0, -224, 48, 0, -240, 64, 0, -224, 64, 0, -240, 32, 0, -208, 16, 0, -208, 48, 0, -208, 64, 0, -208, 32, 0, -192, 16, 0, -192, 48, 0, -192, 64, 0, -192, 80, 0, -224, 80, 0, -240, 96, 0, -224, 96, 0, -240, 112, 0, -224, 112, 0, -240, 128, 0, -224, 128, 0, -240, 80, 0, -208, 96, 0, -208, 112, 0, -208, 128, 0, -208, 80, 0, -192, 96, 0, -192, 112, 0, -192, 128, 0, -192, 144, 0, -224, 144, 0, -240, 160, 0, -224, 160, 0, -240, 176, 0, -224, 176, 0, -240, 192, 0, -224, 192, 0, -240, 144, 0, -208, 160, 0, -208, 176, 0, -208, 192, 0, -208, 144, 0, -192, 160, 0, -192, 176, 0, -192, 192, 0, -192, 208, 0, -224, 208, 0, -240, 224, 0, -224, 224, 0, -240, 240, 0, -224, 240, 0, -240, 256, 0, -224, 256, 0, -240, 208, 0, -208, 224, 0, -208, 240, 0, -208, 256, 0, -208, 208, 0, -192, 224, 0, -192, 240, 0, -192, 256, 0, -192, 32, 0, -176, 16, 0, -176, 48, 0, -176, 64, 0, -176, 32, 0, -160, 16, 0, -160, 48, 0, -160, 64, 0, -160, 32, 0, -144, 16, 0, -144, 48, 0, -144, 64, 0, -144, 32, 0, -128, 16, 0, -128, 48, 0, -128, 80, 0, -176, 96, 0, -176, 112, 0, -176, 128, 0, -176, 80, 0, -160, 96, 0, -160, 112, 0, -160, 128, 0, -160, 80, 0, -144, 96, 0, -144, 112, 0, -144, 128, 0, -144, 144, 0, -176, 160, 0, -176, 176, 0, -176, 192, 0, -176, 144, 0, -160, 160, 0, -160, 176, 0, -160, 192, 0, -160, 144, 0, -144, 160, 0, -144, 176, 0, -144, 192, 0, -144, 208, 0, -176, 224, 0, -176, 240, 0, -176, 256, 0, -176, 208, 0, -160, 224, 0, -160, 240, 0, -160, 256, 0, -160, 208, 0, -144, 224, 0, -144, 240, 0, -144, 256, 0, -144, 32, 0, -112, 16, 0, -112, 48, 0, -112, 32, 0, -96, 16, 0, -96, 48, 0, -96, 32, 0, -80, 16, 0, -80, 48, 0, -80, 208, 0, 528, 224, 0, 528, 240, 0, 528, 256, 0, 528, 256, -14.9982, 512, 208, 0, 544, 224, 0, 544, 240, 0, 544, 256, 0, 544, 208, 0, 560, 224, 0, 560, 240, 0, 560, 256, 0, 560, 208, 0, 576, 224, 0, 576, 240, 0, 576, 256, 0, 576, 32, 0, 592, 16, 0, 592, 48, 0, 592, 64, 0, 592, 32, 0, 608, 16, 0, 608, 48, 0, 608, 64, 0, 608, 32, 0, 624, 16, 0, 624, 48, 0, 624, 64, 0, 624, 32, 0, 640, 16, 0, 640, 48, 0, 640, 64, 0, 640, 80, 0, 592, 96, 0, 592, 112, 0, 592, 128, 0, 592, 80, 0, 608, 96, 0, 608, 112, 0, 608, 128, 0, 608, 80, 0, 624, 96, 0, 624, 112, 0, 624, 128, 0, 624, 80, 0, 640, 96, 0, 640, 112, 0, 640, 128, 0, 640, 144, 0, 592, 160, 0, 592, 176, 0, 592, 192, 0, 592, 144, 0, 608, 160, 0, 608, 176, 0, 608, 192, 0, 608, 144, 0, 624, 160, 0, 624, 176, 0, 624, 192, 0, 624, 144, 0, 640, 160, 0, 640, 176, 0, 640, 192, 0, 640, 208, 0, 592, 224, 0, 592, 240, 0, 592, 256, 0, 592, 208, 0, 608, 224, 0, 608, 240, 0, 608, 256, 0, 608, 208, 0, 624, 224, 0, 624, 240, 0, 624, 256, 0, 624, 208, 0, 640, 224, 0, 640, 240, 0, 640, 256, 0, 640, 32, 0, 656, 16, 0, 656, 48, 0, 656, 64, 0, 656, 32, 0, 672, 16, 0, 672, 48, 0, 672, 64, 0, 672, 32, 0, 688, 16, 0, 688, 48, 0, 688, 64, 0, 688, 32, 0, 704, 16, 0, 704, 48, 0, 704, 64, 0, 704, 80, 0, 656, 96, 0, 656, 112, 0, 656, 128, 0, 656, 80, 0, 672, 96, 0, 672, 112, 0, 672, 128, 0, 672, 80, 0, 688, 96, 0, 688, 112, 0, 688, 128, 0, 688, 80, 0, 704, 96, 0, 704, 112, 0, 704, 128, 0, 704, 144, 0, 656, 160, 0, 656, 176, 0, 656, 192, 0, 656, 144, 0, 672, 160, 0, 672, 176, 0, 672, 192, 0, 672, 144, 0, 688, 160, 0, 688, 176, 0, 688, 192, 0, 688, 144, 0, 704, 160, 0, 704, 176, 0, 704, 192, 0, 704, 208, 0, 656, 224, 0, 656, 240, 0, 656, 256, 0, 656, 208, 0, 672, 224, 0, 672, 240, 0, 672, 256, 0, 672, 208, 0, 688, 224, 0, 688, 240, 0, 688, 256, 0, 688, 208, 0, 704, 224, 0, 704, 240, 0, 704, 256, 0, 704, 32, 0, 720, 16, 0, 720, 48, 0, 720, 64, 0, 720, 32, 0, 736, 16, 0, 736, 48, 0, 736, 64, 0, 736, 32, 0, 752, 16, 0, 752, 48, 0, 752, 64, 0, 752, 32, 0, 768, 16, 0, 768, 48, 0, 768, 64, 0, 768, 80, 0, 720, 96, 0, 720, 112, 0, 720, 128, 0, 720, 80, 0, 736, 96, 0, 736, 112, 0, 736, 128, 0, 736, 80, 0, 752, 96, 0, 752, 112, 0, 752, 128, 0, 752, 80, 0, 768, 96, 0, 768, 112, 0, 768, 128, 0, 768, 144, 0, 720, 160, 0, 720, 176, 0, 720, 192, 0, 720, 144, 0, 736, 160, 0, 736, 176, 0, 736, 192, 0, 736, 144, 0, 752, 160, 0, 752, 176, 0, 752, 192, 0, 752, 144, 0, 768, 160, 0, 768, 176, 0, 768, 192, 0, 768, 208, 0, 720, 224, 0, 720, 240, 0, 720, 256, 0, 720, 208, 0, 736, 224, 0, 736, 240, 0, 736, 256, 0, 736, 208, 0, 752, 224, 0, 752, 240, 0, 752, 256, 0, 752, 208, 0, 768, 224, 0, 768, 240, 0, 768, 256, 0, 768, 272, 0, -224, 272, 0, -240, 288, 0, -224, 288, 0, -240, 304, 0, -224, 304, 0, -240, 320, 0, -224, 320, 0, -240, 272, 0, -208, 288, 0, -208, 304, 0, -208, 320, 0, -208, 272, 0, -192, 288, 0, -192, 304, 0, -192, 320, 0, -192, 336, 0, -224, 336, 0, -240, 352, 0, -224, 352, 0, -240, 368, 0, -224, 368, 0, -240, 384, 0, -224, 384, 0, -240, 336, 0, -208, 352, 0, -208, 368, 0, -208, 384, 0, -208, 336, 0, -192, 352, 0, -192, 368, 0, -192, 384, 0, -192, 400, 0, -224, 400, 0, -240, 416, 0, -224, 416, 0, -240, 432, 0, -224, 432, 0, -240, 448, 0, -224, 448, 0, -240, 400, 0, -208, 416, 0, -208, 432, 0, -208, 448, 0, -208, 400, 0, -192, 416, 0, -192, 432, 0, -192, 448, 0, -192, 464, 0, -224, 464, 0, -240, 480, 0, -224, 480, 0, -240, 496, 0, -224, 496, 0, -240, 512, 0, -224, 512, 0, -240, 464, 0, -208, 480, 0, -208, 496, 0, -208, 512, 0, -208, 464, 0, -192, 480, 0, -192, 496, 0, -192, 512, 0, -192, 272, 0, -176, 288, 0, -176, 304, 0, -176, 320, 0, -176, 272, 0, -160, 288, 0, -160, 304, 0, -160, 320, 0, -160, 272, 0, -144, 288, 0, -144, 304, 0, -144, 320, 0, -144, 336, 0, -176, 352, 0, -176, 368, 0, -176, 384, 0, -176, 336, 0, -160, 352, 0, -160, 368, 0, -160, 384, 0, -160, 336, 0, -144, 352, 0, -144, 368, 0, -144, 384, 0, -144, 336, 0, -128, 352, 0, -128, 368, 0, -128, 384, 0, -128, 400, 0, -176, 416, 0, -176, 432, 0, -176, 448, 0, -176, 400, 0, -160, 416, 0, -160, 432, 0, -160, 448, 0, -160, 400, 0, -144, 416, 0, -144, 432, 0, -144, 448, 0, -144, 400, 0, -128, 416, 0, -128, 432, 0, -128, 448, 0, -128, 464, 0, -176, 480, 0, -176, 496, 0, -176, 512, 0, -176, 464, 0, -160, 480, 0, -160, 496, 0, -160, 512, 0, -160, 464, 0, -144, 480, 0, -144, 496, 0, -144, 512, 0, -144, 464, 0, -128, 480, 0, -128, 496, 0, -128, 512, 0, -128, 336, 0, -112, 352, 0, -112, 368, 0, -112, 384, 0, -112, 336, 0, -96, 352, 0, -96, 368, 0, -96, 384, 0, -96, 336, 0, -80, 352, 0, -80, 368, 0, -80, 384, 0, -80, 400, 0, -112, 416, 0, -112, 432, 0, -112, 448, 0, -112, 400, 0, -96, 416, 0, -96, 432, 0, -96, 448, 0, -96, 400, 0, -80, 416, 0, -80, 432, 0, -80, 448, 0, -80, 400, 0, -64, 416, 0, -64, 432, 0, -64, 448, 0, -64, 464, 0, -112, 480, 0, -112, 496, 0, -112, 512, 0, -112, 464, 0, -96, 480, 0, -96, 496, 0, -96, 512, 0, -96, 464, 0, -80, 480, 0, -80, 496, 0, -80, 512, 0, -80, 464, 0, -64, 480, 0, -64, 496, 0, -64, 512, 0, -64, 400, 0, -48, 416, 0, -48, 432, 0, -48, 448, 0, -48, 400, 0, -32, 416, 0, -32, 432, 0, -32, 448, 0, -32, 400, 0, -16, 416, 0, -16, 432, 0, -16, 448, 0, -16, 400, 0, 0, 416, 0, 0, 432, 0, 0, 448, 0, 0, 464, 0, -48, 480, 0, -48, 496, 0, -48, 512, 0, -48, 464, 0, -32, 480, 0, -32, 496, 0, -32, 512, 0, -32, 464, 0, -16, 480, 0, -16, 496, 0, -16, 512, 0, -16, 464, 0, 0, 480, 0, 0, 496, 0, 0, 512, 0, 0, 400, 0, 16, 416, 0, 16, 432, 0, 16, 448, 0, 16, 400, 0, 32, 416, 0, 32, 432, 0, 32, 448, 0, 32, 400, 0, 48, 416, 0, 48, 432, 0, 48, 448, 0, 48, 464, 0, 16, 480, 0, 16, 496, 0, 16, 512, 0, 16, 464, 0, 32, 480, 0, 32, 496, 0, 32, 512, 0, 32, 464, 0, 48, 480, 0, 48, 496, 0, 48, 512, 0, 48, 464, 0, 64, 480, 0, 64, 496, 0, 64, 512, 0, 64, 464, 0, 80, 480, 0, 80, 496, 0, 80, 512, 0, 80, 464, 0, 96, 480, 0, 96, 496, 0, 96, 512, 0, 96, 464, 0, 112, 480, 0, 112, 496, 0, 112, 512, 0, 112, 464, 0, 128, 480, 0, 128, 496, 0, 128, 512, 0, 128, 464, 0, 144, 480, 0, 144, 496, 0, 144, 512, 0, 144, 464, 0, 160, 480, 0, 160, 496, 0, 160, 512, 0, 160, 464, 0, 176, 480, 0, 176, 496, 0, 176, 512, 0, 176, 464, 0, 192, 480, 0, 192, 496, 0, 192, 512, 0, 192, 464, 0, 208, 480, 0, 208, 496, 0, 208, 512, 0, 208, 464, 0, 224, 480, 0, 224, 496, 0, 224, 512, 0, 224, 464, 0, 240, 480, 0, 240, 496, 0, 240, 512, 0, 240, 464, 0, 256, 480, 0, 256, 496, 0, 256, 512, 0, 256, 464, 0, 272, 480, 0, 272, 496, 0, 272, 512, 0, 272, 464, 0, 288, 480, 0, 288, 496, 0, 288, 512, 0, 288, 464, 0, 304, 480, 0, 304, 496, 0, 304, 512, 0, 304, 464, 0, 320, 480, 0, 320, 496, 0, 320, 512, 0, 320, 464, 0, 336, 480, 0, 336, 496, 0, 336, 512, 0, 336, 464, 0, 352, 480, 0, 352, 496, 0, 352, 512, 0, 352, 464, 0, 368, 480, 0, 368, 496, 0, 368, 512, 0, 368, 464, 0, 384, 480, 0, 384, 496, 0, 384, 512, 0, 384, 464, 0, 400, 480, 0, 400, 496, 0, 400, 512, 0, 400, 464, 0, 416, 480, 0, 416, 496, 0, 416, 512, 0, 416, 464, 0, 432, 480, 0, 432, 496, 0, 432, 512, 0, 432, 464, 0, 448, 480, 0, 448, 496, 0, 448, 512, 0, 448, 272, 0, 464, 288, 0, 464, 304, 0, 464, 320, 0, 464, 272, 0, 480, 288, 0, 480, 304, 0, 480, 320, 0, 480, 272, 0, 496, 288, 0, 496, 304, 0, 496, 320, 0, 496, 272, 0, 512, 288, 0, 512, 304, 0, 512, 320, 0, 512, 336, 0, 464, 352, 0, 464, 368, 0, 464, 384, 0, 464, 336, 0, 480, 352, 0, 480, 368, 0, 480, 384, 0, 480, 336, 0, 496, 352, 0, 496, 368, 0, 496, 384, 0, 496, 336, 0, 512, 352, 0, 512, 368, 0, 512, 384, 0, 512, 400, 0, 464, 416, 0, 464, 432, 0, 464, 448, 0, 464, 400, 0, 480, 416, 0, 480, 432, 0, 480, 448, 0, 480, 400, 0, 496, 416, 0, 496, 432, 0, 496, 448, 0, 496, 400, 0, 512, 416, 0, 512, 432, 0, 512, 448, 0, 512, 464, 0, 464, 480, 0, 464, 496, 0, 464, 512, 0, 464, 464, 0, 480, 480, 0, 480, 496, 0, 480, 512, 0, 480, 464, 0, 496, 480, 0, 496, 496, 0, 496, 512, 0, 496, 464, 0, 512, 480, 0, 512, 496, 0, 512, 512, 0, 512)
indices = PackedInt32Array(0, 1, 2, 0, 3, 1, 1305, 0, 2, 3, 4, 1, 3, 5, 4, 1305, 2, 1304, 1303, 1305, 1304, 2, 1, 10, 1303, 1304, 1302, 1301, 1303, 1302, 1304, 2, 11, 2, 10, 11, 1302, 1304, 1308, 1304, 11, 1308, 1301, 1302, 1300, 1291, 1301, 1300, 1302, 1308, 1307, 1300, 1302, 1307, 1291, 1300, 1290, 1289, 1291, 1290, 1300, 1307, 1306, 1290, 1300, 1306, 1289, 1290, 1288, 1287, 1289, 1288, 1290, 1306, 1295, 1288, 1290, 1295, 1287, 1288, 1286, 1285, 1287, 1286, 1288, 1295, 1294, 1286, 1288, 1294, 1285, 1286, 1284, 1275, 1285, 1284, 1286, 1294, 1293, 1284, 1286, 1293, 1275, 1284, 1274, 1273, 1275, 1274, 1284, 1293, 1292, 1274, 1284, 1292, 1273, 1274, 1272, 1271, 1273, 1272, 1274, 1292, 1279, 1272, 1274, 1279, 1271, 1272, 1269, 1268, 1271, 1269, 1268, 1269, 1270, 1269, 1272, 1278, 1272, 1279, 1278, 1270, 1269, 1276, 1269, 1278, 1276, 1270, 1276, 1277, 1277, 1276, 1280, 1277, 1280, 1281, 1276, 1278, 1282, 1276, 1282, 1280, 1278, 1279, 1283, 1278, 1283, 1282, 1279, 1296, 1283, 1279, 1292, 1296, 1281, 1280, 1312, 1281, 1312, 1313, 1280, 1282, 1314, 1280, 1314, 1312, 1282, 1283, 1315, 1282, 1315, 1314, 1283, 1328, 1315, 1283, 1296, 1328, 1313, 1312, 1316, 1313, 1316, 1317, 1312, 1314, 1318, 1312, 1318, 1316, 1314, 1315, 1319, 1314, 1319, 1318, 1315, 1332, 1319, 1315, 1328, 1332, 1317, 1316, 1320, 1317, 1320, 1321, 1316, 1318, 1322, 1316, 1322, 1320, 1318, 1319, 1323, 1318, 1323, 1322, 1319, 1336, 1323, 1319, 1332, 1336, 1321, 1320, 1324, 1321, 1324, 1325, 1320, 1322, 1326, 1320, 1326, 1324, 1322, 1323, 1327, 1322, 1327, 1326, 1323, 1340, 1327, 1323, 1336, 1340, 1325, 1324, 1352, 1325, 1352, 1353, 1324, 1326, 1354, 1324, 1354, 1352, 1326, 1327, 1355, 1326, 1355, 1354, 1327, 1368, 1355, 1327, 1340, 1368, 1353, 1352, 1356, 1353, 1356, 1357, 1352, 1354, 1358, 1352, 1358, 1356, 1354, 1355, 1359, 1354, 1359, 1358, 1355, 1371, 1359, 1355, 1368, 1371, 1357, 1356, 1360, 1357, 1360, 1361, 1356, 1358, 1362, 1356, 1362, 1360, 1358, 1359, 1363, 1358, 1363, 1362, 1359, 1374, 1363, 1359, 1371, 1374, 1361, 1360, 1364, 1361, 1364, 1365, 1360, 1362, 1366, 1360, 1366, 1364, 1362, 1363, 1367, 1362, 1367, 1366, 1363, 1377, 1367, 1363, 1374, 1377, 1365, 1364, 1380, 1365, 1380, 1381, 1364, 1366, 1382, 1364, 1382, 1380, 1366, 1367, 1383, 1366, 1383, 1382, 1367, 1396, 1383, 1367, 1377, 1396, 1381, 1380, 1384, 1381, 1384, 1385, 1380, 1382, 1386, 1380, 1386, 1384, 1382, 1383, 1387, 1382, 1387, 1386, 1383, 1399, 1387, 1383, 1396, 1399, 1385, 1384, 1388, 1385, 1388, 1389, 1384, 1386, 1390, 1384, 1390, 1388, 1386, 1387, 1391, 1386, 1391, 1390, 1387, 1402, 1391, 1387, 1399, 1402, 1389, 1388, 1392, 1389, 1392, 1393, 1388, 1390, 1394, 1388, 1394, 1392, 1390, 1391, 1395, 1390, 1395, 1394, 1391, 1405, 1395, 1391, 1402, 1405, 1393, 1392, 1408, 1393, 1408, 1409, 1392, 1394, 1410, 1392, 1410, 1408, 1394, 1395, 1411, 1394, 1411, 1410, 1395, 1424, 1411, 1395, 1405, 1424, 1409, 1408, 1412, 1409, 1412, 1413, 1408, 1410, 1414, 1408, 1414, 1412, 1410, 1411, 1415, 1410, 1415, 1414, 1411, 1427, 1415, 1411, 1424, 1427, 1413, 1412, 1416, 1413, 1416, 1417, 1412, 1414, 1418, 1412, 1418, 1416, 1414, 1415, 1419, 1414, 1419, 1418, 1415, 1430, 1419, 1415, 1427, 1430, 1417, 1416, 1420, 1417, 1420, 1421, 1416, 1418, 1422, 1416, 1422, 1420, 1418, 1419, 1423, 1418, 1423, 1422, 1419, 1433, 1423, 1419, 1430, 1433, 1421, 1420, 1436, 1421, 1436, 1437, 1420, 1422, 1438, 1420, 1438, 1436, 1422, 1423, 1439, 1422, 1439, 1438, 1423, 1452, 1439, 1423, 1433, 1452, 1437, 1436, 1440, 1437, 1440, 1441, 1436, 1438, 1442, 1436, 1442, 1440, 1438, 1439, 1443, 1438, 1443, 1442, 1439, 1456, 1443, 1439, 1452, 1456, 1441, 1440, 1444, 1441, 1444, 1445, 1440, 1442, 1446, 1440, 1446, 1444, 1442, 1443, 1447, 1442, 1447, 1446, 1443, 1460, 1447, 1443, 1456, 1460, 1445, 1444, 1448, 1445, 1448, 1449, 1444, 1446, 1450, 1444, 1450, 1448, 1446, 1447, 1451, 1446, 1451, 1450, 1447, 1464, 1451, 1447, 1460, 1464, 1449, 1448, 1480, 1449, 1480, 1481, 1448, 1450, 1482, 1448, 1482, 1480, 1450, 1451, 1483, 1450, 1483, 1482, 1451, 1496, 1483, 1451, 1464, 1496, 1481, 1480, 1484, 1481, 1484, 1485, 1480, 1482, 1486, 1480, 1486, 1484, 1482, 1483, 1487, 1482, 1487, 1486, 1483, 1500, 1487, 1483, 1496, 1500, 1485, 1484, 1488, 1485, 1488, 1489, 1484, 1486, 1490, 1484, 1490, 1488, 1486, 1487, 1491, 1486, 1491, 1490, 1487, 1504, 1491, 1487, 1500, 1504, 1489, 1488, 1492, 1489, 1492, 1493, 1488, 1490, 1494, 1488, 1494, 1492, 1490, 1491, 1495, 1490, 1495, 1494, 1491, 1508, 1495, 1491, 1504, 1508, 1493, 1492, 1524, 1493, 1524, 1525, 1492, 1494, 1526, 1492, 1526, 1524, 1494, 1495, 1527, 1494, 1527, 1526, 1495, 1540, 1527, 1495, 1508, 1540, 1525, 1524, 1528, 1525, 1528, 1529, 1524, 1526, 1530, 1524, 1530, 1528, 1526, 1527, 1531, 1526, 1531, 1530, 1527, 1544, 1531, 1527, 1540, 1544, 1529, 1528, 1532, 1529, 1532, 1533, 1533, 1532, 1536, 1533, 1536, 1537, 1532, 1538, 1536, 1528, 1534, 1532, 1532, 1534, 1538, 1528, 1530, 1534, 1534, 1539, 1538, 1530, 1535, 1534, 1534, 1535, 1539, 1530, 1531, 1535, 1535, 1552, 1539, 1531, 1548, 1535, 1535, 1548, 1552, 1531, 1544, 1548, 1548, 1553, 1552, 1548, 1549, 1553, 1544, 1549, 1548, 1549, 1554, 1553, 1544, 1545, 1549, 1549, 1550, 1554, 1545, 1550, 1549, 1550, 1555, 1554, 1540, 1545, 1544, 1550, 1551, 1555, 1551, 1568, 1555, 1545, 1546, 1550, 1546, 1551, 1550, 1540, 1541, 1545, 1541, 1546, 1545, 1508, 1541, 1540, 1551, 1564, 1568, 1564, 1569, 1568, 1546, 1547, 1551, 1547, 1564, 1551, 1541, 1542, 1546, 1542, 1547, 1546, 1508, 1509, 1541, 1509, 1542, 1541, 1504, 1509, 1508, 1564, 1565, 1569, 1565, 1570, 1569, 1547, 1560, 1564, 1560, 1565, 1564, 1542, 1543, 1547, 1543, 1560, 1547, 1509, 1510, 1542, 1510, 1543, 1542, 1504, 1505, 1509, 1505, 1510, 1509, 1500, 1505, 1504, 1500, 1501, 1505, 1496, 1501, 1500, 1505, 1506, 1510, 1501, 1506, 1505, 1510, 1511, 1543, 1506, 1511, 1510, 1511, 1556, 1543, 1543, 1556, 1560, 1496, 1497, 1501, 1464, 1497, 1496, 1501, 1502, 1506, 1497, 1502, 1501, 1506, 1507, 1511, 1502, 1507, 1506, 1511, 1521, 1556, 1507, 1521, 1511, 1464, 1465, 1497, 1460, 1465, 1464, 1497, 1498, 1502, 1465, 1498, 1497, 1502, 1503, 1507, 1498, 1503, 1502, 1507, 1518, 1521, 1503, 1518, 1507, 1460, 1461, 1465, 1456, 1461, 1460, 1465, 1466, 1498, 1461, 1466, 1465, 1498, 1499, 1503, 1466, 1499, 1498, 1503, 1515, 1518, 1499, 1515, 1503, 1456, 1457, 1461, 1452, 1457, 1456, 1461, 1462, 1466, 1457, 1462, 1461, 1466, 1467, 1499, 1462, 1467, 1466, 1499, 1512, 1515, 1467, 1512, 1499, 1452, 1453, 1457, 1433, 1453, 1452, 1457, 1458, 1462, 1453, 1458, 1457, 1462, 1463, 1467, 1458, 1463, 1462, 1467, 1477, 1512, 1463, 1477, 1467, 1433, 1434, 1453, 1430, 1434, 1433, 1453, 1454, 1458, 1434, 1454, 1453, 1458, 1459, 1463, 1454, 1459, 1458, 1463, 1474, 1477, 1459, 1474, 1463, 1430, 1431, 1434, 1427, 1431, 1430, 1434, 1435, 1454, 1431, 1435, 1434, 1454, 1455, 1459, 1435, 1455, 1454, 1459, 1471, 1474, 1455, 1471, 1459, 1427, 1428, 1431, 1424, 1428, 1427, 1431, 1432, 1435, 1428, 1432, 1431, 1435, 189, 1455, 1432, 189, 1435, 1455, 1468, 1471, 189, 1468, 1455, 1424, 1425, 1428, 1405, 1425, 1424, 1428, 1429, 1432, 1425, 1429, 1428, 1432, 185, 189, 1429, 185, 1432, 189, 188, 1468, 185, 188, 189, 1405, 1406, 1425, 1402, 1406, 1405, 1425, 1426, 1429, 1406, 1426, 1425, 1429, 181, 185, 1426, 181, 1429, 185, 184, 188, 181, 184, 185, 1402, 1403, 1406, 1399, 1403, 1402, 1406, 1407, 1426, 1403, 1407, 1406, 1426, 177, 181, 1407, 177, 1426, 181, 180, 184, 177, 180, 181, 1399, 1400, 1403, 1396, 1400, 1399, 1403, 1404, 1407, 1400, 1404, 1403, 1407, 173, 177, 1404, 173, 1407, 177, 176, 180, 173, 176, 177, 1396, 1397, 1400, 1377, 1397, 1396, 1400, 1401, 1404, 1397, 1401, 1400, 1404, 169, 173, 1401, 169, 1404, 173, 172, 176, 169, 172, 173, 1377, 1378, 1397, 1374, 1378, 1377, 1397, 1398, 1401, 1378, 1398, 1397, 1401, 165, 169, 1398, 165, 1401, 169, 168, 172, 165, 168, 169, 1374, 1375, 1378, 1371, 1375, 1374, 1378, 1379, 1398, 1375, 1379, 1378, 1398, 161, 165, 1379, 161, 1398, 165, 164, 168, 161, 164, 165, 1371, 1372, 1375, 1368, 1372, 1371, 1375, 1376, 1379, 1372, 1376, 1375, 1379, 157, 161, 1376, 157, 1379, 161, 160, 164, 157, 160, 161, 1368, 1369, 1372, 1340, 1369, 1368, 1372, 1373, 1376, 1369, 1373, 1372, 1376, 153, 157, 1373, 153, 1376, 157, 156, 160, 153, 156, 157, 1340, 1341, 1369, 1336, 1341, 1340, 1369, 1370, 1373, 1341, 1370, 1369, 1373, 149, 153, 1370, 149, 1373, 153, 152, 156, 149, 152, 153, 1336, 1337, 1341, 1332, 1337, 1336, 1341, 1342, 1370, 1337, 1342, 1341, 1370, 142, 149, 1342, 142, 1370, 149, 148, 152, 142, 148, 149, 1332, 1333, 1337, 1328, 1333, 1332, 1337, 1338, 1342, 1333, 1338, 1337, 1342, 140, 142, 1338, 140, 1342, 142, 141, 148, 140, 141, 142, 1328, 1329, 1333, 1296, 1329, 1328, 1333, 1334, 1338, 1329, 1334, 1333, 1338, 1339, 140, 1334, 1339, 1338, 140, 143, 141, 1339, 143, 140, 1296, 1297, 1329, 1292, 1297, 1296, 1292, 1293, 1297, 1297, 1330, 1329, 1329, 1330, 1334, 1293, 1298, 1297, 1297, 1298, 1330, 1293, 1294, 1298, 1334, 1335, 1339, 1330, 1335, 1334, 1335, 1349, 1339, 1339, 1349, 143, 1330, 1331, 1335, 1298, 1331, 1330, 1294, 1299, 1298, 1298, 1299, 1331, 1294, 1295, 1299, 1331, 1346, 1335, 1335, 1346, 1349, 1299, 1343, 1331, 1331, 1343, 1346, 1295, 1309, 1299, 1299, 1309, 1343, 1295, 1306, 1309, 1306, 1310, 1309, 1306, 1307, 1310, 1309, 1344, 1343, 1309, 1310, 1344, 1343, 1347, 1346, 1343, 1344, 1347, 1346, 1347, 1350, 1346, 1350, 1349, 1307, 1311, 1310, 1307, 1308, 1311, 1310, 1345, 1344, 1310, 1311, 1345, 1344, 1348, 1347, 1344, 1345, 1348, 1347, 1351, 1350, 1347, 1348, 1351, 1308, 16, 1311, 1308, 11, 16, 1311, 21, 1345, 1311, 16, 21, 1345, 26, 1348, 1345, 21, 26, 1348, 31, 1351, 1348, 26, 31, 11, 15, 16, 11, 10, 15, 16, 20, 21, 16, 15, 20, 21, 25, 26, 21, 20, 25, 26, 30, 31, 26, 25, 30, 31, 30, 35, 15, 22, 20, 20, 27, 25, 20, 22, 27, 25, 32, 30, 25, 27, 32, 30, 32, 37, 30, 37, 35, 15, 17, 22, 10, 17, 15, 22, 28, 27, 10, 12, 17, 1, 12, 10, 1, 4, 12, 17, 23, 22, 22, 23, 28, 12, 18, 17, 17, 18, 23, 4, 13, 12, 12, 13, 18, 4, 6, 13, 5, 6, 4, 5, 7, 6, 7, 8, 6, 7, 9, 8, 6, 14, 13, 6, 8, 14, 13, 19, 18, 13, 14, 19, 18, 19, 24, 18, 24, 23, 9, 216, 8, 9, 213, 216, 8, 220, 14, 8, 216, 220, 14, 224, 19, 14, 220, 224, 19, 228, 24, 19, 224, 228, 23, 24, 29, 23, 29, 28, 24, 228, 232, 24, 232, 29, 224, 229, 228, 228, 233, 232, 228, 229, 233, 224, 225, 229, 220, 225, 224, 220, 221, 225, 216, 221, 220, 225, 230, 229, 216, 217, 221, 213, 217, 216, 221, 226, 225, 225, 226, 230, 217, 222, 221, 221, 222, 226, 213, 212, 217, 209, 212, 213, 217, 218, 222, 212, 218, 217, 209, 208, 212, 205, 208, 209, 212, 214, 218, 208, 214, 212, 205, 204, 208, 201, 204, 205, 208, 210, 214, 204, 210, 208, 201, 200, 204, 194, 200, 201, 204, 206, 210, 200, 206, 204, 194, 193, 200, 192, 193, 194, 200, 202, 206, 193, 202, 200, 192, 195, 193, 1706, 195, 192, 193, 196, 202, 195, 196, 193, 1706, 1705, 195, 1703, 1705, 1706, 195, 197, 196, 1705, 197, 195, 1703, 1702, 1705, 1700, 1702, 1703, 1705, 1707, 197, 1702, 1707, 1705, 1700, 1699, 1702, 1661, 1699, 1700, 1702, 1704, 1707, 1699, 1704, 1702, 1661, 1660, 1699, 1657, 1660, 1661, 1699, 1701, 1704, 1660, 1701, 1699, 1657, 1656, 1660, 1653, 1656, 1657, 1660, 1662, 1701, 1656, 1662, 1660, 1653, 1652, 1656, 1649, 1652, 1653, 1656, 1658, 1662, 1652, 1658, 1656, 1649, 1648, 1652, 1597, 1648, 1649, 1652, 1654, 1658, 1648, 1654, 1652, 1597, 1596, 1648, 1593, 1596, 1597, 1648, 1650, 1654, 1596, 1650, 1648, 1593, 1592, 1596, 1586, 1592, 1593, 1596, 1598, 1650, 1592, 1598, 1596, 1586, 1585, 1592, 1584, 1585, 1586, 1584, 1587, 1585, 1585, 1594, 1592, 1592, 1594, 1598, 1587, 1588, 1585, 1585, 1588, 1594, 1587, 1589, 1588, 1589, 1590, 1588, 1589, 1591, 1590, 1588, 1595, 1594, 1588, 1590, 1595, 1594, 1599, 1598, 1594, 1595, 1599, 1598, 1599, 1651, 1598, 1651, 1650, 1591, 1600, 1590, 1591, 1601, 1600, 1590, 1608, 1595, 1590, 1600, 1608, 1595, 1612, 1599, 1595, 1608, 1612, 1599, 1663, 1651, 1599, 1612, 1663, 1601, 1602, 1600, 1601, 1603, 1602, 1600, 1609, 1608, 1600, 1602, 1609, 1608, 1613, 1612, 1608, 1609, 1613, 1612, 1664, 1663, 1612, 1613, 1664, 1603, 1604, 1602, 1603, 1605, 1604, 1602, 1610, 1609, 1602, 1604, 1610, 1609, 1614, 1613, 1609, 1610, 1614, 1613, 1665, 1664, 1613, 1614, 1665, 1605, 1606, 1604, 1605, 1607, 1606, 1604, 1611, 1610, 1604, 1606, 1611, 1610, 1615, 1614, 1610, 1611, 1615, 1614, 1666, 1665, 1614, 1615, 1666, 1607, 1616, 1606, 1607, 1617, 1616, 1606, 1624, 1611, 1606, 1616, 1624, 1611, 1628, 1615, 1611, 1624, 1628, 1615, 1675, 1666, 1615, 1628, 1675, 1617, 1618, 1616, 1617, 1619, 1618, 1616, 1625, 1624, 1616, 1618, 1625, 1624, 1629, 1628, 1624, 1625, 1629, 1628, 1676, 1675, 1628, 1629, 1676, 1619, 1620, 1618, 1619, 1621, 1620, 1618, 1626, 1625, 1618, 1620, 1626, 1625, 1630, 1629, 1625, 1626, 1630, 1629, 1677, 1676, 1629, 1630, 1677, 1621, 1622, 1620, 1621, 1623, 1622, 1620, 1627, 1626, 1620, 1622, 1627, 1626, 1631, 1630, 1626, 1627, 1631, 1630, 1678, 1677, 1630, 1631, 1678, 1623, 1632, 1622, 1623, 1633, 1632, 1622, 1640, 1627, 1622, 1632, 1640, 1627, 1644, 1631, 1627, 1640, 1644, 1631, 1687, 1678, 1631, 1644, 1687, 1633, 1634, 1632, 1633, 1635, 1634, 1632, 1641, 1640, 1632, 1634, 1641, 1640, 1645, 1644, 1640, 1641, 1645, 1644, 1688, 1687, 1644, 1645, 1688, 1635, 1636, 1634, 1635, 1637, 1636, 1634, 1642, 1641, 1634, 1636, 1642, 1641, 1646, 1645, 1641, 1642, 1646, 1645, 1689, 1688, 1645, 1646, 1689, 1637, 1638, 1636, 1637, 1639, 1638, 1636, 1643, 1642, 1636, 1638, 1643, 1642, 1647, 1646, 1642, 1643, 1647, 1646, 1690, 1689, 1646, 1647, 1690, 1639, 1917, 1638, 1639, 1918, 1917, 1638, 1925, 1643, 1638, 1917, 1925, 1643, 1929, 1647, 1643, 1925, 1929, 1647, 1981, 1690, 1647, 1929, 1981, 1918, 1919, 1917, 1918, 1920, 1919, 1917, 1926, 1925, 1917, 1919, 1926, 1925, 1930, 1929, 1925, 1926, 1930, 1929, 1982, 1981, 1929, 1930, 1982, 1920, 1921, 1919, 1920, 1922, 1921, 1919, 1927, 1926, 1919, 1921, 1927, 1926, 1931, 1930, 1926, 1927, 1931, 1930, 1983, 1982, 1930, 1931, 1983, 1922, 1923, 1921, 1922, 1924, 1923, 1921, 1928, 1927, 1921, 1923, 1928, 1927, 1932, 1931, 1927, 1928, 1932, 1931, 1984, 1983, 1931, 1932, 1984, 1924, 1933, 1923, 1924, 1934, 1933, 1923, 1941, 1928, 1923, 1933, 1941, 1928, 1945, 1932, 1928, 1941, 1945, 1932, 1993, 1984, 1932, 1945, 1993, 1934, 1935, 1933, 1934, 1936, 1935, 1933, 1942, 1941, 1933, 1935, 1942, 1941, 1946, 1945, 1941, 1942, 1946, 1945, 1994, 1993, 1945, 1946, 1994, 1936, 1937, 1935, 1936, 1938, 1937, 1935, 1943, 1942, 1935, 1937, 1943, 1942, 1947, 1946, 1942, 1943, 1947, 1946, 1995, 1994, 1946, 1947, 1995, 1938, 1939, 1937, 1938, 1940, 1939, 1937, 1944, 1943, 1937, 1939, 1944, 1943, 1948, 1947, 1943, 1944, 1948, 1947, 1996, 1995, 1947, 1948, 1996, 1940, 1949, 1939, 1940, 1950, 1949, 1939, 1957, 1944, 1939, 1949, 1957, 1944, 1961, 1948, 1944, 1957, 1961, 1948, 2009, 1996, 1948, 1961, 2009, 1950, 1951, 1949, 1950, 1952, 1951, 1949, 1958, 1957, 1949, 1951, 1958, 1957, 1962, 1961, 1957, 1958, 1962, 1961, 2010, 2009, 1961, 1962, 2010, 1952, 1953, 1951, 1952, 1954, 1953, 1951, 1959, 1958, 1951, 1953, 1959, 1958, 1963, 1962, 1958, 1959, 1963, 1962, 2011, 2010, 1962, 1963, 2011, 1954, 1955, 1953, 1954, 1956, 1955, 1953, 1960, 1959, 1953, 1955, 1960, 1959, 1964, 1963, 1959, 1960, 1964, 1963, 2012, 2011, 1963, 1964, 2012, 1956, 1965, 1955, 1956, 1966, 1965, 1955, 1973, 1960, 1955, 1965, 1973, 1960, 1977, 1964, 1960, 1973, 1977, 1964, 2025, 2012, 1964, 1977, 2025, 1966, 1967, 1965, 1966, 1968, 1967, 1965, 1974, 1973, 1965, 1967, 1974, 1973, 1978, 1977, 1973, 1974, 1978, 1977, 2026, 2025, 1977, 1978, 2026, 1968, 1969, 1967, 1968, 1970, 1969, 1970, 1971, 1969, 1970, 1972, 1971, 1969, 1971, 1976, 1967, 1969, 1975, 1969, 1976, 1975, 1967, 1975, 1974, 1975, 1976, 1980, 1974, 1975, 1979, 1975, 1980, 1979, 1974, 1979, 1978, 1979, 1980, 2028, 1978, 1979, 2027, 1979, 2028, 2027, 1978, 2027, 2026, 2027, 2028, 2032, 2027, 2032, 2031, 2026, 2027, 2031, 2031, 2032, 2036, 2026, 2031, 2030, 2025, 2026, 2030, 2031, 2036, 2035, 2030, 2031, 2035, 2035, 2036, 2040, 2025, 2030, 2029, 2012, 2025, 2029, 2030, 2035, 2034, 2029, 2030, 2034, 2035, 2040, 2039, 2034, 2035, 2039, 2039, 2040, 2072, 2012, 2029, 2016, 2011, 2012, 2016, 2029, 2034, 2033, 2016, 2029, 2033, 2034, 2039, 2038, 2033, 2034, 2038, 2039, 2072, 2071, 2038, 2039, 2071, 2071, 2072, 2076, 2011, 2016, 2015, 2010, 2011, 2015, 2016, 2033, 2020, 2015, 2016, 2020, 2033, 2038, 2037, 2020, 2033, 2037, 2038, 2071, 2070, 2037, 2038, 2070, 2071, 2076, 2075, 2070, 2071, 2075, 2075, 2076, 2080, 2075, 2080, 2079, 2079, 2080, 2084, 2070, 2075, 2074, 2074, 2075, 2079, 2037, 2070, 2069, 2069, 2070, 2074, 2024, 2037, 2069, 2020, 2037, 2024, 2079, 2084, 2083, 2083, 2084, 2104, 2074, 2079, 2078, 2078, 2079, 2083, 2069, 2074, 2073, 2073, 2074, 2078, 2056, 2069, 2073, 2024, 2069, 2056, 2083, 2104, 2103, 2103, 2104, 2108, 2078, 2083, 2082, 2082, 2083, 2103, 2073, 2078, 2077, 2077, 2078, 2082, 2060, 2073, 2077, 2056, 2073, 2060, 2103, 2108, 2107, 2107, 2108, 2112, 2082, 2103, 2102, 2102, 2103, 2107, 2077, 2082, 2081, 2081, 2082, 2102, 2064, 2077, 2081, 2060, 2077, 2064, 2107, 2112, 2111, 2111, 2112, 2116, 2102, 2107, 2106, 2106, 2107, 2111, 2081, 2102, 2101, 2101, 2102, 2106, 2068, 2081, 2101, 2064, 2081, 2068, 2111, 2116, 2115, 2115, 2116, 2132, 2106, 2111, 2110, 2110, 2111, 2115, 2101, 2106, 2105, 2105, 2106, 2110, 2088, 2101, 2105, 2068, 2101, 2088, 2115, 2132, 2131, 2131, 2132, 2136, 2110, 2115, 2114, 2114, 2115, 2131, 2105, 2110, 2109, 2109, 2110, 2114, 2092, 2105, 2109, 2088, 2105, 2092, 2131, 2136, 2135, 2135, 2136, 2140, 2114, 2131, 2130, 2130, 2131, 2135, 2109, 2114, 2113, 2113, 2114, 2130, 2096, 2109, 2113, 2092, 2109, 2096, 2135, 2140, 2139, 2139, 2140, 2144, 2130, 2135, 2134, 2134, 2135, 2139, 2113, 2130, 2129, 2129, 2130, 2134, 2100, 2113, 2129, 2096, 2113, 2100, 2139, 2144, 2143, 2143, 2144, 2148, 2134, 2139, 2138, 2138, 2139, 2143, 2129, 2134, 2133, 2133, 2134, 2138, 2120, 2129, 2133, 2100, 2129, 2120, 2143, 2148, 2147, 2147, 2148, 2152, 2138, 2143, 2142, 2142, 2143, 2147, 2133, 2138, 2137, 2137, 2138, 2142, 2124, 2133, 2137, 2120, 2133, 2124, 2147, 2152, 2151, 2151, 2152, 2156, 2142, 2147, 2146, 2146, 2147, 2151, 2137, 2142, 2141, 2141, 2142, 2146, 2128, 2137, 2141, 2124, 2137, 2128, 2151, 2156, 2155, 2155, 2156, 2160, 2146, 2151, 2150, 2150, 2151, 2155, 2141, 2146, 2145, 2145, 2146, 2150, 1175, 2141, 2145, 2128, 2141, 1175, 2155, 2160, 2159, 2159, 2160, 2164, 2150, 2155, 2154, 2154, 2155, 2159, 2145, 2150, 2149, 2149, 2150, 2154, 1174, 2145, 2149, 1175, 2145, 1174, 2159, 2164, 2163, 2163, 2164, 2168, 2154, 2159, 2158, 2158, 2159, 2163, 2149, 2154, 2153, 2153, 2154, 2158, 1179, 2149, 2153, 1174, 2149, 1179, 2163, 2168, 2167, 2167, 2168, 2172, 2158, 2163, 2162, 2162, 2163, 2167, 2153, 2158, 2157, 2157, 2158, 2162, 1183, 2153, 2157, 1179, 2153, 1183, 2167, 2172, 2171, 2171, 2172, 2176, 2162, 2167, 2166, 2166, 2167, 2171, 2157, 2162, 2161, 2161, 2162, 2166, 1187, 2157, 2161, 1183, 2157, 1187, 2171, 2176, 2175, 2175, 2176, 2180, 2166, 2171, 2170, 2170, 2171, 2175, 2161, 2166, 2165, 2165, 2166, 2170, 1191, 2161, 2165, 1187, 2161, 1191, 2175, 2180, 2179, 2179, 2180, 2184, 2170, 2175, 2174, 2174, 2175, 2179, 2165, 2170, 2169, 2169, 2170, 2174, 1195, 2165, 2169, 1191, 2165, 1195, 2179, 2184, 2183, 2183, 2184, 2188, 2174, 2179, 2178, 2178, 2179, 2183, 2169, 2174, 2173, 2173, 2174, 2178, 1199, 2169, 2173, 1195, 2169, 1199, 2183, 2188, 2187, 2187, 2188, 2192, 2178, 2183, 2182, 2182, 2183, 2187, 2173, 2178, 2177, 2177, 2178, 2182, 1203, 2173, 2177, 1199, 2173, 1203, 2187, 2192, 2191, 2191, 2192, 2196, 2182, 2187, 2186, 2186, 2187, 2191, 2177, 2182, 2181, 2181, 2182, 2186, 1207, 2177, 2181, 1203, 2177, 1207, 2191, 2196, 2195, 2195, 2196, 2200, 2186, 2191, 2190, 2190, 2191, 2195, 2181, 2186, 2185, 2185, 2186, 2190, 1211, 2181, 2185, 1207, 2181, 1211, 2195, 2200, 2199, 2199, 2200, 2204, 2190, 2195, 2194, 2194, 2195, 2199, 2185, 2190, 2189, 2189, 2190, 2194, 1215, 2185, 2189, 1211, 2185, 1215, 2199, 2204, 2203, 2203, 2204, 2208, 2194, 2199, 2198, 2198, 2199, 2203, 2189, 2194, 2193, 2193, 2194, 2198, 1219, 2189, 2193, 1215, 2189, 1219, 2203, 2208, 2207, 2207, 2208, 2212, 2198, 2203, 2202, 2202, 2203, 2207, 2193, 2198, 2197, 2197, 2198, 2202, 1223, 2193, 2197, 1219, 2193, 1223, 2207, 2212, 2211, 2211, 2212, 2216, 2202, 2207, 2206, 2206, 2207, 2211, 2197, 2202, 2201, 2201, 2202, 2206, 1227, 2197, 2201, 1223, 2197, 1227, 2211, 2216, 2215, 2215, 2216, 2220, 2206, 2211, 2210, 2210, 2211, 2215, 2201, 2206, 2205, 2205, 2206, 2210, 1231, 2201, 2205, 1227, 2201, 1231, 2215, 2220, 2219, 2219, 2220, 2224, 2210, 2215, 2214, 2214, 2215, 2219, 2205, 2210, 2209, 2209, 2210, 2214, 1235, 2205, 2209, 1231, 2205, 1235, 2219, 2224, 2223, 2223, 2224, 2228, 2214, 2219, 2218, 2218, 2219, 2223, 2209, 2214, 2213, 2213, 2214, 2218, 1239, 2209, 2213, 1235, 2209, 1239, 2223, 2228, 2227, 2227, 2228, 2232, 2218, 2223, 2222, 2222, 2223, 2227, 2213, 2218, 2217, 2217, 2218, 2222, 1243, 2213, 2217, 1239, 2213, 1243, 2227, 2232, 2231, 2231, 2232, 2236, 2222, 2227, 2226, 2226, 2227, 2231, 2217, 2222, 2221, 2221, 2222, 2226, 1247, 2217, 2221, 1243, 2217, 1247, 2231, 2236, 2235, 2235, 2236, 2240, 2226, 2231, 2230, 2230, 2231, 2235, 2221, 2226, 2225, 2225, 2226, 2230, 1251, 2221, 2225, 1247, 2221, 1251, 2235, 2240, 2239, 2239, 2240, 2292, 2230, 2235, 2234, 2234, 2235, 2239, 2225, 2230, 2229, 2229, 2230, 2234, 1255, 2225, 2229, 1251, 2225, 1255, 2239, 2292, 2291, 2291, 2292, 2296, 2234, 2239, 2238, 2238, 2239, 2291, 2229, 2234, 2233, 2233, 2234, 2238, 1259, 2229, 2233, 1255, 2229, 1259, 2291, 2296, 2295, 2295, 2296, 2300, 2238, 2291, 2290, 2290, 2291, 2295, 2233, 2238, 2237, 2237, 2238, 2290, 1263, 2233, 2237, 1259, 2233, 1263, 2295, 2300, 2299, 2299, 2300, 2304, 2299, 2304, 2303, 2294, 2295, 2299, 2290, 2295, 2294, 2298, 2299, 2303, 2294, 2299, 2298, 2298, 2303, 2302, 2289, 2290, 2294, 2237, 2290, 2289, 2293, 2294, 2298, 2289, 2294, 2293, 2297, 2298, 2302, 2293, 2298, 2297, 2297, 2302, 2301, 1267, 2237, 2289, 1263, 2237, 1267, 2276, 2289, 2293, 1267, 2289, 2276, 2280, 2293, 2297, 2276, 2293, 2280, 2284, 2297, 2301, 2280, 2297, 2284, 2284, 2301, 2288, 2283, 2284, 2288, 2283, 2288, 2287, 2279, 2280, 2284, 2279, 2284, 2283, 2275, 2276, 2280, 2275, 2280, 2279, 1266, 2276, 2275, 1266, 1267, 2276, 2282, 2283, 2287, 2282, 2287, 2286, 2278, 2279, 2283, 2278, 2283, 2282, 2274, 2275, 2279, 2274, 2279, 2278, 1265, 1266, 2275, 1265, 2275, 2274, 2281, 2282, 2286, 2281, 2286, 2285, 2277, 2278, 2282, 2277, 2282, 2281, 2273, 2274, 2278, 2273, 2278, 2277, 1264, 1265, 2274, 1264, 2274, 2273, 2268, 2281, 2285, 2268, 2285, 2272, 2264, 2277, 2281, 2264, 2281, 2268, 2260, 2273, 2277, 2260, 2277, 2264, 1167, 1264, 2273, 1167, 2273, 2260, 2267, 2268, 2272, 2267, 2272, 2271, 2263, 2264, 2268, 2263, 2268, 2267, 2259, 2260, 2264, 2259, 2264, 2263, 1166, 1167, 2260, 1166, 2260, 2259, 2266, 2267, 2271, 2266, 2271, 2270, 2262, 2263, 2267, 2262, 2267, 2266, 2258, 2259, 2263, 2258, 2263, 2262, 1165, 1166, 2259, 1165, 2259, 2258, 2265, 2266, 2270, 2265, 2270, 2269, 2261, 2262, 2266, 2261, 2266, 2265, 2257, 2258, 2262, 2257, 2262, 2261, 1164, 1165, 2258, 1164, 2258, 2257, 2252, 2265, 2269, 2252, 2269, 2256, 2248, 2261, 2265, 2248, 2265, 2252, 2244, 2257, 2261, 2244, 2261, 2248, 1035, 1164, 2257, 1035, 2257, 2244, 2251, 2252, 2256, 2251, 2256, 2255, 2247, 2248, 2252, 2247, 2252, 2251, 2243, 2244, 2248, 2243, 2248, 2247, 1034, 1035, 2244, 1034, 2244, 2243, 2250, 2251, 2255, 2250, 2255, 2254, 2246, 2247, 2251, 2246, 2251, 2250, 2242, 2243, 2247, 2242, 2247, 2246, 1033, 1034, 2243, 1033, 2243, 2242, 2249, 2250, 2254, 2249, 2254, 2253, 2245, 2246, 2250, 2245, 2250, 2249, 2241, 2242, 2246, 2241, 2246, 2245, 1032, 1033, 2242, 1032, 2242, 2241, 883, 2249, 2253, 883, 2253, 887, 879, 2245, 2249, 879, 2249, 883, 875, 2241, 2245, 875, 2245, 879, 871, 1032, 2241, 871, 2241, 875, 882, 883, 887, 878, 879, 883, 878, 883, 882, 882, 887, 886, 874, 879, 878, 874, 875, 879, 877, 878, 882, 870, 875, 874, 870, 871, 875, 873, 874, 878, 873, 878, 877, 869, 870, 874, 869, 874, 873, 866, 871, 870, 865, 870, 869, 865, 866, 870, 866, 867, 871, 867, 1032, 871, 861, 866, 865, 867, 1028, 1032, 1028, 1033, 1032, 862, 867, 866, 861, 862, 866, 863, 1028, 867, 862, 863, 867, 1028, 1029, 1033, 1029, 1034, 1033, 863, 1024, 1028, 1024, 1029, 1028, 1029, 1030, 1034, 1030, 1035, 1034, 1024, 1025, 1029, 1025, 1030, 1029, 1030, 1031, 1035, 1031, 1164, 1035, 1025, 1026, 1030, 1026, 1031, 1030, 1031, 1160, 1164, 1160, 1165, 1164, 1026, 1027, 1031, 1027, 1160, 1031, 1160, 1161, 1165, 1161, 1166, 1165, 1027, 1156, 1160, 1156, 1161, 1160, 1161, 1162, 1166, 1162, 1167, 1166, 1156, 1157, 1161, 1157, 1162, 1161, 1162, 1163, 1167, 1163, 1264, 1167, 1157, 1158, 1162, 1158, 1163, 1162, 1163, 1260, 1264, 1260, 1265, 1264, 1158, 1159, 1163, 1159, 1260, 1163, 1260, 1261, 1265, 1261, 1266, 1265, 1159, 1256, 1260, 1256, 1261, 1260, 1261, 1262, 1266, 1262, 1267, 1266, 1262, 1263, 1267, 1257, 1262, 1261, 1256, 1257, 1261, 1258, 1263, 1262, 1257, 1258, 1262, 1258, 1259, 1263, 1254, 1259, 1258, 1254, 1255, 1259, 1253, 1258, 1257, 1253, 1254, 1258, 1252, 1257, 1256, 1252, 1253, 1257, 1155, 1252, 1256, 1155, 1256, 1159, 1250, 1255, 1254, 1250, 1251, 1255, 1249, 1254, 1253, 1249, 1250, 1254, 1248, 1253, 1252, 1248, 1249, 1253, 1151, 1252, 1155, 1151, 1248, 1252, 1246, 1251, 1250, 1246, 1247, 1251, 1245, 1250, 1249, 1245, 1246, 1250, 1244, 1249, 1248, 1244, 1245, 1249, 1147, 1248, 1151, 1147, 1244, 1248, 1242, 1247, 1246, 1242, 1243, 1247, 1241, 1246, 1245, 1241, 1242, 1246, 1240, 1245, 1244, 1240, 1241, 1245, 1143, 1244, 1147, 1143, 1240, 1244, 1238, 1243, 1242, 1238, 1239, 1243, 1237, 1242, 1241, 1237, 1238, 1242, 1236, 1241, 1240, 1236, 1237, 1241, 1139, 1240, 1143, 1139, 1236, 1240, 1234, 1239, 1238, 1234, 1235, 1239, 1233, 1238, 1237, 1233, 1234, 1238, 1232, 1237, 1236, 1232, 1233, 1237, 1135, 1236, 1139, 1135, 1232, 1236, 1230, 1235, 1234, 1230, 1231, 1235, 1229, 1234, 1233, 1229, 1230, 1234, 1228, 1233, 1232, 1228, 1229, 1233, 1131, 1232, 1135, 1131, 1228, 1232, 1226, 1231, 1230, 1226, 1227, 1231, 1225, 1230, 1229, 1225, 1226, 1230, 1224, 1229, 1228, 1224, 1225, 1229, 1127, 1228, 1131, 1127, 1224, 1228, 1222, 1227, 1226, 1222, 1223, 1227, 1221, 1226, 1225, 1221, 1222, 1226, 1220, 1225, 1224, 1220, 1221, 1225, 1123, 1224, 1127, 1123, 1220, 1224, 1218, 1223, 1222, 1218, 1219, 1223, 1217, 1222, 1221, 1217, 1218, 1222, 1216, 1221, 1220, 1216, 1217, 1221, 1119, 1220, 1123, 1119, 1216, 1220, 1214, 1219, 1218, 1214, 1215, 1219, 1213, 1218, 1217, 1213, 1214, 1218, 1212, 1217, 1216, 1212, 1213, 1217, 1115, 1216, 1119, 1115, 1212, 1216, 1210, 1215, 1214, 1210, 1211, 1215, 1209, 1214, 1213, 1209, 1210, 1214, 1208, 1213, 1212, 1208, 1209, 1213, 1111, 1212, 1115, 1111, 1208, 1212, 1206, 1211, 1210, 1206, 1207, 1211, 1205, 1210, 1209, 1205, 1206, 1210, 1204, 1209, 1208, 1204, 1205, 1209, 1107, 1208, 1111, 1107, 1204, 1208, 1202, 1207, 1206, 1202, 1203, 1207, 1201, 1206, 1205, 1201, 1202, 1206, 1200, 1205, 1204, 1200, 1201, 1205, 1103, 1204, 1107, 1103, 1200, 1204, 1198, 1203, 1202, 1198, 1199, 1203, 1197, 1202, 1201, 1197, 1198, 1202, 1196, 1201, 1200, 1196, 1197, 1201, 1099, 1200, 1103, 1099, 1196, 1200, 1194, 1199, 1198, 1194, 1195, 1199, 1193, 1198, 1197, 1193, 1194, 1198, 1192, 1197, 1196, 1192, 1193, 1197, 1095, 1196, 1099, 1095, 1192, 1196, 1190, 1195, 1194, 1190, 1191, 1195, 1189, 1194, 1193, 1189, 1190, 1194, 1188, 1193, 1192, 1188, 1189, 1193, 1091, 1192, 1095, 1091, 1188, 1192, 1186, 1191, 1190, 1186, 1187, 1191, 1185, 1190, 1189, 1185, 1186, 1190, 1184, 1189, 1188, 1184, 1185, 1189, 1087, 1188, 1091, 1087, 1184, 1188, 1182, 1187, 1186, 1182, 1183, 1187, 1181, 1186, 1185, 1181, 1182, 1186, 1180, 1185, 1184, 1180, 1181, 1185, 1083, 1184, 1087, 1083, 1180, 1184, 1178, 1183, 1182, 1178, 1179, 1183, 1177, 1182, 1181, 1177, 1178, 1182, 1176, 1181, 1180, 1176, 1177, 1181, 1079, 1180, 1083, 1079, 1176, 1180, 1172, 1179, 1178, 1172, 1174, 1179, 1170, 1178, 1177, 1170, 1172, 1178, 1168, 1177, 1176, 1168, 1170, 1177, 1075, 1176, 1079, 1075, 1168, 1176, 1173, 1174, 1172, 1173, 1175, 1174, 1171, 1172, 1170, 1171, 1173, 1172, 1169, 1170, 1168, 1169, 1171, 1170, 1071, 1168, 1075, 1071, 1169, 1168, 2127, 1175, 1173, 2127, 2128, 1175, 2126, 1173, 1171, 2126, 2127, 1173, 2125, 1171, 1169, 2125, 2126, 1171, 1067, 1169, 1071, 1067, 2125, 1169, 2123, 2128, 2127, 2123, 2124, 2128, 2122, 2127, 2126, 2122, 2123, 2127, 2121, 2126, 2125, 2121, 2122, 2126, 1063, 2125, 1067, 1063, 2121, 2125, 2119, 2124, 2123, 2119, 2120, 2124, 2118, 2123, 2122, 2118, 2119, 2123, 2117, 2122, 2121, 2117, 2118, 2122, 1059, 2121, 1063, 1059, 2117, 2121, 2099, 2120, 2119, 2099, 2100, 2120, 2098, 2119, 2118, 2098, 2099, 2119, 2097, 2118, 2117, 2097, 2098, 2118, 1055, 2117, 1059, 1055, 2097, 2117, 2095, 2100, 2099, 2095, 2096, 2100, 2094, 2099, 2098, 2094, 2095, 2099, 2093, 2098, 2097, 2093, 2094, 2098, 1051, 2097, 1055, 1051, 2093, 2097, 2091, 2096, 2095, 2091, 2092, 2096, 2090, 2095, 2094, 2090, 2091, 2095, 2089, 2094, 2093, 2089, 2090, 2094, 1047, 2093, 1051, 1047, 2089, 2093, 2087, 2092, 2091, 2087, 2088, 2092, 2086, 2091, 2090, 2086, 2087, 2091, 2085, 2090, 2089, 2085, 2086, 2090, 1042, 2089, 1047, 1042, 2085, 2089, 2067, 2088, 2087, 2067, 2068, 2088, 2066, 2087, 2086, 2066, 2067, 2087, 2065, 2086, 2085, 2065, 2066, 2086, 1043, 2085, 1042, 1043, 2065, 2085, 2063, 2068, 2067, 2063, 2064, 2068, 2062, 2067, 2066, 2062, 2063, 2067, 2061, 2066, 2065, 2061, 2062, 2066, 2052, 2065, 1043, 2052, 2061, 2065, 2059, 2064, 2063, 2059, 2060, 2064, 2058, 2063, 2062, 2058, 2059, 2063, 2057, 2062, 2061, 2057, 2058, 2062, 2048, 2061, 2052, 2048, 2057, 2061, 2055, 2060, 2059, 2055, 2056, 2060, 2054, 2059, 2058, 2054, 2055, 2059, 2053, 2058, 2057, 2053, 2054, 2058, 2044, 2057, 2048, 2044, 2053, 2057, 2023, 2056, 2055, 2023, 2024, 2056, 2022, 2055, 2054, 2022, 2023, 2055, 2021, 2054, 2053, 2021, 2022, 2054, 2008, 2053, 2044, 2008, 2021, 2053, 2019, 2024, 2023, 2019, 2020, 2024, 2015, 2020, 2019, 2018, 2019, 2023, 2018, 2023, 2022, 2014, 2015, 2019, 2014, 2019, 2018, 2010, 2015, 2014, 2009, 2010, 2014, 2009, 2014, 2013, 2013, 2014, 2018, 1996, 2009, 2013, 2017, 2018, 2022, 2013, 2018, 2017, 2017, 2022, 2021, 1996, 2013, 2000, 2000, 2013, 2017, 1995, 1996, 2000, 2004, 2017, 2021, 2000, 2017, 2004, 2004, 2021, 2008, 1995, 2000, 1999, 1999, 2000, 2004, 1994, 1995, 1999, 2003, 2004, 2008, 1999, 2004, 2003, 1994, 1999, 1998, 1998, 1999, 2003, 1993, 1994, 1998, 2003, 2008, 2007, 2007, 2008, 2044, 1998, 2003, 2002, 2002, 2003, 2007, 1993, 1998, 1997, 1997, 1998, 2002, 1984, 1993, 1997, 2007, 2044, 2043, 2043, 2044, 2048, 2002, 2007, 2006, 2006, 2007, 2043, 1997, 2002, 2001, 2001, 2002, 2006, 1984, 1997, 1988, 1988, 1997, 2001, 1983, 1984, 1988, 2043, 2048, 2047, 2047, 2048, 2052, 2006, 2043, 2042, 2042, 2043, 2047, 1983, 1988, 1987, 2005, 2006, 2042, 2001, 2006, 2005, 1982, 1983, 1987, 1988, 2001, 1992, 1992, 2001, 2005, 1987, 1988, 1992, 1982, 1987, 1986, 1981, 1982, 1986, 1987, 1992, 1991, 1986, 1987, 1991, 1992, 2005, 915, 1991, 1992, 915, 915, 2005, 2041, 2005, 2042, 2041, 1981, 1986, 1985, 1690, 1981, 1985, 1986, 1991, 1990, 1985, 1986, 1990, 1991, 915, 913, 1990, 1991, 913, 913, 915, 914, 915, 2041, 914, 1690, 1985, 1694, 1689, 1690, 1694, 1985, 1990, 1989, 1694, 1985, 1989, 1990, 913, 911, 1989, 1990, 911, 911, 913, 912, 913, 914, 912, 1689, 1694, 1693, 1688, 1689, 1693, 1694, 1989, 1698, 1693, 1694, 1698, 1989, 911, 909, 1698, 1989, 909, 909, 911, 910, 911, 912, 910, 1688, 1693, 1692, 1687, 1688, 1692, 1693, 1698, 1697, 1692, 1693, 1697, 1698, 909, 751, 1697, 1698, 751, 751, 909, 908, 909, 910, 908, 1687, 1692, 1691, 1678, 1687, 1691, 1692, 1697, 1696, 1691, 1692, 1696, 1697, 751, 749, 1696, 1697, 749, 749, 751, 750, 751, 908, 750, 1678, 1691, 1682, 1677, 1678, 1682, 1691, 1696, 1695, 1682, 1691, 1695, 1696, 749, 747, 1695, 1696, 747, 747, 749, 748, 749, 750, 748, 1677, 1682, 1681, 1676, 1677, 1681, 1682, 1695, 1686, 1681, 1682, 1686, 1695, 747, 745, 1686, 1695, 745, 745, 747, 746, 747, 748, 746, 1676, 1681, 1680, 1675, 1676, 1680, 1681, 1686, 1685, 1680, 1681, 1685, 1686, 745, 571, 1685, 1686, 571, 571, 745, 744, 745, 746, 744, 1675, 1680, 1679, 1666, 1675, 1679, 1680, 1685, 1684, 1679, 1680, 1684, 1685, 571, 569, 1684, 1685, 569, 569, 571, 570, 571, 744, 570, 1666, 1679, 1670, 1665, 1666, 1670, 1679, 1684, 1683, 1670, 1679, 1683, 1684, 569, 567, 1683, 1684, 567, 567, 569, 568, 569, 570, 568, 1665, 1670, 1669, 1664, 1665, 1669, 1670, 1683, 1674, 1669, 1670, 1674, 1683, 567, 565, 1674, 1683, 565, 565, 567, 566, 567, 568, 566, 1664, 1669, 1668, 1663, 1664, 1668, 1669, 1674, 1673, 1668, 1669, 1673, 1674, 565, 389, 1673, 1674, 389, 389, 565, 564, 565, 566, 564, 1663, 1668, 1667, 1651, 1663, 1667, 1668, 1673, 1672, 1667, 1668, 1672, 1673, 389, 387, 1672, 1673, 387, 387, 389, 388, 389, 564, 388, 1651, 1667, 1655, 1650, 1651, 1655, 1650, 1655, 1654, 1655, 1667, 1671, 1667, 1672, 1671, 1654, 1655, 1659, 1655, 1671, 1659, 1654, 1659, 1658, 1671, 1672, 385, 1672, 387, 385, 1659, 1671, 383, 1671, 385, 383, 1658, 1659, 380, 1659, 383, 380, 1658, 380, 1662, 385, 387, 386, 387, 388, 386, 383, 385, 384, 385, 386, 384, 380, 383, 381, 383, 384, 381, 1662, 380, 382, 380, 381, 382, 1662, 382, 1701, 1701, 382, 391, 1701, 391, 1704, 382, 381, 390, 382, 390, 391, 381, 384, 392, 381, 392, 390, 384, 393, 392, 384, 386, 393, 1704, 391, 396, 1704, 396, 1707, 391, 390, 395, 391, 395, 396, 390, 392, 397, 390, 397, 395, 392, 398, 397, 392, 393, 398, 1707, 396, 199, 1707, 199, 197, 396, 395, 361, 396, 361, 199, 395, 397, 363, 395, 363, 361, 397, 365, 363, 397, 398, 365, 197, 199, 198, 197, 198, 196, 199, 361, 360, 199, 360, 198, 361, 363, 362, 361, 362, 360, 363, 364, 362, 363, 365, 364, 196, 198, 203, 196, 203, 202, 198, 360, 368, 198, 368, 203, 360, 362, 369, 360, 369, 368, 362, 370, 369, 362, 364, 370, 202, 203, 207, 202, 207, 206, 203, 368, 372, 203, 372, 207, 368, 369, 373, 368, 373, 372, 369, 374, 373, 369, 370, 374, 206, 207, 211, 206, 211, 210, 207, 372, 376, 207, 376, 211, 372, 373, 377, 372, 377, 376, 373, 378, 377, 373, 374, 378, 210, 211, 215, 210, 215, 214, 211, 376, 400, 211, 400, 215, 376, 377, 401, 376, 401, 400, 377, 402, 401, 377, 378, 402, 214, 215, 219, 214, 219, 218, 215, 400, 404, 215, 404, 219, 400, 401, 405, 400, 405, 404, 401, 406, 405, 401, 402, 406, 218, 219, 223, 218, 223, 222, 219, 404, 408, 219, 408, 223, 404, 405, 409, 404, 409, 408, 405, 410, 409, 405, 406, 410, 222, 223, 227, 222, 227, 226, 223, 408, 412, 223, 412, 227, 408, 409, 413, 408, 413, 412, 409, 414, 413, 409, 410, 414, 226, 227, 231, 226, 231, 230, 227, 412, 416, 227, 416, 231, 412, 413, 417, 412, 417, 416, 413, 418, 417, 413, 414, 418, 416, 417, 421, 231, 416, 420, 416, 421, 420, 417, 422, 421, 417, 418, 422, 231, 420, 235, 230, 231, 235, 420, 421, 425, 230, 235, 234, 229, 230, 234, 229, 234, 233, 235, 420, 424, 420, 425, 424, 234, 235, 239, 235, 424, 239, 233, 234, 238, 234, 239, 238, 233, 238, 237, 232, 233, 237, 238, 239, 243, 232, 237, 236, 29, 232, 236, 237, 238, 242, 238, 243, 242, 236, 237, 241, 237, 242, 241, 29, 236, 34, 28, 29, 34, 236, 241, 240, 34, 236, 240, 28, 34, 33, 27, 28, 33, 27, 33, 32, 33, 34, 39, 34, 240, 39, 32, 33, 38, 33, 39, 38, 32, 38, 37, 39, 240, 244, 38, 39, 44, 39, 244, 44, 37, 38, 43, 38, 44, 43, 37, 43, 42, 35, 37, 42, 240, 245, 244, 240, 241, 245, 44, 244, 248, 43, 44, 49, 44, 248, 49, 244, 249, 248, 244, 245, 249, 241, 246, 245, 241, 242, 246, 245, 250, 249, 245, 246, 250, 242, 247, 246, 242, 243, 247, 246, 251, 250, 246, 247, 251, 249, 250, 254, 250, 251, 255, 250, 255, 254, 249, 254, 253, 248, 249, 253, 248, 253, 252, 49, 248, 252, 253, 254, 258, 254, 255, 259, 254, 259, 258, 253, 258, 257, 252, 253, 257, 258, 259, 263, 49, 252, 54, 257, 258, 262, 258, 263, 262, 252, 257, 256, 54, 252, 256, 257, 262, 261, 256, 257, 261, 48, 49, 54, 43, 49, 48, 42, 43, 48, 48, 54, 53, 42, 48, 47, 47, 48, 53, 54, 256, 59, 53, 54, 59, 59, 256, 260, 256, 261, 260, 53, 59, 58, 40, 42, 47, 35, 42, 40, 47, 53, 52, 52, 53, 58, 40, 47, 45, 45, 47, 52, 36, 35, 40, 31, 35, 36, 1351, 31, 36, 36, 40, 41, 41, 40, 45, 1351, 36, 147, 147, 36, 41, 1350, 1351, 147, 1350, 147, 145, 1349, 1350, 145, 1349, 145, 143, 145, 147, 146, 147, 41, 146, 143, 145, 144, 145, 146, 144, 143, 144, 141, 146, 41, 46, 41, 45, 46, 144, 146, 151, 146, 46, 151, 141, 144, 150, 144, 151, 150, 141, 150, 148, 46, 45, 50, 45, 52, 50, 151, 46, 51, 46, 50, 51, 150, 151, 155, 151, 51, 155, 148, 150, 154, 150, 155, 154, 148, 154, 152, 50, 52, 57, 52, 58, 57, 51, 50, 55, 50, 57, 55, 152, 154, 158, 152, 158, 156, 154, 159, 158, 154, 155, 159, 155, 51, 56, 51, 55, 56, 155, 56, 159, 156, 158, 162, 156, 162, 160, 158, 159, 163, 158, 163, 162, 159, 56, 61, 159, 61, 163, 56, 60, 61, 56, 55, 60, 160, 162, 166, 160, 166, 164, 162, 163, 167, 162, 167, 166, 163, 61, 66, 163, 66, 167, 61, 65, 66, 61, 60, 65, 164, 166, 170, 164, 170, 168, 166, 167, 171, 166, 171, 170, 167, 66, 71, 167, 71, 171, 66, 70, 71, 66, 65, 70, 168, 170, 174, 168, 174, 172, 170, 171, 175, 170, 175, 174, 171, 71, 76, 171, 76, 175, 71, 75, 76, 71, 70, 75, 172, 174, 178, 172, 178, 176, 174, 175, 179, 174, 179, 178, 175, 76, 81, 175, 81, 179, 76, 80, 81, 76, 75, 80, 176, 178, 182, 176, 182, 180, 178, 179, 183, 178, 183, 182, 179, 81, 86, 179, 86, 183, 81, 85, 86, 81, 80, 85, 180, 182, 186, 180, 186, 184, 182, 183, 187, 182, 187, 186, 183, 86, 91, 183, 91, 187, 86, 90, 91, 86, 85, 90, 184, 186, 190, 184, 190, 188, 186, 187, 191, 186, 191, 190, 187, 91, 96, 187, 96, 191, 91, 95, 96, 91, 90, 95, 188, 190, 1469, 188, 1469, 1468, 190, 191, 1470, 190, 1470, 1469, 191, 96, 101, 191, 101, 1470, 96, 100, 101, 96, 95, 100, 1468, 1469, 1472, 1468, 1472, 1471, 1469, 1470, 1473, 1469, 1473, 1472, 1470, 101, 106, 1470, 106, 1473, 101, 105, 106, 101, 100, 105, 1471, 1472, 1475, 1471, 1475, 1474, 1472, 1473, 1476, 1472, 1476, 1475, 1473, 106, 111, 1473, 111, 1476, 106, 110, 111, 106, 105, 110, 1474, 1475, 1478, 1474, 1478, 1477, 1475, 1476, 1479, 1475, 1479, 1478, 1476, 111, 116, 1476, 116, 1479, 111, 115, 116, 111, 110, 115, 1477, 1478, 1513, 1477, 1513, 1512, 1478, 1479, 1514, 1478, 1514, 1513, 1479, 116, 121, 1479, 121, 1514, 116, 120, 121, 116, 115, 120, 1512, 1513, 1516, 1512, 1516, 1515, 1513, 1514, 1517, 1513, 1517, 1516, 1514, 121, 126, 1514, 126, 1517, 121, 125, 126, 121, 120, 125, 1515, 1516, 1519, 1515, 1519, 1518, 1516, 1517, 1520, 1516, 1520, 1519, 1517, 126, 131, 1517, 131, 1520, 126, 130, 131, 126, 125, 130, 1518, 1519, 1522, 1518, 1522, 1521, 1519, 1520, 1523, 1519, 1523, 1522, 1520, 131, 136, 1520, 136, 1523, 131, 135, 136, 131, 130, 135, 1521, 1522, 1557, 1521, 1557, 1556, 1522, 1523, 1558, 1522, 1558, 1557, 1523, 136, 1559, 1523, 1559, 1558, 136, 1572, 1559, 136, 135, 1572, 1556, 1557, 1561, 1556, 1561, 1560, 1560, 1561, 1565, 1557, 1562, 1561, 1557, 1558, 1562, 1561, 1566, 1565, 1561, 1562, 1566, 1565, 1566, 1570, 1566, 1571, 1570, 1566, 1567, 1571, 1562, 1567, 1566, 1567, 1581, 1571, 1558, 1563, 1562, 1562, 1563, 1567, 1558, 1559, 1563, 1567, 1578, 1581, 1563, 1578, 1567, 1578, 1582, 1581, 1559, 1575, 1563, 1563, 1575, 1578, 1559, 1572, 1575, 1578, 1579, 1582, 1575, 1579, 1578, 1579, 1583, 1582, 1572, 1576, 1575, 1575, 1576, 1579, 1579, 1580, 1583, 1576, 1580, 1579, 1580, 340, 1583, 1572, 1573, 1576, 135, 1573, 1572, 1576, 1577, 1580, 1573, 1577, 1576, 1580, 335, 340, 1577, 335, 1580, 335, 339, 340, 135, 137, 1573, 130, 137, 135, 1573, 1574, 1577, 137, 1574, 1573, 1577, 330, 335, 1574, 330, 1577, 335, 334, 339, 330, 334, 335, 130, 132, 137, 125, 132, 130, 137, 138, 1574, 132, 138, 137, 1574, 325, 330, 138, 325, 1574, 330, 329, 334, 325, 329, 330, 125, 127, 132, 120, 127, 125, 132, 133, 138, 127, 133, 132, 138, 139, 325, 133, 139, 138, 325, 324, 329, 139, 324, 325, 120, 122, 127, 115, 122, 120, 127, 128, 133, 122, 128, 127, 133, 134, 139, 128, 134, 133, 139, 320, 324, 134, 320, 139, 115, 117, 122, 110, 117, 115, 122, 123, 128, 117, 123, 122, 128, 129, 134, 123, 129, 128, 134, 316, 320, 129, 316, 134, 110, 112, 117, 105, 112, 110, 117, 118, 123, 112, 118, 117, 123, 124, 129, 118, 124, 123, 129, 312, 316, 124, 312, 129, 105, 107, 112, 100, 107, 105, 112, 113, 118, 107, 113, 112, 118, 119, 124, 113, 119, 118, 124, 308, 312, 119, 308, 124, 100, 102, 107, 95, 102, 100, 107, 108, 113, 102, 108, 107, 113, 114, 119, 108, 114, 113, 119, 304, 308, 114, 304, 119, 95, 97, 102, 90, 97, 95, 102, 103, 108, 97, 103, 102, 108, 109, 114, 103, 109, 108, 114, 300, 304, 109, 300, 114, 90, 92, 97, 85, 92, 90, 97, 98, 103, 92, 98, 97, 103, 104, 109, 98, 104, 103, 109, 296, 300, 104, 296, 109, 85, 87, 92, 80, 87, 85, 92, 93, 98, 87, 93, 92, 98, 99, 104, 93, 99, 98, 104, 292, 296, 99, 292, 104, 80, 82, 87, 75, 82, 80, 87, 88, 93, 82, 88, 87, 93, 94, 99, 88, 94, 93, 99, 288, 292, 94, 288, 99, 75, 77, 82, 70, 77, 75, 82, 83, 88, 77, 83, 82, 88, 89, 94, 83, 89, 88, 94, 284, 288, 89, 284, 94, 70, 72, 77, 65, 72, 70, 77, 78, 83, 72, 78, 77, 83, 84, 89, 78, 84, 83, 89, 280, 284, 84, 280, 89, 65, 67, 72, 60, 67, 65, 72, 73, 78, 67, 73, 72, 78, 79, 84, 73, 79, 78, 84, 276, 280, 79, 276, 84, 60, 62, 67, 55, 62, 60, 55, 57, 62, 62, 68, 67, 67, 68, 73, 57, 63, 62, 62, 63, 68, 57, 58, 63, 73, 74, 79, 68, 74, 73, 74, 272, 79, 79, 272, 276, 68, 69, 74, 63, 69, 68, 58, 64, 63, 63, 64, 69, 58, 59, 64, 59, 260, 64, 74, 268, 272, 69, 268, 74, 64, 264, 69, 69, 264, 268, 64, 260, 264, 260, 265, 264, 260, 261, 265, 264, 269, 268, 264, 265, 269, 268, 273, 272, 268, 269, 273, 272, 273, 277, 272, 277, 276, 261, 266, 265, 261, 262, 266, 265, 270, 269, 265, 266, 270, 269, 274, 273, 269, 270, 274, 273, 278, 277, 273, 274, 278, 262, 267, 266, 262, 263, 267, 266, 271, 270, 266, 267, 271, 270, 275, 274, 270, 271, 275, 274, 279, 278, 274, 275, 279, 278, 279, 283, 267, 456, 271, 271, 460, 275, 271, 456, 460, 275, 464, 279, 275, 460, 464, 279, 464, 468, 279, 468, 283, 267, 452, 456, 263, 452, 267, 456, 461, 460, 263, 448, 452, 259, 448, 263, 452, 457, 456, 456, 457, 461, 448, 453, 452, 452, 453, 457, 259, 444, 448, 255, 444, 259, 448, 449, 453, 444, 449, 448, 255, 440, 444, 251, 440, 255, 444, 445, 449, 440, 445, 444, 251, 436, 440, 247, 436, 251, 440, 441, 445, 436, 441, 440, 247, 432, 436, 243, 432, 247, 436, 437, 441, 432, 437, 436, 243, 428, 432, 239, 428, 243, 239, 424, 428, 428, 433, 432, 432, 433, 437, 424, 429, 428, 428, 429, 433, 424, 425, 429, 433, 438, 437, 429, 434, 433, 433, 434, 438, 425, 430, 429, 429, 430, 434, 425, 426, 430, 421, 426, 425, 421, 422, 426, 437, 438, 442, 437, 442, 441, 441, 442, 446, 441, 446, 445, 438, 443, 442, 442, 447, 446, 442, 443, 447, 445, 446, 450, 445, 450, 449, 446, 447, 451, 446, 451, 450, 438, 439, 443, 434, 439, 438, 449, 450, 454, 449, 454, 453, 450, 451, 455, 450, 455, 454, 434, 435, 439, 430, 435, 434, 453, 454, 458, 453, 458, 457, 454, 455, 459, 454, 459, 458, 430, 431, 435, 426, 431, 430, 457, 458, 462, 457, 462, 461, 458, 459, 463, 458, 463, 462, 426, 427, 431, 422, 427, 426, 422, 423, 427, 418, 423, 422, 427, 608, 431, 418, 419, 423, 414, 419, 418, 423, 604, 427, 427, 604, 608, 419, 600, 423, 423, 600, 604, 414, 415, 419, 410, 415, 414, 419, 596, 600, 415, 596, 419, 410, 411, 415, 406, 411, 410, 415, 592, 596, 411, 592, 415, 406, 407, 411, 402, 407, 406, 411, 588, 592, 407, 588, 411, 402, 403, 407, 378, 403, 402, 407, 584, 588, 403, 584, 407, 378, 379, 403, 374, 379, 378, 403, 580, 584, 379, 580, 403, 374, 375, 379, 370, 375, 374, 379, 560, 580, 375, 560, 379, 370, 371, 375, 364, 371, 370, 375, 556, 560, 371, 556, 375, 364, 366, 371, 365, 366, 364, 371, 552, 556, 366, 552, 371, 365, 367, 366, 398, 367, 365, 366, 544, 552, 367, 544, 366, 398, 399, 367, 393, 399, 398, 367, 545, 544, 399, 545, 367, 393, 394, 399, 386, 394, 393, 386, 388, 394, 394, 576, 399, 399, 576, 545, 388, 572, 394, 394, 572, 576, 388, 564, 572, 564, 573, 572, 564, 566, 573, 572, 577, 576, 572, 573, 577, 576, 547, 545, 576, 577, 547, 545, 547, 546, 545, 546, 544, 566, 574, 573, 566, 568, 574, 573, 578, 577, 573, 574, 578, 577, 549, 547, 577, 578, 549, 547, 548, 546, 547, 549, 548, 568, 575, 574, 568, 570, 575, 574, 579, 578, 574, 575, 579, 578, 551, 549, 578, 579, 551, 549, 550, 548, 549, 551, 550, 570, 752, 575, 570, 744, 752, 575, 756, 579, 575, 752, 756, 579, 725, 551, 579, 756, 725, 551, 724, 550, 551, 725, 724, 744, 753, 752, 744, 746, 753, 752, 757, 756, 752, 753, 757, 756, 727, 725, 756, 757, 727, 725, 726, 724, 725, 727, 726, 746, 754, 753, 746, 748, 754, 753, 758, 757, 753, 754, 758, 757, 729, 727, 757, 758, 729, 727, 728, 726, 727, 729, 728, 748, 755, 754, 748, 750, 755, 754, 759, 758, 754, 755, 759, 758, 731, 729, 758, 759, 731, 729, 730, 728, 729, 731, 730, 750, 916, 755, 750, 908, 916, 755, 920, 759, 755, 916, 920, 759, 889, 731, 759, 920, 889, 731, 888, 730, 731, 889, 888, 908, 917, 916, 908, 910, 917, 916, 921, 920, 916, 917, 921, 920, 891, 889, 920, 921, 891, 889, 890, 888, 889, 891, 890, 910, 918, 917, 910, 912, 918, 917, 922, 921, 917, 918, 922, 921, 893, 891, 921, 922, 893, 891, 892, 890, 891, 893, 892, 912, 919, 918, 912, 914, 919, 918, 923, 922, 918, 919, 923, 922, 895, 893, 922, 923, 895, 893, 894, 892, 893, 895, 894, 914, 2045, 919, 914, 2041, 2045, 919, 2049, 923, 919, 2045, 2049, 923, 1037, 895, 923, 2049, 1037, 895, 1036, 894, 895, 1037, 1036, 2041, 2046, 2045, 2041, 2042, 2046, 2042, 2047, 2046, 2045, 2046, 2050, 2045, 2050, 2049, 2046, 2047, 2051, 2046, 2051, 2050, 2047, 2052, 2051, 2051, 2052, 1043, 2051, 1043, 1041, 2050, 2051, 1041, 1041, 1043, 1042, 2049, 2050, 1039, 2050, 1041, 1039, 2049, 1039, 1037, 1041, 1042, 1040, 1039, 1041, 1040, 1040, 1042, 1047, 1037, 1039, 1038, 1039, 1040, 1038, 1037, 1038, 1036, 1040, 1047, 1046, 1038, 1040, 1046, 1046, 1047, 1051, 1036, 1038, 1045, 1038, 1046, 1045, 1046, 1051, 1050, 1045, 1046, 1050, 1050, 1051, 1055, 1036, 1045, 1044, 894, 1036, 1044, 1045, 1050, 1049, 1044, 1045, 1049, 1050, 1055, 1054, 1049, 1050, 1054, 1054, 1055, 1059, 894, 1044, 899, 892, 894, 899, 1044, 1049, 1048, 899, 1044, 1048, 1049, 1054, 1053, 1048, 1049, 1053, 1054, 1059, 1058, 1053, 1054, 1058, 1058, 1059, 1063, 892, 899, 898, 890, 892, 898, 899, 1048, 903, 898, 899, 903, 1048, 1053, 1052, 903, 1048, 1052, 1053, 1058, 1057, 1052, 1053, 1057, 1058, 1063, 1062, 1057, 1058, 1062, 1062, 1063, 1067, 1062, 1067, 1066, 1066, 1067, 1071, 1057, 1062, 1061, 1061, 1062, 1066, 1052, 1057, 1056, 1056, 1057, 1061, 907, 1052, 1056, 903, 1052, 907, 1066, 1071, 1070, 1070, 1071, 1075, 1061, 1066, 1065, 1065, 1066, 1070, 1056, 1061, 1060, 1060, 1061, 1065, 927, 1056, 1060, 907, 1056, 927, 1070, 1075, 1074, 1074, 1075, 1079, 1065, 1070, 1069, 1069, 1070, 1074, 1060, 1065, 1064, 1064, 1065, 1069, 931, 1060, 1064, 927, 1060, 931, 1074, 1079, 1078, 1078, 1079, 1083, 1069, 1074, 1073, 1073, 1074, 1078, 1064, 1069, 1068, 1068, 1069, 1073, 935, 1064, 1068, 931, 1064, 935, 1078, 1083, 1082, 1082, 1083, 1087, 1073, 1078, 1077, 1077, 1078, 1082, 1068, 1073, 1072, 1072, 1073, 1077, 939, 1068, 1072, 935, 1068, 939, 1082, 1087, 1086, 1086, 1087, 1091, 1077, 1082, 1081, 1081, 1082, 1086, 1072, 1077, 1076, 1076, 1077, 1081, 943, 1072, 1076, 939, 1072, 943, 1086, 1091, 1090, 1090, 1091, 1095, 1081, 1086, 1085, 1085, 1086, 1090, 1076, 1081, 1080, 1080, 1081, 1085, 947, 1076, 1080, 943, 1076, 947, 1090, 1095, 1094, 1094, 1095, 1099, 1085, 1090, 1089, 1089, 1090, 1094, 1080, 1085, 1084, 1084, 1085, 1089, 951, 1080, 1084, 947, 1080, 951, 1094, 1099, 1098, 1098, 1099, 1103, 1089, 1094, 1093, 1093, 1094, 1098, 1084, 1089, 1088, 1088, 1089, 1093, 955, 1084, 1088, 951, 1084, 955, 1098, 1103, 1102, 1102, 1103, 1107, 1093, 1098, 1097, 1097, 1098, 1102, 1088, 1093, 1092, 1092, 1093, 1097, 959, 1088, 1092, 955, 1088, 959, 1102, 1107, 1106, 1106, 1107, 1111, 1097, 1102, 1101, 1101, 1102, 1106, 1092, 1097, 1096, 1096, 1097, 1101, 963, 1092, 1096, 959, 1092, 963, 1106, 1111, 1110, 1110, 1111, 1115, 1101, 1106, 1105, 1105, 1106, 1110, 1096, 1101, 1100, 1100, 1101, 1105, 967, 1096, 1100, 963, 1096, 967, 1110, 1115, 1114, 1114, 1115, 1119, 1105, 1110, 1109, 1109, 1110, 1114, 1100, 1105, 1104, 1104, 1105, 1109, 971, 1100, 1104, 967, 1100, 971, 1114, 1119, 1118, 1118, 1119, 1123, 1109, 1114, 1113, 1113, 1114, 1118, 1104, 1109, 1108, 1108, 1109, 1113, 975, 1104, 1108, 971, 1104, 975, 1118, 1123, 1122, 1122, 1123, 1127, 1113, 1118, 1117, 1117, 1118, 1122, 1108, 1113, 1112, 1112, 1113, 1117, 979, 1108, 1112, 975, 1108, 979, 1122, 1127, 1126, 1126, 1127, 1131, 1117, 1122, 1121, 1121, 1122, 1126, 1112, 1117, 1116, 1116, 1117, 1121, 983, 1112, 1116, 979, 1112, 983, 1126, 1131, 1130, 1130, 1131, 1135, 1121, 1126, 1125, 1125, 1126, 1130, 1116, 1121, 1120, 1120, 1121, 1125, 987, 1116, 1120, 983, 1116, 987, 1130, 1135, 1134, 1134, 1135, 1139, 1125, 1130, 1129, 1129, 1130, 1134, 1120, 1125, 1124, 1124, 1125, 1129, 991, 1120, 1124, 987, 1120, 991, 1134, 1139, 1138, 1138, 1139, 1143, 1129, 1134, 1133, 1133, 1134, 1138, 1124, 1129, 1128, 1128, 1129, 1133, 995, 1124, 1128, 991, 1124, 995, 1138, 1143, 1142, 1142, 1143, 1147, 1133, 1138, 1137, 1137, 1138, 1142, 1128, 1133, 1132, 1132, 1133, 1137, 999, 1128, 1132, 995, 1128, 999, 1142, 1147, 1146, 1146, 1147, 1151, 1137, 1142, 1141, 1141, 1142, 1146, 1132, 1137, 1136, 1136, 1137, 1141, 1003, 1132, 1136, 999, 1132, 1003, 1146, 1151, 1150, 1150, 1151, 1155, 1141, 1146, 1145, 1145, 1146, 1150, 1136, 1141, 1140, 1140, 1141, 1145, 1007, 1136, 1140, 1003, 1136, 1007, 1150, 1155, 1154, 1154, 1155, 1159, 1154, 1159, 1158, 1149, 1150, 1154, 1145, 1150, 1149, 1153, 1154, 1158, 1149, 1154, 1153, 1153, 1158, 1157, 1144, 1145, 1149, 1140, 1145, 1144, 1148, 1149, 1153, 1144, 1149, 1148, 1152, 1153, 1157, 1148, 1153, 1152, 1152, 1157, 1156, 1011, 1140, 1144, 1007, 1140, 1011, 1015, 1144, 1148, 1011, 1144, 1015, 1019, 1148, 1152, 1015, 1148, 1019, 1023, 1152, 1156, 1019, 1152, 1023, 1023, 1156, 1027, 1022, 1023, 1027, 1022, 1027, 1026, 1018, 1019, 1023, 1018, 1023, 1022, 1014, 1015, 1019, 1014, 1019, 1018, 1010, 1015, 1014, 1010, 1011, 1015, 1021, 1022, 1026, 1021, 1026, 1025, 1017, 1018, 1022, 1017, 1022, 1021, 1013, 1014, 1018, 1013, 1018, 1017, 1009, 1010, 1014, 1009, 1014, 1013, 1020, 1021, 1025, 1020, 1025, 1024, 1016, 1017, 1021, 1016, 1021, 1020, 1012, 1013, 1017, 1012, 1017, 1016, 1008, 1009, 1013, 1008, 1013, 1012, 859, 1020, 1024, 859, 1024, 863, 855, 1016, 1020, 855, 1020, 859, 851, 1012, 1016, 851, 1016, 855, 847, 1008, 1012, 847, 1012, 851, 858, 859, 863, 858, 863, 862, 854, 855, 859, 854, 859, 858, 850, 851, 855, 850, 855, 854, 846, 847, 851, 846, 851, 850, 857, 858, 862, 857, 862, 861, 853, 854, 858, 853, 858, 857, 849, 850, 854, 849, 854, 853, 845, 846, 850, 845, 850, 849, 841, 846, 845, 852, 853, 857, 848, 849, 853, 848, 853, 852, 844, 845, 849, 844, 849, 848, 840, 845, 844, 840, 841, 845, 852, 857, 856, 856, 857, 861, 671, 848, 852, 675, 852, 856, 671, 852, 675, 856, 861, 860, 860, 861, 865, 675, 856, 679, 679, 856, 860, 667, 848, 671, 667, 844, 848, 860, 865, 864, 864, 865, 869, 679, 860, 683, 683, 860, 864, 663, 844, 667, 663, 840, 844, 864, 869, 868, 868, 869, 873, 683, 864, 687, 687, 864, 868, 868, 873, 872, 872, 873, 877, 687, 868, 691, 691, 868, 872, 682, 683, 687, 686, 687, 691, 682, 687, 686, 678, 683, 682, 678, 679, 683, 674, 679, 678, 674, 675, 679, 677, 678, 682, 670, 675, 674, 670, 671, 675, 673, 674, 678, 673, 678, 677, 669, 670, 674, 669, 674, 673, 666, 671, 670, 666, 667, 671, 665, 670, 669, 665, 666, 670, 662, 667, 666, 662, 663, 667, 661, 666, 665, 661, 662, 666, 664, 665, 669, 660, 661, 665, 660, 665, 664, 664, 669, 668, 668, 669, 673, 483, 660, 664, 487, 664, 668, 483, 664, 487, 668, 673, 672, 672, 673, 677, 487, 668, 491, 491, 668, 672, 482, 483, 487, 486, 487, 491, 482, 487, 486, 491, 672, 495, 672, 677, 676, 495, 672, 676, 676, 677, 681, 677, 682, 681, 681, 682, 686, 486, 491, 490, 490, 491, 495, 676, 681, 680, 681, 686, 685, 680, 681, 685, 495, 676, 499, 499, 676, 680, 490, 495, 494, 494, 495, 499, 685, 686, 690, 686, 691, 690, 680, 685, 684, 499, 680, 503, 503, 680, 684, 494, 499, 498, 498, 499, 503, 690, 691, 695, 691, 872, 695, 685, 690, 689, 684, 685, 689, 690, 695, 694, 689, 690, 694, 695, 872, 876, 872, 877, 876, 694, 695, 699, 695, 876, 699, 876, 877, 881, 877, 882, 881, 881, 882, 886, 876, 881, 880, 699, 876, 880, 881, 886, 885, 880, 881, 885, 886, 1712, 1711, 886, 1711, 1710, 885, 886, 1710, 1710, 1711, 1716, 1710, 1716, 1715, 1715, 1716, 1720, 885, 1710, 1709, 1709, 1710, 1715, 880, 885, 884, 884, 885, 1709, 703, 880, 884, 699, 880, 703, 1715, 1720, 1719, 1719, 1720, 1724, 1709, 1715, 1714, 1714, 1715, 1719, 884, 1709, 1708, 1708, 1709, 1714, 707, 884, 1708, 703, 884, 707, 1719, 1724, 1723, 1723, 1724, 1776, 1714, 1719, 1718, 1718, 1719, 1723, 1708, 1714, 1713, 1713, 1714, 1718, 711, 1708, 1713, 707, 1708, 711, 1723, 1776, 1775, 1775, 1776, 1780, 1718, 1723, 1722, 1722, 1723, 1775, 1713, 1718, 1717, 1717, 1718, 1722, 715, 1713, 1717, 711, 1713, 715, 1775, 1780, 1779, 1779, 1780, 1784, 1722, 1775, 1774, 1774, 1775, 1779, 1717, 1722, 1721, 1721, 1722, 1774, 719, 1717, 1721, 715, 1717, 719, 1779, 1784, 1783, 1783, 1784, 1788, 1774, 1779, 1778, 1778, 1779, 1783, 1721, 1774, 1773, 1773, 1774, 1778, 723, 1721, 1773, 719, 1721, 723, 1783, 1788, 1787, 1787, 1788, 1840, 1778, 1783, 1782, 1782, 1783, 1787, 1773, 1778, 1777, 1777, 1778, 1782, 1760, 1773, 1777, 723, 1773, 1760, 1787, 1840, 1839, 1839, 1840, 1844, 1782, 1787, 1786, 1786, 1787, 1839, 1777, 1782, 1781, 1781, 1782, 1786, 1764, 1777, 1781, 1760, 1777, 1764, 1839, 1844, 1843, 1843, 1844, 1848, 1786, 1839, 1838, 1838, 1839, 1843, 1781, 1786, 1785, 1785, 1786, 1838, 1768, 1781, 1785, 1764, 1781, 1768, 1843, 1848, 1847, 1847, 1848, 1852, 1838, 1843, 1842, 1842, 1843, 1847, 1785, 1838, 1837, 1837, 1838, 1842, 1772, 1785, 1837, 1768, 1785, 1772, 1847, 1852, 1851, 1851, 1852, 1904, 1842, 1847, 1846, 1846, 1847, 1851, 1837, 1842, 1841, 1841, 1842, 1846, 1824, 1837, 1841, 1772, 1837, 1824, 1851, 1904, 1903, 1903, 1904, 1908, 1846, 1851, 1850, 1850, 1851, 1903, 1841, 1846, 1845, 1845, 1846, 1850, 1828, 1841, 1845, 1824, 1841, 1828, 1903, 1908, 1907, 1907, 1908, 1912, 1850, 1903, 1902, 1902, 1903, 1907, 1845, 1850, 1849, 1849, 1850, 1902, 1832, 1845, 1849, 1828, 1845, 1832, 1907, 1912, 1911, 1911, 1912, 1916, 1911, 1916, 1915, 1906, 1907, 1911, 1902, 1907, 1906, 1910, 1911, 1915, 1906, 1911, 1910, 1910, 1915, 1914, 1901, 1902, 1906, 1849, 1902, 1901, 1905, 1906, 1910, 1901, 1906, 1905, 1909, 1910, 1914, 1905, 1910, 1909, 1909, 1914, 1913, 1836, 1849, 1901, 1832, 1849, 1836, 1888, 1901, 1905, 1836, 1901, 1888, 1892, 1905, 1909, 1888, 1905, 1892, 1896, 1909, 1913, 1892, 1909, 1896, 1896, 1913, 1900, 1895, 1896, 1900, 1895, 1900, 1899, 1891, 1892, 1896, 1891, 1896, 1895, 1887, 1888, 1892, 1887, 1892, 1891, 1835, 1888, 1887, 1835, 1836, 1888, 1894, 1895, 1899, 1894, 1899, 1898, 1890, 1891, 1895, 1890, 1895, 1894, 1886, 1887, 1891, 1886, 1891, 1890, 1834, 1835, 1887, 1834, 1887, 1886, 1893, 1894, 1898, 1893, 1898, 1897, 1889, 1890, 1894, 1889, 1894, 1893, 1885, 1886, 1890, 1885, 1890, 1889, 1833, 1834, 1886, 1833, 1886, 1885, 1880, 1893, 1897, 1880, 1897, 1884, 1876, 1889, 1893, 1876, 1893, 1880, 1872, 1885, 1889, 1872, 1889, 1876, 1820, 1833, 1885, 1820, 1885, 1872, 1879, 1880, 1884, 1879, 1884, 1883, 1875, 1876, 1880, 1875, 1880, 1879, 1871, 1872, 1876, 1871, 1876, 1875, 1819, 1820, 1872, 1819, 1872, 1871, 1878, 1879, 1883, 1878, 1883, 1882, 1874, 1875, 1879, 1874, 1879, 1878, 1870, 1871, 1875, 1870, 1875, 1874, 1818, 1819, 1871, 1818, 1871, 1870, 1877, 1878, 1882, 1877, 1882, 1881, 1873, 1874, 1878, 1873, 1878, 1877, 1869, 1870, 1874, 1869, 1874, 1873, 1817, 1818, 1870, 1817, 1870, 1869, 1864, 1877, 1881, 1864, 1881, 1868, 1860, 1873, 1877, 1860, 1877, 1864, 1856, 1869, 1873, 1856, 1873, 1860, 1804, 1817, 1869, 1804, 1869, 1856, 1863, 1864, 1868, 1863, 1868, 1867, 1859, 1860, 1864, 1859, 1864, 1863, 1855, 1856, 1860, 1855, 1860, 1859, 1803, 1804, 1856, 1803, 1856, 1855, 1861, 1863, 1867, 1861, 1867, 1865, 1862, 1861, 1865, 1862, 1865, 1866, 1858, 1861, 1862, 1857, 1863, 1861, 1858, 1857, 1861, 1857, 1859, 1863, 1854, 1857, 1858, 1853, 1859, 1857, 1854, 1853, 1857, 1853, 1855, 1859, 1802, 1853, 1854, 1801, 1855, 1853, 1802, 1801, 1853, 1801, 1803, 1855, 1798, 1801, 1802, 1798, 1797, 1801, 1797, 1803, 1801, 1794, 1797, 1798, 1797, 1799, 1803, 1794, 1793, 1797, 1793, 1799, 1797, 1790, 1793, 1794, 1799, 1804, 1803, 1790, 1789, 1793, 1738, 1789, 1790, 1793, 1795, 1799, 1789, 1795, 1793, 1799, 1800, 1804, 1795, 1800, 1799, 1800, 1817, 1804, 1738, 1737, 1789, 1734, 1737, 1738, 1789, 1791, 1795, 1737, 1791, 1789, 1795, 1796, 1800, 1791, 1796, 1795, 1800, 1813, 1817, 1796, 1813, 1800, 1813, 1818, 1817, 1734, 1733, 1737, 1730, 1733, 1734, 1737, 1739, 1791, 1733, 1739, 1737, 1791, 1792, 1796, 1739, 1792, 1791, 1796, 1809, 1813, 1792, 1809, 1796, 1813, 1814, 1818, 1809, 1814, 1813, 1814, 1819, 1818, 1814, 1815, 1819, 1815, 1820, 1819, 1809, 1810, 1814, 1810, 1815, 1814, 1792, 1805, 1809, 1805, 1810, 1809, 1740, 1805, 1792, 1739, 1740, 1792, 1815, 1816, 1820, 1816, 1833, 1820, 1810, 1811, 1815, 1811, 1816, 1815, 1805, 1806, 1810, 1806, 1811, 1810, 1740, 1753, 1805, 1753, 1806, 1805, 1816, 1829, 1833, 1829, 1834, 1833, 1811, 1812, 1816, 1812, 1829, 1816, 1806, 1807, 1811, 1807, 1812, 1811, 1753, 1754, 1806, 1754, 1807, 1806, 1829, 1830, 1834, 1830, 1835, 1834, 1812, 1825, 1829, 1825, 1830, 1829, 1807, 1808, 1812, 1808, 1825, 1812, 1754, 1755, 1807, 1755, 1808, 1807, 1830, 1831, 1835, 1831, 1836, 1835, 1831, 1832, 1836, 1826, 1831, 1830, 1825, 1826, 1830, 1827, 1832, 1831, 1826, 1827, 1831, 1827, 1828, 1832, 1821, 1826, 1825, 1808, 1821, 1825, 1822, 1827, 1826, 1821, 1822, 1826, 1823, 1828, 1827, 1822, 1823, 1827, 1823, 1824, 1828, 1756, 1821, 1808, 1755, 1756, 1808, 1769, 1822, 1821, 1756, 1769, 1821, 1770, 1823, 1822, 1769, 1770, 1822, 1771, 1824, 1823, 1770, 1771, 1823, 1771, 1772, 1824, 1767, 1772, 1771, 1767, 1768, 1772, 1766, 1771, 1770, 1766, 1767, 1771, 1765, 1770, 1769, 1765, 1766, 1770, 1752, 1765, 1769, 1752, 1769, 1756, 1763, 1768, 1767, 1763, 1764, 1768, 1762, 1767, 1766, 1762, 1763, 1767, 1761, 1766, 1765, 1761, 1762, 1766, 1748, 1765, 1752, 1748, 1761, 1765, 1759, 1764, 1763, 1759, 1760, 1764, 1758, 1763, 1762, 1758, 1759, 1763, 1757, 1762, 1761, 1757, 1758, 1762, 1744, 1761, 1748, 1744, 1757, 1761, 722, 1760, 1759, 722, 723, 1760, 721, 1759, 1758, 721, 722, 1759, 720, 1758, 1757, 720, 721, 1758, 543, 1757, 1744, 543, 720, 1757, 718, 723, 722, 718, 719, 723, 717, 722, 721, 717, 718, 722, 716, 721, 720, 716, 717, 721, 539, 720, 543, 539, 716, 720, 714, 719, 718, 714, 715, 719, 713, 718, 717, 713, 714, 718, 712, 717, 716, 712, 713, 717, 535, 716, 539, 535, 712, 716, 710, 715, 714, 710, 711, 715, 709, 714, 713, 709, 710, 714, 708, 713, 712, 708, 709, 713, 531, 712, 535, 531, 708, 712, 706, 711, 710, 706, 707, 711, 705, 710, 709, 705, 706, 710, 704, 709, 708, 704, 705, 709, 527, 708, 531, 527, 704, 708, 702, 707, 706, 702, 703, 707, 701, 706, 705, 701, 702, 706, 700, 705, 704, 700, 701, 705, 523, 704, 527, 523, 700, 704, 698, 703, 702, 698, 699, 703, 694, 699, 698, 697, 698, 702, 697, 702, 701, 693, 694, 698, 693, 698, 697, 689, 694, 693, 696, 697, 701, 696, 701, 700, 692, 693, 697, 692, 697, 696, 688, 689, 693, 688, 693, 692, 684, 689, 688, 519, 696, 700, 519, 700, 523, 515, 692, 696, 515, 696, 519, 511, 688, 692, 511, 692, 515, 507, 684, 688, 507, 688, 511, 503, 684, 507, 502, 503, 507, 498, 503, 502, 506, 507, 511, 502, 507, 506, 510, 511, 515, 506, 511, 510, 510, 515, 514, 514, 515, 519, 505, 506, 510, 509, 510, 514, 505, 510, 509, 514, 519, 518, 518, 519, 523, 509, 514, 513, 513, 514, 518, 501, 506, 505, 501, 502, 506, 518, 523, 522, 522, 523, 527, 513, 518, 517, 517, 518, 522, 497, 502, 501, 497, 498, 502, 522, 527, 526, 526, 527, 531, 517, 522, 521, 521, 522, 526, 493, 498, 497, 493, 494, 498, 526, 531, 530, 530, 531, 535, 521, 526, 525, 525, 526, 530, 489, 494, 493, 489, 490, 494, 530, 535, 534, 534, 535, 539, 525, 530, 529, 529, 530, 534, 485, 490, 489, 485, 486, 490, 534, 539, 538, 538, 539, 543, 529, 534, 533, 533, 534, 538, 481, 486, 485, 481, 482, 486, 538, 543, 542, 542, 543, 1744, 533, 538, 537, 537, 538, 542, 542, 1744, 1743, 1743, 1744, 1748, 537, 542, 541, 541, 542, 1743, 532, 533, 537, 536, 537, 541, 532, 537, 536, 1743, 1748, 1747, 1747, 1748, 1752, 541, 1743, 1742, 1742, 1743, 1747, 536, 541, 540, 540, 541, 1742, 1747, 1752, 1751, 1751, 1752, 1756, 1751, 1756, 1755, 1746, 1747, 1751, 1742, 1747, 1746, 1750, 1751, 1755, 1746, 1751, 1750, 1750, 1755, 1754, 1741, 1742, 1746, 540, 1742, 1741, 1745, 1746, 1750, 1741, 1746, 1745, 1749, 1750, 1754, 1745, 1750, 1749, 1749, 1754, 1753, 1736, 1749, 1753, 1736, 1753, 1740, 1732, 1745, 1749, 1732, 1749, 1736, 1728, 1741, 1745, 1728, 1745, 1732, 359, 1741, 1728, 359, 540, 1741, 1735, 1736, 1740, 1735, 1740, 1739, 1733, 1735, 1739, 1731, 1736, 1735, 1731, 1732, 1736, 1729, 1735, 1733, 1729, 1731, 1735, 1730, 1729, 1733, 1726, 1729, 1730, 1726, 1725, 1729, 1725, 1731, 1729, 357, 1725, 1726, 1727, 1732, 1731, 1725, 1727, 1731, 1727, 1728, 1732, 357, 356, 1725, 356, 1727, 1725, 353, 356, 357, 358, 1728, 1727, 356, 358, 1727, 358, 359, 1728, 353, 352, 356, 352, 358, 356, 349, 352, 353, 354, 359, 358, 352, 354, 358, 349, 348, 352, 348, 354, 352, 345, 348, 349, 354, 355, 359, 355, 540, 359, 355, 536, 540, 350, 355, 354, 348, 350, 354, 351, 536, 355, 350, 351, 355, 351, 532, 536, 345, 344, 348, 344, 350, 348, 339, 344, 345, 346, 351, 350, 344, 346, 350, 339, 341, 344, 341, 346, 344, 334, 341, 339, 346, 347, 351, 347, 532, 351, 341, 342, 346, 342, 347, 346, 334, 336, 341, 336, 342, 341, 329, 336, 334, 347, 528, 532, 528, 533, 532, 528, 529, 533, 343, 528, 347, 342, 343, 347, 524, 529, 528, 343, 524, 528, 524, 525, 529, 337, 343, 342, 336, 337, 342, 338, 524, 343, 337, 338, 343, 520, 525, 524, 338, 520, 524, 520, 521, 525, 329, 331, 336, 331, 337, 336, 324, 331, 329, 332, 338, 337, 331, 332, 337, 324, 326, 331, 326, 332, 331, 320, 326, 324, 332, 333, 338, 333, 520, 338, 326, 327, 332, 327, 333, 332, 320, 321, 326, 321, 327, 326, 316, 321, 320, 516, 521, 520, 333, 516, 520, 516, 517, 521, 327, 328, 333, 328, 516, 333, 512, 517, 516, 328, 512, 516, 512, 513, 517, 322, 328, 327, 321, 322, 327, 323, 512, 328, 322, 323, 328, 508, 513, 512, 323, 508, 512, 508, 509, 513, 316, 317, 321, 317, 322, 321, 312, 317, 316, 318, 323, 322, 317, 318, 322, 312, 313, 317, 313, 318, 317, 308, 313, 312, 318, 319, 323, 319, 508, 323, 313, 314, 318, 314, 319, 318, 308, 309, 313, 309, 314, 313, 304, 309, 308, 504, 509, 508, 319, 504, 508, 504, 505, 509, 314, 315, 319, 315, 504, 319, 500, 505, 504, 315, 500, 504, 500, 501, 505, 310, 315, 314, 309, 310, 314, 311, 500, 315, 310, 311, 315, 496, 501, 500, 311, 496, 500, 496, 497, 501, 304, 305, 309, 305, 310, 309, 300, 305, 304, 306, 311, 310, 305, 306, 310, 300, 301, 305, 301, 306, 305, 296, 301, 300, 306, 307, 311, 307, 496, 311, 301, 302, 306, 302, 307, 306, 296, 297, 301, 297, 302, 301, 292, 297, 296, 492, 497, 496, 307, 492, 496, 492, 493, 497, 302, 303, 307, 303, 492, 307, 488, 493, 492, 303, 488, 492, 488, 489, 493, 298, 303, 302, 297, 298, 302, 299, 488, 303, 298, 299, 303, 484, 489, 488, 299, 484, 488, 484, 485, 489, 292, 293, 297, 293, 298, 297, 288, 293, 292, 294, 299, 298, 293, 294, 298, 288, 289, 293, 289, 294, 293, 284, 289, 288, 294, 295, 299, 295, 484, 299, 289, 290, 294, 290, 295, 294, 284, 285, 289, 285, 290, 289, 280, 285, 284, 480, 485, 484, 295, 480, 484, 480, 481, 485, 290, 291, 295, 291, 480, 295, 285, 286, 290, 286, 291, 290, 280, 281, 285, 281, 286, 285, 276, 281, 280, 276, 277, 281, 277, 282, 281, 281, 282, 286, 277, 278, 282, 278, 283, 282, 282, 287, 286, 282, 283, 287, 286, 287, 291, 291, 476, 480, 287, 476, 291, 476, 481, 480, 283, 472, 287, 287, 472, 476, 283, 468, 472, 476, 477, 481, 472, 477, 476, 477, 482, 481, 468, 473, 472, 472, 473, 477, 477, 478, 482, 473, 478, 477, 478, 483, 482, 468, 469, 473, 464, 469, 468, 473, 474, 478, 469, 474, 473, 478, 479, 483, 474, 479, 478, 479, 660, 483, 464, 465, 469, 460, 465, 464, 460, 461, 465, 465, 470, 469, 469, 470, 474, 461, 466, 465, 465, 466, 470, 461, 462, 466, 474, 475, 479, 470, 475, 474, 479, 656, 660, 475, 656, 479, 656, 661, 660, 470, 471, 475, 466, 471, 470, 475, 652, 656, 471, 652, 475, 656, 657, 661, 652, 657, 656, 657, 662, 661, 462, 467, 466, 466, 467, 471, 462, 463, 467, 471, 648, 652, 467, 648, 471, 652, 653, 657, 648, 653, 652, 657, 658, 662, 653, 658, 657, 658, 663, 662, 463, 644, 467, 467, 644, 648, 463, 640, 644, 459, 640, 463, 644, 649, 648, 648, 649, 653, 640, 645, 644, 644, 645, 649, 459, 636, 640, 455, 636, 459, 640, 641, 645, 636, 641, 640, 455, 632, 636, 451, 632, 455, 636, 637, 641, 632, 637, 636, 451, 628, 632, 447, 628, 451, 632, 633, 637, 628, 633, 632, 447, 624, 628, 443, 624, 447, 628, 629, 633, 624, 629, 628, 443, 620, 624, 439, 620, 443, 624, 625, 629, 620, 625, 624, 439, 616, 620, 435, 616, 439, 620, 621, 625, 616, 621, 620, 435, 612, 616, 431, 612, 435, 431, 608, 612, 612, 617, 616, 616, 617, 621, 608, 613, 612, 612, 613, 617, 608, 609, 613, 604, 609, 608, 613, 618, 617, 604, 605, 609, 600, 605, 604, 609, 614, 613, 613, 614, 618, 605, 610, 609, 609, 610, 614, 600, 601, 605, 596, 601, 600, 605, 606, 610, 601, 606, 605, 596, 597, 601, 592, 597, 596, 601, 602, 606, 597, 602, 601, 592, 593, 597, 588, 593, 592, 597, 598, 602, 593, 598, 597, 588, 589, 593, 584, 589, 588, 593, 594, 598, 589, 594, 593, 584, 585, 589, 580, 585, 584, 589, 590, 594, 585, 590, 589, 580, 581, 585, 560, 581, 580, 585, 586, 590, 581, 586, 585, 560, 561, 581, 556, 561, 560, 581, 582, 586, 561, 582, 581, 556, 557, 561, 552, 557, 556, 561, 562, 582, 557, 562, 561, 552, 553, 557, 544, 553, 552, 544, 546, 553, 553, 558, 557, 557, 558, 562, 546, 554, 553, 553, 554, 558, 546, 548, 554, 548, 555, 554, 548, 550, 555, 554, 559, 558, 554, 555, 559, 558, 563, 562, 558, 559, 563, 562, 563, 583, 562, 583, 582, 550, 732, 555, 550, 724, 732, 555, 736, 559, 555, 732, 736, 559, 740, 563, 559, 736, 740, 563, 760, 583, 563, 740, 760, 724, 733, 732, 724, 726, 733, 732, 737, 736, 732, 733, 737, 736, 741, 740, 736, 737, 741, 740, 761, 760, 740, 741, 761, 726, 734, 733, 726, 728, 734, 733, 738, 737, 733, 734, 738, 737, 742, 741, 737, 738, 742, 741, 762, 761, 741, 742, 762, 728, 735, 734, 728, 730, 735, 734, 739, 738, 734, 735, 739, 738, 743, 742, 738, 739, 743, 742, 763, 762, 742, 743, 763, 730, 896, 735, 730, 888, 896, 735, 900, 739, 735, 896, 900, 739, 904, 743, 739, 900, 904, 743, 924, 763, 743, 904, 924, 888, 897, 896, 888, 890, 897, 890, 898, 897, 896, 897, 901, 896, 901, 900, 897, 898, 902, 897, 902, 901, 898, 903, 902, 902, 903, 907, 902, 907, 906, 901, 902, 906, 906, 907, 927, 900, 901, 905, 901, 906, 905, 900, 905, 904, 906, 927, 926, 905, 906, 926, 926, 927, 931, 904, 905, 925, 905, 926, 925, 904, 925, 924, 926, 931, 930, 925, 926, 930, 930, 931, 935, 924, 925, 929, 925, 930, 929, 930, 935, 934, 929, 930, 934, 934, 935, 939, 924, 929, 928, 763, 924, 928, 929, 934, 933, 928, 929, 933, 934, 939, 938, 933, 934, 938, 938, 939, 943, 763, 928, 767, 762, 763, 767, 928, 933, 932, 767, 928, 932, 933, 938, 937, 932, 933, 937, 938, 943, 942, 937, 938, 942, 942, 943, 947, 762, 767, 766, 761, 762, 766, 767, 932, 771, 766, 767, 771, 932, 937, 936, 771, 932, 936, 937, 942, 941, 936, 937, 941, 942, 947, 946, 941, 942, 946, 946, 947, 951, 946, 951, 950, 950, 951, 955, 941, 946, 945, 945, 946, 950, 936, 941, 940, 940, 941, 945, 775, 936, 940, 771, 936, 775, 950, 955, 954, 954, 955, 959, 945, 950, 949, 949, 950, 954, 940, 945, 944, 944, 945, 949, 779, 940, 944, 775, 940, 779, 954, 959, 958, 958, 959, 963, 949, 954, 953, 953, 954, 958, 944, 949, 948, 948, 949, 953, 783, 944, 948, 779, 944, 783, 958, 963, 962, 962, 963, 967, 953, 958, 957, 957, 958, 962, 948, 953, 952, 952, 953, 957, 787, 948, 952, 783, 948, 787, 962, 967, 966, 966, 967, 971, 957, 962, 961, 961, 962, 966, 952, 957, 956, 956, 957, 961, 791, 952, 956, 787, 952, 791, 966, 971, 970, 970, 971, 975, 961, 966, 965, 965, 966, 970, 956, 961, 960, 960, 961, 965, 795, 956, 960, 791, 956, 795, 970, 975, 974, 974, 975, 979, 965, 970, 969, 969, 970, 974, 960, 965, 964, 964, 965, 969, 799, 960, 964, 795, 960, 799, 974, 979, 978, 978, 979, 983, 969, 974, 973, 973, 974, 978, 964, 969, 968, 968, 969, 973, 803, 964, 968, 799, 964, 803, 978, 983, 982, 982, 983, 987, 973, 978, 977, 977, 978, 982, 968, 973, 972, 972, 973, 977, 807, 968, 972, 803, 968, 807, 982, 987, 986, 986, 987, 991, 977, 982, 981, 981, 982, 986, 972, 977, 976, 976, 977, 981, 811, 972, 976, 807, 972, 811, 986, 991, 990, 990, 991, 995, 981, 986, 985, 985, 986, 990, 976, 981, 980, 980, 981, 985, 815, 976, 980, 811, 976, 815, 990, 995, 994, 994, 995, 999, 985, 990, 989, 989, 990, 994, 980, 985, 984, 984, 985, 989, 819, 980, 984, 815, 980, 819, 994, 999, 998, 998, 999, 1003, 989, 994, 993, 993, 994, 998, 984, 989, 988, 988, 989, 993, 823, 984, 988, 819, 984, 823, 998, 1003, 1002, 1002, 1003, 1007, 993, 998, 997, 997, 998, 1002, 988, 993, 992, 992, 993, 997, 827, 988, 992, 823, 988, 827, 1002, 1007, 1006, 1006, 1007, 1011, 1006, 1011, 1010, 1001, 1002, 1006, 997, 1002, 1001, 1005, 1006, 1010, 1001, 1006, 1005, 1005, 1010, 1009, 996, 997, 1001, 992, 997, 996, 1000, 1001, 1005, 996, 1001, 1000, 1004, 1005, 1009, 1000, 1005, 1004, 1004, 1009, 1008, 831, 992, 996, 827, 992, 831, 835, 996, 1000, 831, 996, 835, 839, 1000, 1004, 835, 1000, 839, 843, 1004, 1008, 839, 1004, 843, 843, 1008, 847, 842, 843, 847, 842, 847, 846, 841, 842, 846, 838, 843, 842, 838, 839, 843, 837, 842, 841, 837, 838, 842, 836, 837, 841, 836, 841, 840, 833, 838, 837, 834, 839, 838, 833, 834, 838, 834, 835, 839, 832, 833, 837, 832, 837, 836, 829, 834, 833, 830, 835, 834, 829, 830, 834, 830, 831, 835, 828, 829, 833, 828, 833, 832, 825, 830, 829, 826, 831, 830, 825, 826, 830, 826, 827, 831, 824, 825, 829, 824, 829, 828, 821, 826, 825, 822, 827, 826, 821, 822, 826, 822, 823, 827, 820, 821, 825, 820, 825, 824, 817, 822, 821, 818, 823, 822, 817, 818, 822, 818, 819, 823, 816, 817, 821, 816, 821, 820, 813, 818, 817, 814, 819, 818, 813, 814, 818, 814, 815, 819, 812, 813, 817, 812, 817, 816, 809, 814, 813, 810, 815, 814, 809, 810, 814, 810, 811, 815, 808, 809, 813, 808, 813, 812, 805, 810, 809, 806, 811, 810, 805, 806, 810, 806, 807, 811, 804, 805, 809, 804, 809, 808, 801, 806, 805, 802, 807, 806, 801, 802, 806, 802, 803, 807, 800, 801, 805, 800, 805, 804, 797, 802, 801, 798, 803, 802, 797, 798, 802, 798, 799, 803, 796, 797, 801, 796, 801, 800, 793, 798, 797, 794, 799, 798, 793, 794, 798, 794, 795, 799, 792, 793, 797, 792, 797, 796, 789, 794, 793, 790, 795, 794, 789, 790, 794, 790, 791, 795, 788, 789, 793, 788, 793, 792, 785, 790, 789, 786, 791, 790, 785, 786, 790, 786, 787, 791, 784, 785, 789, 784, 789, 788, 781, 786, 785, 782, 787, 786, 781, 782, 786, 782, 783, 787, 780, 781, 785, 780, 785, 784, 777, 782, 781, 778, 783, 782, 777, 778, 782, 778, 779, 783, 776, 777, 781, 776, 781, 780, 773, 778, 777, 774, 779, 778, 773, 774, 778, 774, 775, 779, 772, 773, 777, 772, 777, 776, 769, 774, 773, 770, 775, 774, 769, 770, 774, 770, 771, 775, 766, 771, 770, 765, 766, 770, 765, 770, 769, 761, 766, 765, 760, 761, 765, 760, 765, 764, 764, 765, 769, 583, 760, 764, 768, 769, 773, 764, 769, 768, 768, 773, 772, 583, 764, 587, 587, 764, 768, 582, 583, 587, 582, 587, 586, 587, 768, 591, 586, 587, 591, 591, 768, 772, 586, 591, 590, 591, 772, 595, 590, 591, 595, 595, 772, 776, 590, 595, 594, 595, 776, 599, 594, 595, 599, 599, 776, 780, 594, 599, 598, 599, 780, 603, 598, 599, 603, 603, 780, 784, 598, 603, 602, 603, 784, 607, 602, 603, 607, 607, 784, 788, 602, 607, 606, 607, 788, 611, 606, 607, 611, 611, 788, 792, 606, 611, 610, 611, 792, 615, 610, 611, 615, 615, 792, 796, 610, 615, 614, 615, 796, 619, 614, 615, 619, 619, 796, 800, 614, 619, 618, 619, 800, 623, 618, 619, 623, 623, 800, 804, 618, 623, 622, 617, 618, 622, 617, 622, 621, 623, 804, 627, 622, 623, 627, 627, 804, 808, 621, 622, 626, 622, 627, 626, 621, 626, 625, 627, 808, 631, 626, 627, 631, 631, 808, 812, 625, 626, 630, 626, 631, 630, 625, 630, 629, 631, 812, 635, 630, 631, 635, 635, 812, 816, 629, 630, 634, 630, 635, 634, 629, 634, 633, 635, 816, 639, 634, 635, 639, 639, 816, 820, 633, 634, 638, 634, 639, 638, 633, 638, 637, 639, 820, 643, 638, 639, 643, 643, 820, 824, 637, 638, 642, 638, 643, 642, 637, 642, 641, 643, 824, 647, 642, 643, 647, 647, 824, 828, 641, 642, 646, 642, 647, 646, 641, 646, 645, 647, 828, 651, 646, 647, 651, 651, 828, 832, 645, 646, 650, 646, 651, 650, 645, 650, 649, 651, 832, 655, 650, 651, 655, 655, 832, 836, 649, 650, 654, 650, 655, 654, 649, 654, 653, 653, 654, 658, 654, 655, 659, 655, 836, 659, 654, 659, 658, 659, 836, 840, 658, 659, 663, 659, 840, 663)

[sub_resource type="FogMaterial" id="FogMaterial_4oj3f"]
density = 0.11
albedo = Color(0.719882, 0.745038, 0.681111, 1)
edge_fade = 13.2514

[sub_resource type="Curve" id="Curve_8d1kf"]
_data = [Vector2(0.440909, 0), 0.0, 0.0, 0, 0, Vector2(0.459091, 1), 0.0, 0.0, 0, 0, Vector2(1, 1), 0.059691, 0.0, 0, 0]
point_count = 3

[sub_resource type="RibbonTrailMesh" id="RibbonTrailMesh_8d1kf"]
shape = 0
section_segments = 1
curve = SubResource("Curve_8d1kf")

[sub_resource type="LabelSettings" id="LabelSettings_3237f"]
line_spacing = -4.0
font_size = 15

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_caqnp"]
resource_name = "M_Fence"
cull_mode = 2
albedo_texture = ExtResource("63_qadhd")
metallic = 1.0
metallic_texture = ExtResource("64_buov7")
metallic_texture_channel = 2
roughness_texture = ExtResource("64_buov7")
roughness_texture_channel = 1
texture_filter = 2

[sub_resource type="ArrayMesh" id="ArrayMesh_s6dmf"]
_surfaces = [{
"aabb": AABB(-4.99715, -1.01197, -0.129874, 4.99761, 1.01197, 0.129874),
"format": 34896613377,
"index_count": 684,
"index_data": PackedByteArray("AAABAAIAAAADAAEABAACAAEAAwAEAAEABQAAAAIAAwAAAAUABAAGAAIABQACAAYAAwAHAAQAAwAFAAcABwAGAAQABwAFAAYACAAJAAoACAALAAkADAAKAAkACwAMAAkADQAIAAoACwAIAA0ADAAOAAoADQAKAA4ACwAPAAwACwANAA8ADwAOAAwADwANAA4AEAARABIAEAATABEAFAASABEAEwAUABEAFQAQABIAEwAQABUAFAAWABIAFQASABYAEwAXABQAEwAVABcAFwAWABQAFwAVABYAGAAZABoAGAAbABkAHAAaABkAGwAcABkAHQAYABoAGwAYAB0AHAAeABoAHQAaAB4AGwAfABwAGwAdAB8AHwAeABwAHwAdAB4AIAAhACIAIAAjACEAJAAiACEAIwAkACEAJQAgACIAIwAgACUAJAAmACIAJQAiACYAIwAnACQAIwAlACcAJwAmACQAJwAlACYAKAApACoAKAArACkALAAqACkAKwAsACkALQAoACoAKwAoAC0ALAAuACoALQAqAC4AKwAvACwAKwAtAC8ALwAuACwALwAtAC4AMAAxADIAMAAzADEANAAyADEAMwA0ADEANQAwADIAMwAwADUANAA2ADIANQAyADYAMwA3ADQAMwA1ADcANwA2ADQANwA1ADYAOAA5ADoAOAA7ADkAPAA6ADkAOwA8ADkAPQA4ADoAOwA4AD0APAA+ADoAPQA6AD4AOwA/ADwAOwA9AD8APwA+ADwAPwA9AD4AQABBAEIAQABDAEEARABCAEEAQwBEAEEARQBAAEIAQwBAAEUARABGAEIARQBCAEYAQwBHAEQAQwBFAEcARwBGAEQARwBFAEYASABJAEoASABLAEkATABKAEkASwBMAEkATQBIAEoASwBIAE0ATABOAEoATQBKAE4ASwBPAEwASwBNAE8ATwBOAEwATwBNAE4AUABRAFIAUABTAFEAVABSAFEAUwBUAFEAVQBQAFIAUwBQAFUAVABWAFIAVQBSAFYAUwBXAFQAUwBVAFcAVwBWAFQAVwBVAFYAWABZAFoAWABbAFkAXABaAFkAWwBcAFkAXQBYAFoAWwBYAF0AXABeAFoAXQBaAF4AWwBfAFwAWwBdAF8AXwBeAFwAXwBdAF4AYABhAGIAYABjAGEAZABiAGEAYwBkAGEAZQBgAGIAYwBgAGUAZABmAGIAZQBiAGYAYwBnAGQAYwBlAGcAZwBmAGQAZwBlAGYAaABpAGoAaABrAGkAbABqAGkAawBsAGkAbQBoAGoAawBoAG0AbABuAGoAbQBqAG4AawBvAGwAawBtAG8AbwBuAGwAbwBtAG4AcABxAHIAcABzAHEAdAByAHEAcwB0AHEAdQBwAHIAcwBwAHUAdAB2AHIAdQByAHYAcwB3AHQAcwB1AHcAdwB2AHQAdwB1AHYAeAB5AHoAeAB7AHkAfAB6AHkAewB8AHkAfQB4AHoAewB4AH0AfAB+AHoAfQB6AH4AewB/AHwAewB9AH8AfwB+AHwAfwB9AH4AgACBAIIAgACDAIEAhACCAIEAgwCEAIEAhQCAAIIAgwCAAIUAhACGAIIAhQCCAIYAgwCHAIQAgwCFAIcAhwCGAIQAhwCFAIYAiACJAIoAiACLAIkAjACKAIkAiwCMAIkAjQCIAIoAiwCIAI0AjACOAIoAjQCKAI4AiwCPAIwAiwCNAI8AjwCOAIwAjwCNAI4AkACRAJIAkACTAJEAlACSAJEAkwCUAJEAlQCQAJIAkwCQAJUAlACWAJIAlQCSAJYAkwCXAJQAkwCVAJcAlwCWAJQAlwCVAJYA"),
"name": "M_Fence",
"primitive": 3,
"uv_scale": Vector4(0, 0, 0, 0),
"vertex_count": 152,
"vertex_data": PackedByteArray("EQCmIv//AAD5/6Yi4joAAPn/piL+/wAAEQCmIuI6AAD5/1oJ4joAABEAWgn//wAA+f9aCf7/AAARAFoJ4joAABEA///+/wAA+f///+I6AAD5/////v8AABEA///iOgAA+f+z5uI6AAARALPm/v8AAPn/s+b+/wAAEQCz5uI6AADl+oP54joAAOX6DQEAAAAA5foNAeI6AADl+oP5AAAAANbvDQEAAAAA1u+D+eI6AADW7w0B4joAANbvg/kAAAAAs98S+OI6AACT3AAAAAAAAJPcAADiOgAAs98S+AAAAACY0n4CAAAAALjVkPriOgAAmNJ+AuI6AAC41ZD6AAAAALLQWvniOgAAAtHRAAAAAAAC0dEA4joAALLQWvkAAAAAMcY2AQAAAADhxb/54joAADHGNgHiOgAA4cW/+QAAAAAJtIP54joAAAm0DQEAAAAACbQNAeI6AAAJtIP5AAAAAPqoDQEAAAAA+qiD+eI6AAD6qA0B4joAAPqog/kAAAAA15gS+OI6AAC3lQAAAAAAALeVAADiOgAA15gS+AAAAAC8i34CAAAAANyOkPriOgAAvIt+AuI6AADcjpD6AAAAANaJWvniOgAAJorRAAAAAAAmitEA4joAANaJWvkAAAAAJoJIAQAAAADWgdH54joAACaCSAHiOgAA1oHR+QAAAAACgOOccW4AAO//iZY8MQAA6/+MlsVnAAAGgOCc5zcAAP//QW++MQAAEYCbdfNuAAD6/0RvSGgAABWAmHVqOAAA8nqD+eI6AADyeg0BAAAAAPJ6DQHiOgAA8nqD+QAAAADibw0BAAAAAOJvg/niOgAA4m8NAeI6AADib4P5AAAAAMBfEvjiOgAAoFwAAAAAAACgXAAA4joAAMBfEvgAAAAApVJ+AgAAAADFVZD64joAAKVSfgLiOgAAxVWQ+gAAAAAebFr54joAAG5s0QAAAAAAbmzRAOI6AAAebFr5AAAAAJ1hNgEAAAAATGG/+eI6AACdYTYB4joAAExhv/kAAAAAFjSD+eI6AAAWNA0BAAAAABY0DQHiOgAAFjSD+QAAAAAGKQ0BAAAAAAYpg/niOgAABikNAeI6AAAGKYP5AAAAAMQjKvriOgAA1SXgAQAAAADVJeAB4joAAMQjKvoAAAAA2xxlAAAAAADKGrD44joAANscZQDiOgAAyhqw+AAAAADkGBL44joAAMQVAAAAAAAAxBUAAOI6AADkGBL4AAAAAMkLfgIAAAAA6Q6Q+uI6AADJC34C4joAAOkOkPoAAAAA4wla+eI6AAAzCtEAAAAAADMK0QDiOgAA4wla+QAAAAAzAkgBAAAAAOIB0fniOgAAMwJIAeI6AADiAdH5AAAAACcArZ1LbgAAF4C8lcA3AAAXgLyVS24AACcArZ3ANwAA7395bsA3AAAAAGp2S24AAO9/eW5LbgAAAABqdsA3AAAyxBL44joAABHBAAAAAAAAEcEAAOI6AAAyxBL4AAAAABa3fgIAAAAAN7qQ+uI6AAAWt34C4joAADe6kPoAAAAAokQS+OI6AACCQQAAAAAAAIJBAADiOgAAokQS+AAAAACHN34CAAAAAKc6kPriOgAAhzd+AuI6AACnOpD6AAAAAA==")
}]
blend_shape_mode = 0

[sub_resource type="ArrayMesh" id="ArrayMesh_yms1f"]
resource_name = "BarnCleanup_SM_Fence"
_surfaces = [{
"aabb": AABB(-4.99715, -1.01197, -0.129874, 4.99761, 1.01197, 0.129874),
"attribute_data": PackedByteArray("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"),
"format": 34896613431,
"index_count": 684,
"index_data": PackedByteArray("AAABAAIAAAADAAEABAAFAAYABAAHAAUACAAJAAoACAALAAkADAANAA4ADAAPAA0AEAARABIAEAATABEAFAAVABYAFAAXABUAGAAZABoAGAAbABkAHAAdAB4AHAAfAB0AIAAhACIAIAAjACEAJAAlACYAJAAnACUAKAApACoAKAArACkALAAtAC4ALAAvAC0AMAAxADIAMAAzADEANAA1ADYANAA3ADUAOAA5ADoAOAA7ADkAPAA9AD4APAA/AD0AQABBAEIAQABDAEEARABFAEYARABHAEUASABJAEoASABLAEkATABNAE4ATABPAE0AUABRAFIAUABTAFEAVABVAFYAVABXAFUAWABZAFoAWABbAFkAXABdAF4AXABfAF0AYABhAGIAYABjAGEAZABlAGYAZABnAGUAaABpAGoAaABrAGkAbABtAG4AbABvAG0AcABxAHIAcABzAHEAdAB1AHYAdAB3AHUAeAB5AHoAeAB7AHkAfAB9AH4AfAB/AH0AgACBAIIAgACDAIEAhACFAIYAhACHAIUAiACJAIoAiACLAIkAjACNAI4AjACPAI0AkACRAJIAkACTAJEAlACVAJYAlACXAJUAmACZAJoAmACbAJkAnACdAJ4AnACfAJ0AoAChAKIAoACjAKEApAClAKYApACnAKUAqACpAKoAqACrAKkArACtAK4ArACvAK0AsACxALIAsACzALEAtAC1ALYAtAC3ALUAuAC5ALoAuAC7ALkAvAC9AL4AvAC/AL0AwADBAMIAwADDAMEAxADFAMYAxADHAMUAyADJAMoAyADLAMkAzADNAM4AzADPAM0A0ADRANIA0ADTANEA1ADVANYA1ADXANUA2ADZANoA2ADbANkA3ADdAN4A3ADfAN0A4ADhAOIA4ADjAOEA5ADlAOYA5ADnAOUA6ADpAOoA6ADrAOkA7ADtAO4A7ADvAO0A8ADxAPIA8ADzAPEA9AD1APYA9AD3APUA+AD5APoA+AD7APkA/AD9AP4A/AD/AP0AAAEBAQIBAAEDAQEBBAEFAQYBBAEHAQUBCAEJAQoBCAELAQkBDAENAQ4BDAEPAQ0BEAERARIBEAETAREBFAEVARYBFAEXARUBGAEZARoBGAEbARkBHAEdAR4BHAEfAR0BIAEhASIBIAEjASEBJAElASYBJAEnASUBKAEpASoBKAErASkBLAEtAS4BLAEvAS0BMAExATIBMAEzATEBNAE1ATYBNAE3ATUBOAE5AToBOAE7ATkBPAE9AT4BPAE/AT0BQAFBAUIBQAFDAUEBRAFFAUYBRAFHAUUBSAFJAUoBSAFLAUkBTAFNAU4BTAFPAU0BUAFRAVIBUAFTAVEBVAFVAVYBVAFXAVUBWAFZAVoBWAFbAVkBXAFdAV4BXAFfAV0BYAFhAWIBYAFjAWEBZAFlAWYBZAFnAWUBaAFpAWoBaAFrAWkBbAFtAW4BbAFvAW0BcAFxAXIBcAFzAXEBdAF1AXYBdAF3AXUBeAF5AXoBeAF7AXkBfAF9AX4BfAF/AX0BgAGBAYIBgAGDAYEBhAGFAYYBhAGHAYUBiAGJAYoBiAGLAYkBjAGNAY4BjAGPAY0BkAGRAZIBkAGTAZEBlAGVAZYBlAGXAZUBmAGZAZoBmAGbAZkBnAGdAZ4BnAGfAZ0BoAGhAaIBoAGjAaEBpAGlAaYBpAGnAaUBqAGpAaoBqAGrAakBrAGtAa4BrAGvAa0BsAGxAbIBsAGzAbEBtAG1AbYBtAG3AbUBuAG5AboBuAG7AbkBvAG9Ab4BvAG/Ab0BwAHBAcIBwAHDAcEBxAHFAcYBxAHHAcUB"),
"material": SubResource("StandardMaterial3D_caqnp"),
"name": "M_Fence",
"primitive": 3,
"uv_scale": Vector4(0, 0, 0, 0),
"vertex_count": 456,
"vertex_data": PackedByteArray("EQCmIv//VNX5/6Yi4jpU1fn/piL+/1TVEQCmIuI6VNURAKYi4jr///n/WgniOv//+f+mIuI6//8RAFoJ4jr//xEAWgniOlTV+f9aCf7/VNX5/1oJ4jpU1REAWgn//1TVEQBaCf///7/5/6Yi/v//v/n/Wgn+//+/EQCmIv///78RAKYi4jr//xEAWgn/////EQBaCeI6//8RAKYi//////n/WgniOv+/+f+mIv7//7/5/6Yi4jr/v/n/Wgn+//+/EQD///7/VNX5////4jpU1fn////+/1TVEQD//+I6VNURAP//4jr///n/s+biOv//+f///+I6//8RALPm4jr//xEAs+biOlTV+f+z5v7/VNX5/7Pm4jpU1REAs+b+/1TVEQCz5v7//7/5/////v//v/n/s+b+//+/EQD///7//78RAP//4jr/vxEAs+b+//+/EQCz5uI6/78RAP///v//v/n/s+biOv//+f////7////5////4jr///n/s+b+////5fqD+eI6/7/l+g0BAAD/v+X6DQHiOv+/5fqD+QAA/7/l+oP5AAD//9bvDQEAAP//5foNAQAA///W74P5AAD//9bvg/kAAP+/1u8NAeI6/7/W7w0BAAD/v9bvg/niOv+/1u+D+eI6AIDl+g0B4joAgNbvDQHiOgCA5fqD+eI6AIDl+oP5AABU1dbvg/niOlTV1u+D+QAAVNXl+oP54jpU1dbvDQEAAFTV5foNAeI6VNXl+g0BAABU1dbvDQHiOlTVs98S+OI6CcCT3AAAAAAJwJPcAADiOgnAs98S+AAACcCz3xL4AAD//5jSfgIAAP//k9wAAAAA//+41ZD6AAD//7jVkPoAAAnAmNJ+AuI6CcCY0n4CAAAJwLjVkPriOgnAuNWQ+uI6h4KT3AAA4jqHgpjSfgLiOoeCs98S+OI6h4Kz3xL4AACH1rjVkPriOofWuNWQ+gAAh9az3xL44jqH1pjSfgIAACbUk9wAAOI6JtST3AAAAAAm1JjSfgLiOibUstBa+eI6/78C0dEAAAD/vwLR0QDiOv+/stBa+QAA/7+y0Fr5AAD//zHGNgEAAP//AtHRAAAA///hxb/5AAD//+HFv/kAAP+/McY2AeI6/78xxjYBAAD/v+HFv/niOv+/4cW/+eI6QIAC0dEA4jpAgDHGNgHiOkCAstBa+eI6QICy0Fr5AACB1eHFv/niOoHV4cW/+QAAgdWy0Fr54jqB1THGNgEAACfVAtHRAOI6J9UC0dEAAAAn1THGNgHiOifVCbSD+eI6/78JtA0BAAD/vwm0DQHiOv+/CbSD+QAA/78JtIP5AAD///qoDQEAAP//CbQNAQAA///6qIP5AAD///qog/kAAP+/+qgNAeI6/7/6qA0BAAD/v/qog/niOv+/+qiD+eI6AIAJtA0B4joAgPqoDQHiOgCACbSD+eI6AIAJtIP5AABU1fqog/niOlTV+qiD+QAAVNUJtIP54jpU1fqoDQEAAFTVCbQNAeI6VNUJtA0BAABU1fqoDQHiOlTV15gS+OI6CcC3lQAAAAAJwLeVAADiOgnA15gS+AAACcDXmBL4AAD//7yLfgIAAP//t5UAAAAA///cjpD6AAD//9yOkPoAAAnAvIt+AuI6CcC8i34CAAAJwNyOkPriOgnA3I6Q+uI6h4K3lQAA4jqHgryLfgLiOoeC15gS+OI6h4LXmBL4AACH1tyOkPriOofW3I6Q+gAAh9bXmBL44jqH1ryLfgIAACbUt5UAAOI6JtS3lQAAAAAm1LyLfgLiOibU1ola+eI6/78mitEAAAD/vyaK0QDiOv+/1ola+QAA/7/WiVr5AAD//yaCSAEAAP//JorRAAAA///WgdH5AAD//9aB0fkAAP+/JoJIAeI6/78mgkgBAAD/v9aB0fniOv+/1oHR+eI6QIAmitEA4jpAgCaCSAHiOkCA1ola+eI6QIDWiVr5AACb1daB0fniOpvV1oHR+QAAm9XWiVr54jqb1SaCSAEAAA3VJorRAOI6DdUmitEAAAAN1SaCSAHiOg3VAoDjnHFuYdXv/4mWPDFh1ev/jJbFZ2HVBoDgnOc3YdUGgOCc5zfo////QW++Mej/7/+Jljwx6P8VgJh1ajjo/xWAmHVqOOHU+v9Eb0ho4dT//0FvvjHh1BGAm3XzbuHUEYCbdfNuo7/r/4yWxWejv/r/RG9IaKO/AoDjnHFuo78GgOCc5zd2wBGAm3XzbnbAFYCYdWo4dsACgOOccW52wP//QW++Mc3/6/+MlsVnzf/v/4mWPDHN//r/RG9IaM3/8nqD+eI6/7/yeg0BAAD/v/J6DQHiOv+/8nqD+QAA/7/yeoP5AAD//+JvDQEAAP//8noNAQAA///ib4P5AAD//+Jvg/kAAP+/4m8NAeI6/7/ibw0BAAD/v+Jvg/niOv+/4m+D+eI6AIDyeg0B4joAgOJvDQHiOgCA8nqD+eI6AIDyeoP5AABU1eJvg/niOlTV4m+D+QAAVNXyeoP54jpU1eJvDQEAAFTV8noNAeI6VNXyeg0BAABU1eJvDQHiOlTVwF8S+OI6CcCgXAAAAAAJwKBcAADiOgnAwF8S+AAACcDAXxL4AAD//6VSfgIAAP//oFwAAAAA///FVZD6AAD//8VVkPoAAAnApVJ+AuI6CcClUn4CAAAJwMVVkPriOgnAxVWQ+uI6h4KgXAAA4jqHgqVSfgLiOoeCwF8S+OI6h4LAXxL4AACH1sVVkPriOofWxVWQ+gAAh9bAXxL44jqH1qVSfgIAACbUoFwAAOI6JtSgXAAAAAAm1KVSfgLiOibUHmxa+eI6/79ubNEAAAD/v25s0QDiOv+/Hmxa+QAA/78ebFr5AAD//51hNgEAAP//bmzRAAAA//9MYb/5AAD//0xhv/kAAP+/nWE2AeI6/7+dYTYBAAD/v0xhv/niOv+/TGG/+eI6QIBubNEA4jpAgJ1hNgHiOkCAHmxa+eI6QIAebFr5AACB1Uxhv/niOoHVTGG/+QAAgdUebFr54jqB1Z1hNgEAACfVbmzRAOI6J9VubNEAAAAn1Z1hNgHiOifVFjSD+eI6//8WNA0BAAD//xY0DQHiOv//FjSD+QAA//8WNIP5AAD//wYpDQEAAP//FjQNAQAA//8GKYP5AAD//wYpg/kAAP//BikNAeI6//8GKQ0BAAD//wYpg/niOv//BimD+eI6//8WNA0B4jr//wYpDQHiOv//FjSD+eI6//8WNIP5AABU1QYpg/niOlTVBimD+QAAVNUWNIP54jpU1QYpDQEAAFTVFjQNAeI6VNUWNA0BAABU1QYpDQHiOlTVxCMq+uI6A8DVJeABAAADwNUl4AHiOgPAxCMq+gAAA8DEIyr6AAD//9scZQAAAP//1SXgAQAA///KGrD4AAD//8oasPgAAAPA2xxlAOI6A8DbHGUAAAADwMoasPjiOgPAyhqw+OI6q4HVJeAB4jqrgdscZQDiOquBxCMq+uI6q4HEIyr6AACN1MoasPjiOo3Uyhqw+AAAjdTEIyr64jqN1NscZQAAAB7W1SXgAeI6HtbVJeABAAAe1tscZQDiOh7W5BgS+OI6CcDEFQAAAAAJwMQVAADiOgnA5BgS+AAACcDkGBL4AAD//8kLfgIAAP//xBUAAAAA///pDpD6AAD//+kOkPoAAAnAyQt+AuI6CcDJC34CAAAJwOkOkPriOgnA6Q6Q+uI6h4LEFQAA4jqHgskLfgLiOoeC5BgS+OI6h4LkGBL4AACH1ukOkPriOofW6Q6Q+gAAh9bkGBL44jqH1skLfgIAACbUxBUAAOI6JtTEFQAAAAAm1MkLfgLiOibU4wla+eI60f8zCtEAAADR/zMK0QDiOtH/4wla+QAA0f/jCVr5AAD//zMCSAEAAP//MwrRAAAA///iAdH5AAD//+IB0fkAANH/MwJIAeI60f8zAkgBAADR/+IB0fniOtH/4gHR+eI6vv8zCtEA4jq+/zMCSAHiOr7/4wla+eI6vv/jCVr5AAAN1eIB0fniOg3V4gHR+QAADdXjCVr54joN1TMCSAEAAJvVMwrRAOI6m9UzCtEAAACb1TMCSAHiOpvVJwCtnUtuNdUXgLyVwDc11ReAvJVLbjXVJwCtncA3NdUnAK2dwDf//+9/eW7AN///F4C8lcA3//8AAGp2wDf//wAAanbANzXV7395bktuNdXvf3luwDc11QAAanZLbjXVAABqdktud78XgLyVS253v+9/eW5Lbne/JwCtnUtud78nAK2dwDf/vwAAanZLbv+/AABqdsA3/78nAK2dS27/v+9/eW7AN5X/F4C8lUtulf8XgLyVwDeV/+9/eW5LbpX/MsQS+OI6CcARwQAAAAAJwBHBAADiOgnAMsQS+AAACcAyxBL4AAD//xa3fgIAAP//EcEAAAAA//83upD6AAD//ze6kPoAAAnAFrd+AuI6CcAWt34CAAAJwDe6kPriOgnAN7qQ+uI6h4IRwQAA4jqHgha3fgLiOoeCMsQS+OI6h4IyxBL4AACH1je6kPriOofWN7qQ+gAAh9YyxBL44jqH1ha3fgIAACbUEcEAAOI6JtQRwQAAAAAm1Ba3fgLiOibUokQS+OI6NP6CQQAAAAA0/oJBAADiOjT+okQS+AAANP6iRBL4AAD//4c3fgIAAP//gkEAAAAA//+nOpD6AAD//6c6kPoAADT+hzd+AuI6NP6HN34CAAA0/qc6kPriOjT+pzqQ+uI6dv2CQQAA4jp2/Yc3fgLiOnb9okQS+OI6dv2iRBL4AAAm1Kc6kPriOibUpzqQ+gAAJtSiRBL44jom1Ic3fgIAAIfWgkEAAOI6h9aCQQAAAACH1oc3fgLiOofWqqqqqqqqqqqqqqqqqqqqqv+//7//v/+//7//v/+//79UVVRVVFVUVVRVVFVUVVRV/3//f/9//3//f/9//3//f/8//3//P/9//z//f/8//3//fwAA/38AAP9/AAD/fwAAVNWqKlTVqipU1aoqVNWqKv8//7//P/+//z//v/8//7+qKlTVqipU1aoqVNWqKlTV//////////////////////9/////f////3////9/////v/9//7//f/+//3//v/9//38AAP9/AAD/fwAA/38AAP9/////f////3////9/////f////3////9/////f////3////9/////f////3///6qqqqqqqqqqqqqqqqqqqqqqKlTVqipU1aoqVNWqKlTVQHx9B0B8fQdAfH0HQHx9B9uDI/zbgyP824Mj/NuDI/y+g4H4voOB+L6Dgfi+g4H4/3//f/9//3//f/9//3//f2CrPalgqz2pYKs9qWCrPakdLA7WHSwO1h0sDtYdLA7WyYBkAMmAZADJgGQAyYBkAJp/mf+af5n/mn+Z/5p/mf81f5r/NX+a/zV/mv81f5r//////////////////////8SqdKrEqnSqxKp0qsSqdKrgKm/V4Cpv1eAqb9XgKm/V/38AAP9/AAD/fwAA/38AAP9/////f////3////9/////f////3////9/////f////3////9/////f////3///6qqqqqqqqqqqqqqqqqqqqqqKlTVqipU1aoqVNWqKlTVQHx9B0B8fQdAfH0HQHx9B9uDI/zbgyP824Mj/NuDI/y+g4H4voOB+L6Dgfi+g4H4/3//f/9//3//f/9//3//f2CrPalgqz2pYKs9qWCrPakdLA7WHSwO1h0sDtYdLA7WyYBkAMmAZADJgGQAyYBkAJp/mf+af5n/mn+Z/5p/mf81f5r/NX+a/zV/mv81f5r//////////////////////9SqVKrUqlSq1KpUqtSqVKoAK3/VACt/1QArf9UAK3/V39Q+Kt/UPirf1D4q39Q+KjFAM8AxQDPAMUAzwDFAM8DSKkbV0ipG1dIqRtXSKkbVzP8FAMz/BQDM/wUAzP8FANl+qv7Zfqr+2X6q/tl+qv6tAEs/rQBLP60ASz+tAEs//38AAP9/AAD/fwAA/38AAP9/////f////3////9/////f////3////9/////f////3////9/////f////3///6qqqqqqqqqqqqqqqqqqqqqqKlTVqipU1aoqVNWqKlTVQHx9B0B8fQdAfH0HQHx9B9uDI/zbgyP824Mj/NuDI/y+g4H4voOB+L6Dgfi+g4H4/3//f/9//3//f/9//3//f2CrPalgqz2pYKs9qWCrPakdLA7WHSwO1h0sDtYdLA7WyYBkAMmAZADJgGQAyYBkAJp/mf+af5n/mn+Z/5p/mf81f5r/NX+a/zV/mv81f5r//////////////////////8SqdKrEqnSqxKp0qsSqdKrgKm/V4Cpv1eAqb9XgKm/V/7//f/+//3//v/9//7//f////3////9/////f////3//P/9//z//f/8//3//P/9//3//f/9//3//f/9//3//f1TVqipU1aoqVNWqKlTVqipUVVRVVFVUVVRVVFVUVVRVCoWFAgqFhQIKhYUCCoWFAm19bP1tfWz9bX1s/W19bP30enn99Hp5/fR6ef30enn9/////////////////////zCqnaswqp2rMKqdqzCqnau5KdvUuSnb1Lkp29S5KdvUQHx9B0B8fQdAfH0HQHx9B9uDI/zbgyP824Mj/NuDI/y+g4H4voOB+L6Dgfi+g4H4/3//f/9//3//f/9//3//f2CrPalgqz2pYKs9qWCrPakdLA7WHSwO1h0sDtYdLA7W5b8ygOW/MoDlvzKA5b8ygJn/ZICZ/2SAmf9kgJn/ZIAZQMx/GUDMfxlAzH8ZQMx//3//f/9//3//f/9//3//f/7Ufyr+1H8q/tR/Kv7UfyoqVapVKlWqVSpVqlUqVapV3dRFKt3URSrd1EUq3dRFKmJAYsBiQGLAYkBiwGJAYsAhK7nVISu51SErudUhK7nV/////////////////////4aBif2GgYn9hoGJ/YaBif3FAGLAxQBiwMUAYsDFAGLAQHx9B0B8fQdAfH0HQHx9B9uDI/zbgyP824Mj/NuDI/y+g4H4voOB+L6Dgfi+g4H4/3//f/9//3//f/9//3//f2CrPalgqz2pYKs9qWCrPakdLA7WHSwO1h0sDtYdLA7W9QH5wPUB+cD1AfnA9QH5wCP8I3wj/CN8I/wjfCP8I3wJ/gU/Cf4FPwn+BT8J/gU//////////////////////+HT8Cnh0/Ap4dPwKeHT8CmeVMFWnlTBVp5UwVaeVMFW")
}]
blend_shape_mode = 0
shadow_mesh = SubResource("ArrayMesh_s6dmf")

[sub_resource type="BoxShape3D" id="BoxShape3D_db60u"]
size = Vector3(5.38531, 1, 0.625)

[node name="Node3D" type="Node3D"]

[node name="VegetationController" type="Node3D" parent="."]
script = ExtResource("1_5goeu")

[node name="Player" parent="." instance=ExtResource("3_ixfdx")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 112.44, 0.853196, 271.617)

[node name="SubViewport" type="SubViewport" parent="."]
use_taa = true
mesh_lod_threshold = 0.0
size = Vector2i(477, 256)
size_2d_override_stretch = true
render_target_update_mode = 4

[node name="Camera3D2" type="Camera3D" parent="SubViewport" node_paths=PackedStringArray("water")]
transform = Transform3D(-1, -1.50996e-07, 0, 1.50996e-07, -1, 0, 0, 0, 1, 114.43, 4.05018, 260.914)
cull_mask = 524287
current = true
fov = 60.0
script = ExtResource("2_xamh6")
water = NodePath("../../WaterShine")

[node name="MeshInstance3D" type="MeshInstance3D" parent="SubViewport/Camera3D2"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 0, 0, 0)
visible = false
mesh = SubResource("PrismMesh_xamh6")

[node name="RayCast3D" type="RayCast3D" parent="SubViewport/Camera3D2"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 0, 0, 0)
visible = false
target_position = Vector3(0, -999999, 0)

[node name="Water" parent="." instance=ExtResource("8_ofyio")]
transform = Transform3D(-79.005, 0, 6.90684e-06, 0, 0.79, 0, -6.90684e-06, 0, -79.005, 111.893, 0, 253.605)
visible = false
mesh = SubResource("QuadMesh_m7j6o")
surface_material_override/0 = SubResource("StandardMaterial3D_giyt4")
metadata/_edit_group_ = true

[node name="WaterShine" type="Sprite3D" parent="."]
transform = Transform3D(300, -3.15877e-05, 0.12905, 0.473781, 0.02, 0.0792828, -0.129175, -5.27193e-06, 300, 118.54, -0.15, 226.114)
material_override = SubResource("ShaderMaterial_xamh6")
cast_shadow = 0
axis = 1
transparent = false
double_sided = false
texture_filter = 0
texture = SubResource("ViewportTexture_hw0cs")

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_ofyio")

[node name="Moon" type="MeshInstance3D" parent="."]
transform = Transform3D(22.24, 0, 0, 0, 22.24, 0, 0, 0, 22.24, 437.25, 105.026, -221.49)
visible = false
cast_shadow = 0
mesh = SubResource("SphereMesh_qdxfb")

[node name="Lighthouse test" type="SpotLight3D" parent="."]
transform = Transform3D(-0.726575, 0, -0.687087, 0, 1, 0, 0.687087, 0, -0.726575, -46.697, 80.4424, -120.427)
visible = false
light_color = Color(0.751976, 0.4016, 0.197852, 1)
light_energy = 1.417
light_indirect_energy = 0.0
light_volumetric_fog_energy = 4.54
shadow_enabled = true
spot_range = 646.855
spot_attenuation = -0.15
spot_angle_attenuation = 2.63902
script = ExtResource("4_qdxfb")

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="."]
transform = Transform3D(-0.788011, -0.123796, 0.603086, 0, 0.979575, 0.201078, -0.615661, 0.158452, -0.771916, 0.631226, 59.1405, 0.28949)
light_color = Color(0.903804, 0.929672, 0.906204, 1)
light_energy = 2.948
light_indirect_energy = 1.374
light_volumetric_fog_energy = 0.539
shadow_enabled = true
directional_shadow_fade_start = 0.682
directional_shadow_max_distance = 456.6
directional_shadow_pancake_size = 6.5

[node name="Trees3" type="Node3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 258.61, 9.53771, -27.38)
script = ExtResource("3_xibtk")
render_mode = 1
modifier_stack = SubResource("Resource_3okr3")
Performance/use_chunks = true
Performance/chunk_dimensions = Vector3(15, 15, 15)
metadata/_custom_type_script = "uid://d3007jjj3ysum"

[node name="ScatterItem" type="Node3D" parent="Trees3"]
script = ExtResource("10_50t84")
proportion = 1
path = "uid://c58mf4eo44edj"

[node name="ScatterItem2" type="Node3D" parent="Trees3"]
script = ExtResource("10_50t84")
proportion = 1
path = "uid://b4e1c54mg25sp"

[node name="ScatterItem3" type="Node3D" parent="Trees3"]
script = ExtResource("10_50t84")
proportion = 1
path = "uid://w2pgqainixb6"

[node name="ScatterItem5" type="Node3D" parent="Trees3"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.00910187, -0.0330963, -0.0363007)
script = ExtResource("10_50t84")
proportion = 1
path = "uid://cvjrfbteqjtf5"

[node name="ScatterItem6" type="Node3D" parent="Trees3"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.00910187, -0.0330963, -0.0363007)
script = ExtResource("10_50t84")
proportion = 1
path = "uid://cmvq85doiab7"

[node name="ScatterItem7" type="Node3D" parent="Trees3"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.00910187, -0.0330963, -0.0363007)
script = ExtResource("10_50t84")
proportion = 1
path = "uid://beh5sykv0bila"

[node name="ScatterItem8" type="Node3D" parent="Trees3"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.00910187, -0.0330963, -0.0363007)
script = ExtResource("10_50t84")
proportion = 1
path = "uid://bfjc2wjsneoxi"

[node name="ScatterItem9" type="Node3D" parent="Trees3"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.00910187, -0.0330963, -0.0363007)
script = ExtResource("10_50t84")
proportion = 0
path = "uid://0socit8j32n3"

[node name="ScatterItem10" type="Node3D" parent="Trees3"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.00910187, -0.0330963, -0.0363007)
script = ExtResource("10_50t84")
proportion = 2
path = "uid://bmenrb45lffyp"

[node name="ScatterItem11" type="Node3D" parent="Trees3"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.00910187, -0.0330963, -0.0363007)
script = ExtResource("10_50t84")
proportion = 0
path = "uid://ydaaplfdio8w"

[node name="ScatterItem12" type="Node3D" parent="Trees3"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.00910187, -0.0330963, -0.0363007)
script = ExtResource("10_50t84")
proportion = 2
path = "uid://glq70tp88i7w"

[node name="ScatterItem13" type="Node3D" parent="Trees3"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.00910187, -0.0330963, -0.0363007)
script = ExtResource("10_50t84")
proportion = 0
path = "uid://cd68ouifornac"

[node name="ScatterShape" type="Node3D" parent="Trees3"]
transform = Transform3D(1, 0, -2.98023e-08, 0, 1, 0, 2.98023e-08, 0, 1, -0.411682, 1.38789, 19.3508)
script = ExtResource("11_bs2qi")
shape = SubResource("Resource_ynw5p")

[node name="Trees5" type="Node3D" parent="."]
transform = Transform3D(0.959235, 0, -0.282609, 0, 1, 0, 0.282609, 0, 0.959235, 57.5246, 9.5377, 150.476)
script = ExtResource("3_xibtk")
render_mode = 1
modifier_stack = SubResource("Resource_0scib")
Performance/use_chunks = true
Performance/chunk_dimensions = Vector3(15, 15, 15)
metadata/_custom_type_script = "uid://d3007jjj3ysum"

[node name="ScatterItem" type="Node3D" parent="Trees5"]
script = ExtResource("10_50t84")
proportion = 1
path = "uid://c58mf4eo44edj"

[node name="ScatterItem2" type="Node3D" parent="Trees5"]
script = ExtResource("10_50t84")
proportion = 1
path = "uid://b4e1c54mg25sp"

[node name="ScatterItem3" type="Node3D" parent="Trees5"]
script = ExtResource("10_50t84")
proportion = 1
path = "uid://w2pgqainixb6"

[node name="ScatterItem5" type="Node3D" parent="Trees5"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.00910187, -0.0330963, -0.0363007)
script = ExtResource("10_50t84")
proportion = 1
path = "uid://cvjrfbteqjtf5"

[node name="ScatterItem6" type="Node3D" parent="Trees5"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.00910187, -0.0330963, -0.0363007)
script = ExtResource("10_50t84")
proportion = 1
path = "uid://cmvq85doiab7"

[node name="ScatterItem7" type="Node3D" parent="Trees5"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.00910187, -0.0330963, -0.0363007)
script = ExtResource("10_50t84")
proportion = 1
path = "uid://beh5sykv0bila"

[node name="ScatterItem8" type="Node3D" parent="Trees5"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.00910187, -0.0330963, -0.0363007)
script = ExtResource("10_50t84")
proportion = 1
path = "uid://bfjc2wjsneoxi"

[node name="ScatterItem9" type="Node3D" parent="Trees5"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.00910187, -0.0330963, -0.0363007)
script = ExtResource("10_50t84")
proportion = 0
path = "uid://0socit8j32n3"

[node name="ScatterItem10" type="Node3D" parent="Trees5"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.00910187, -0.0330963, -0.0363007)
script = ExtResource("10_50t84")
proportion = 2
path = "uid://bmenrb45lffyp"

[node name="ScatterItem11" type="Node3D" parent="Trees5"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.00910187, -0.0330963, -0.0363007)
script = ExtResource("10_50t84")
proportion = 0
path = "uid://ydaaplfdio8w"

[node name="ScatterItem12" type="Node3D" parent="Trees5"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.00910187, -0.0330963, -0.0363007)
script = ExtResource("10_50t84")
proportion = 2
path = "uid://glq70tp88i7w"

[node name="ScatterItem13" type="Node3D" parent="Trees5"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.00910187, -0.0330963, -0.0363007)
script = ExtResource("10_50t84")
proportion = 0
path = "uid://cd68ouifornac"

[node name="ScatterShape" type="Node3D" parent="Trees5"]
transform = Transform3D(1, 0, -5.96046e-08, 0, 1, 0, 5.96046e-08, 0, 1, -11.8643, 0.134911, 31.1072)
script = ExtResource("11_bs2qi")
shape = SubResource("Resource_giyt4")

[node name="Trees6" type="Node3D" parent="."]
transform = Transform3D(0.997355, 0, 0.0726812, 0, 1, 0, -0.0726812, 0, 0.997355, 210.194, 9.5377, 150.476)
script = ExtResource("3_xibtk")
render_mode = 1
modifier_stack = SubResource("Resource_ywoo1")
Performance/use_chunks = true
Performance/chunk_dimensions = Vector3(15, 15, 15)
metadata/_custom_type_script = "uid://d3007jjj3ysum"

[node name="ScatterItem" type="Node3D" parent="Trees6"]
script = ExtResource("10_50t84")
proportion = 1
path = "uid://c58mf4eo44edj"

[node name="ScatterItem2" type="Node3D" parent="Trees6"]
script = ExtResource("10_50t84")
proportion = 1
path = "uid://b4e1c54mg25sp"

[node name="ScatterItem3" type="Node3D" parent="Trees6"]
script = ExtResource("10_50t84")
proportion = 1
path = "uid://w2pgqainixb6"

[node name="ScatterItem5" type="Node3D" parent="Trees6"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.00910187, -0.0330963, -0.0363007)
script = ExtResource("10_50t84")
proportion = 1
path = "uid://cvjrfbteqjtf5"

[node name="ScatterItem6" type="Node3D" parent="Trees6"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.00910187, -0.0330963, -0.0363007)
script = ExtResource("10_50t84")
proportion = 1
path = "uid://cmvq85doiab7"

[node name="ScatterItem7" type="Node3D" parent="Trees6"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.00910187, -0.0330963, -0.0363007)
script = ExtResource("10_50t84")
proportion = 1
path = "uid://beh5sykv0bila"

[node name="ScatterItem8" type="Node3D" parent="Trees6"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.00910187, -0.0330963, -0.0363007)
script = ExtResource("10_50t84")
proportion = 1
path = "uid://bfjc2wjsneoxi"

[node name="ScatterItem9" type="Node3D" parent="Trees6"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.00910187, -0.0330963, -0.0363007)
script = ExtResource("10_50t84")
proportion = 0
path = "uid://0socit8j32n3"

[node name="ScatterItem10" type="Node3D" parent="Trees6"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.00910187, -0.0330963, -0.0363007)
script = ExtResource("10_50t84")
proportion = 2
path = "uid://bmenrb45lffyp"

[node name="ScatterItem11" type="Node3D" parent="Trees6"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.00910187, -0.0330963, -0.0363007)
script = ExtResource("10_50t84")
proportion = 0
path = "uid://ydaaplfdio8w"

[node name="ScatterItem12" type="Node3D" parent="Trees6"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.00910187, -0.0330963, -0.0363007)
script = ExtResource("10_50t84")
proportion = 2
path = "uid://glq70tp88i7w"

[node name="ScatterItem13" type="Node3D" parent="Trees6"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.00910187, -0.0330963, -0.0363007)
script = ExtResource("10_50t84")
proportion = 0
path = "uid://cd68ouifornac"

[node name="ScatterShape" type="Node3D" parent="Trees6"]
transform = Transform3D(1, 0, -4.47035e-08, 0, 1, 0, 4.47035e-08, 0, 1, -6.57603, 0.134911, 49.0567)
script = ExtResource("11_bs2qi")
shape = SubResource("Resource_gqvl0")

[node name="Trees4" type="Node3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 333.91, 9.53771, 254.671)
script = ExtResource("3_xibtk")
render_mode = 1
modifier_stack = SubResource("Resource_3abxa")
Performance/use_chunks = true
Performance/chunk_dimensions = Vector3(15, 15, 15)
metadata/_custom_type_script = "uid://d3007jjj3ysum"

[node name="ScatterItem" type="Node3D" parent="Trees4"]
script = ExtResource("10_50t84")
proportion = 1
path = "uid://c58mf4eo44edj"

[node name="ScatterItem2" type="Node3D" parent="Trees4"]
script = ExtResource("10_50t84")
proportion = 1
path = "uid://b4e1c54mg25sp"

[node name="ScatterItem3" type="Node3D" parent="Trees4"]
script = ExtResource("10_50t84")
proportion = 1
path = "uid://w2pgqainixb6"

[node name="ScatterItem5" type="Node3D" parent="Trees4"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.00910187, -0.0330963, -0.0363007)
script = ExtResource("10_50t84")
proportion = 1
path = "uid://cvjrfbteqjtf5"

[node name="ScatterItem6" type="Node3D" parent="Trees4"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.00910187, -0.0330963, -0.0363007)
script = ExtResource("10_50t84")
proportion = 1
path = "uid://cmvq85doiab7"

[node name="ScatterItem7" type="Node3D" parent="Trees4"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.00910187, -0.0330963, -0.0363007)
script = ExtResource("10_50t84")
proportion = 1
path = "uid://beh5sykv0bila"

[node name="ScatterItem8" type="Node3D" parent="Trees4"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.00910187, -0.0330963, -0.0363007)
script = ExtResource("10_50t84")
proportion = 1
path = "uid://bfjc2wjsneoxi"

[node name="ScatterItem9" type="Node3D" parent="Trees4"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.00910187, -0.0330963, -0.0363007)
script = ExtResource("10_50t84")
proportion = 0
path = "uid://0socit8j32n3"

[node name="ScatterItem10" type="Node3D" parent="Trees4"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.00910187, -0.0330963, -0.0363007)
script = ExtResource("10_50t84")
proportion = 2
path = "uid://bmenrb45lffyp"

[node name="ScatterItem11" type="Node3D" parent="Trees4"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.00910187, -0.0330963, -0.0363007)
script = ExtResource("10_50t84")
proportion = 0
path = "uid://ydaaplfdio8w"

[node name="ScatterItem12" type="Node3D" parent="Trees4"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.00910187, -0.0330963, -0.0363007)
script = ExtResource("10_50t84")
proportion = 2
path = "uid://glq70tp88i7w"

[node name="ScatterItem13" type="Node3D" parent="Trees4"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.00910187, -0.0330963, -0.0363007)
script = ExtResource("10_50t84")
proportion = 0
path = "uid://cd68ouifornac"

[node name="ScatterShape" type="Node3D" parent="Trees4"]
transform = Transform3D(1, 0, -2.98023e-08, 0, 1, 0, 2.98023e-08, 0, 1, -0.411682, 1.38789, 19.3508)
script = ExtResource("11_bs2qi")
shape = SubResource("Resource_u2ymd")

[node name="Terrain3D" type="Terrain3D" parent="."]
data_directory = "res://Assets/Textures/Terrian"
material = SubResource("Terrain3DMaterial_0bgc3")
assets = SubResource("Terrain3DAssets_81a5s")
collision_mode = 4
collision_shape_size = 8
collision_radius = 16
mesh_size = 8
gi_mode = 0
physics_interpolation_mode = 2
top_level = true
metadata/_edit_lock_ = true

[node name="OccluderInstance3D" type="OccluderInstance3D" parent="Terrain3D"]
occluder = SubResource("ArrayOccluder3D_8d1kf")

[node name="Boat" parent="." instance=ExtResource("9_ofyio")]
transform = Transform3D(0.996599, 0, 0.0803245, 0, 0.999834, 0, -0.0803245, 0, 0.996599, 115.878, 0.101501, 255.191)

[node name="Tree1Dead" parent="." instance=ExtResource("22_2pxrh")]
transform = Transform3D(0.494421, -0.148966, -0.856363, 0.0744829, 0.988842, -0.129008, 0.866025, 0, 0.5, 122.779, 1.97592, 262.082)

[node name="Bird" parent="." instance=ExtResource("24_2urbo")]
transform = Transform3D(-0.0136577, 0, -0.0480985, 0, 0.05, 0, 0.0480985, 0, -0.0136577, 117.114, 7.56515, 294.474)

[node name="Bird2" parent="." instance=ExtResource("24_2urbo")]
transform = Transform3D(-0.0136577, 0, -0.0480985, 0, 0.05, 0, 0.0480985, 0, -0.0136577, 117.997, 8.29215, 294.725)

[node name="Camera3D" type="Camera3D" parent="."]
visible = false

[node name="FinanceTemp" type="Sprite2D" parent="Camera3D"]
visible = false
position = Vector2(645, 520)
scale = Vector2(0.662773, 0.47876)
texture = ExtResource("25_xamh6")

[node name="FogVolume" type="FogVolume" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 119.055, 1.626, 218.651)
size = Vector3(134.777, 20.7386, 115.476)
material = SubResource("FogMaterial_4oj3f")

[node name="Terrain3DParticles" parent="." node_paths=PackedStringArray("terrain") instance=ExtResource("29_g6jtk")]
terrain = NodePath("../Terrain3D")
instance_spacing = 0.296875
rows = 80
amount = 6400
process_fixed_fps = 120
mesh = SubResource("RibbonTrailMesh_8d1kf")
shadow_mode = 1
particle_count = 160000

[node name="Control" type="Control" parent="."]
layout_mode = 3
anchors_preset = 0
offset_right = 40.0
offset_bottom = 40.0

[node name="FPSMeter" type="Label" parent="Control"]
layout_mode = 0
offset_right = 40.0
offset_bottom = 23.0
label_settings = SubResource("LabelSettings_3237f")
script = ExtResource("32_4oj3f")

[node name="Dock2" type="StaticBody3D" parent="."]
transform = Transform3D(-9.04408e-08, -1.02564, -4.37114e-08, 5.564e-15, 4.48322e-08, -1, 0.843, -1.10035e-07, 1.91069e-15, 117.387, 0.362869, 261.176)

[node name="SM_Fence_010" type="MeshInstance3D" parent="Dock2"]
transform = Transform3D(1, 1.42109e-14, 2.11758e-22, -7.10543e-15, 1, -1.99862e-22, -1.05879e-22, -2.10243e-22, 1, 0, 0, 0)
mesh = SubResource("ArrayMesh_yms1f")
skeleton = NodePath("")

[node name="CollisionShape3D" type="CollisionShape3D" parent="Dock2"]
transform = Transform3D(1, 7.10543e-14, 8.47033e-22, -7.10543e-14, 1, -1.99862e-22, 1.18055e-19, -2.10243e-22, 1, -2.25909, -0.490685, 0.1875)
shape = SubResource("BoxShape3D_db60u")

[node name="Dock" type="StaticBody3D" parent="."]
transform = Transform3D(0.128996, -1.01356, -4.60341e-08, -0.0686519, -0.0129334, -0.996598, 0.830238, 0.15641, -0.0824081, 117.387, 0.362869, 257.072)

[node name="SM_Fence_010" type="MeshInstance3D" parent="Dock"]
transform = Transform3D(1, 1.42109e-14, 2.11758e-22, -7.10543e-15, 1, -1.99862e-22, -1.05879e-22, -2.10243e-22, 1, 0, 0, 0)
mesh = SubResource("ArrayMesh_yms1f")
skeleton = NodePath("")

[node name="CollisionShape3D" type="CollisionShape3D" parent="Dock"]
transform = Transform3D(1, 7.10543e-14, 8.47033e-22, -7.10543e-14, 1, -1.99862e-22, 1.18055e-19, -2.10243e-22, 1, -2.25909, -0.490685, 0.1875)
shape = SubResource("BoxShape3D_db60u")
